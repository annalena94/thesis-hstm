,from_idea_to_product,outcome_numeric,gender
0," We started super lean. Our first “game” was four screens, with two fightable enemies. We worked with a friend of the family (Paul Slusser who worked on AAA games like Orcs Must Die) to make some rad art assets for us, and pieced together a prototype level. My co-founder, Dave, ended up building his own game engine from scratch to run it. I produced all of the music/SFX and worked with Paul to get the art assets ready. After a few months, we had a demo level where you shrunk down to fight foot fungus under a toenail. Our demo took ~15mins to play through. --- Did you run into any obstacles in this process? What did you do to overcome them? And how did you approach the pricing strategy? The demo only worked on PC, had a ton of bugs, and took WAY too much time to produce. We were able to show the concept, but also found that producing a larger game was going to be significantly more work than we anticipated. This was the main issue that killed the project. --- Did you enjoy the process of getting started / building it? Did you launch/publicize it in any way? If so, how did that go? Yeah! This was a ton of fun to figure out and build from scratch. Sad it didn’t turn into anything, but the concept of video game random encounters as more engaging flashcards worked when we tested it, so might return to it in the future when I’m bored on a rainy day using a newer tool like RPGmaker to simplify a lot of the pain points we had. ",0,0
1," I built 10er as a Ruby on Rails app. Ruby and Rails are amazing things. I strongly believe that if I’d built it in anything else it might’ve never been done. I think it took about a month of work on the side and consisted of as little as possible. A signup form with a credit card and email fields, an account page listing subscription and a script to charge people once a month for the previous month’s released episodes. Doing as little as possible was on purpose. Podcast audiences (at least ours) are a very loyal and engaged lot and I think it helped a lot that they knew the service was built by me for us. So when my charge script went rogue on the very first run and charged some people multiple times when it should’ve just charged once, people were barely anything but amused that I’d made such a stupid mistake. I’ve found this to be the case every time I’ve messed up (lost count!): Respond quickly and honestly. Don’t get defensive or shovel it under the rug. Most people will forgive you if they can sense that you are genuinely trying to do good. ‍",1,0
2," Well, funnily enough, I’d just done Learn Node by Wes Bos so I built the whole thing in Node and Pug which was the stack Wes used. This took me about one and a half months.  But unfortunately, that stack fell down at the final hurdle. I couldn’t get the text on the editable tweet to go blue when someone used a # or @ key. So I started from scratch. Did another Wes Bos course, React for Beginners course and built the whole thing in that which took me another month.  At the time I thought this made sense. And that the site had to be perfect. Wow, how wrong I was. Looking back now converting the whole site from Pug to React purely for this blue text effect was a really really awful idea. I just naively had it in my head that things had to be perfect.  At that time I didn’t have anyone there to say to me, “Oh, by the way, you definitely shouldn’t change the whole codebase over because of some inconsequential highlighting problem. Look at the bigger picture.”  And when it’s just yourself making decisions in a vacuum your mind can play tricks on you. I just wanted it to be perfect.  Whilst I was building the site my co-founder Giles was sorting out suppliers. I think he just called up about twenty printers in the UK and American and claimed he was starting some venture capital canvas company so he persuaded one or two to offer discounts.",0,0
3," 40 Aprons grew slowly my focus was not on my blog as a business for many years but was more of a hobby. After something like 7 or 8 years, teetering on the edge of total burnout from agency life, I realized that it was time to take all the energy and skill I was applying to my clients at work and give my blog my all. We moved into a new house, and I quit my job, half-jokingly worried that we’d quickly default on our mortgage. Instead, this new focus on my blog as a business paid off in spades, and my traffic, and, consequently, revenue grew rapidly. My business model is pretty simple: I make most of my income off of display ads shown to my visitors, so the more traffic I have, the more revenue I make, typically. It gets a bit more complicated than that with seasonal RPMs (revenue per mille - the money I make per thousand impressions of an ad), but that’s ultimately what it comes down to. I also freelance as a food photographer and digital marketer, sell products related to my blog, make affiliate income off of products I recommend, and work on sponsored posts with various companies. In December 2017, all of these elements added up to over $11,000 in income. January 2018’s income is closer to $18,000, thanks to seasonally high traffic and product sales. My ad revenue in January, despite year-long RPM lows, was over $13,000, a number I simply couldn’t have fathomed a year prior.  ",1,1
4," It was late-2011 when I got a call from one of my founder friends offering me to join his telecom company. Telecom was doing it great in those days and all the businesses in the industry were making good money. We met that same weekend and I was convinced to leave my Govt job and started working with him. I told him up front that I wanted to start my own stuff very soon and he said that his company would be my first customer. I joined his telecom company in the first quarter of 2012 and started working on a mobile app that could help site engineers to capture a few network parameters and create a site survey report. We came up with the first prototype quickly and got a great response from the market. 2012 was a roller coaster and we made some good money for all of us. During the off-seasons of telecom (we were working on passive infrastructure work so our work was a lot seasonal during those days), I quit the company after one and a half years and started Adleaf Technologies. That same week, a close family friend visited me and asked about what I was doing. I told him about my recent work experience with the latest company and also told him about my upcoming plans. He became really interested in Adleaf that day. The following week, I received a call from him telling me he was interested in investing in the startup. He asked me how much money I was planning to invest in it, to which I answered that half a million Indian Rupee (+$6600 USD). He offered another 500k and asked for a 50-50 partnership. This man came from the real estate business. He had a lot of money so I decided to accept it. At the same time, he offered us loans with really low-interest rates which were really helpful. That same day, I called my CA and requested him to prepare the papers for our new company. We came up with the name: Ad(vance)Leaf Technologies Pvt Ltd. The company got registered and we did our religious rituals in our newly designed office which we had made with an INR 100K investment - that was the first mistake, but I was convinced by my co-founder that old furniture would give a cheap look to our office. We bought computers, printers, and Macs. We were spending a lot on infrastructure. I invested INR 150K till then and my partner had given INR 300K. We were down with INR 450K before getting a single penny in revenue. The next day, we went to a printing shop to get our marketing material designed. We got our pamphlets, identity cards, visiting cards, office stationery, and marketing flex hangings.",0,0
5," Thankfully, the same professor who set me on the software path had been through startups before and encouraged me to start with the “fake it til you make it” spreadsheet business model. So - I used a simple landing page builder to “fake out” a two-sided marketplace with a static listing of Bloggers who were looking for sponsors (brands to partner with), and then a listing of brands with opportunities to collaborate with Bloggers. I had a Google Form on that page for more bloggers to sign up, and if they signed up, I sent them a survey form to collect more information as market research (How do you currently monetize? How many hours a month does managing your brand partnerships take? etc.). I also asked them if they had any friends who were bloggers that they thought would be interested. That helped grow that side of things at least in the static market research stage and I found out that most bloggers ran in pretty close online circles, so breaking into one or two influential bloggers in a digital community could lead to the rest hopping onboard. On the brand side, when I had a good enough listing of bloggers (just like 15 or 20) on the site, I printed out little flyers and went to a local Handmade / Vintage Goods convention (like if Etsy sellers were in a convention center). I introduced the idea to them and collected feedback and email addresses. This market validation stage probably lasted 3-4 months and was basically me having conversations with one side of the marketplace, taking tons of notes and making adjustments to a static landing page, then going to the other side of the marketplace, and back and forth. It was just me running the process with Google Forms, Google Sheets, and a landing page builder. I used Photoshop to make a little animated explainer video, made my own landing page as a fundraising business, compiled all that market research, scraped together my own cash and some friends/family investment, and then did a first small fundraising round/equity partnership with an accelerator of sorts from there. After building the MVP of the actual software marketplace, we sponsored a blogging conference with 300 attendees. It honestly went well! It helped us build a core base of bloggers using our tool. The strategy was to first launch with a one-sided approach, focused on creating a tool for bloggers that they would embed on their own blogs to create a public listing page they could point advertisers to and then manage their own queue of advertiser submissions. The idea was that this would also introduce us to brands who were coming through the widget we had embedded across the network of blogs and then we could build out the brand marketplace offering. With blogs, we charged no flat fee, just a 10% commission of display ad sales… and we covered payment processing. I pretty adamantly wanted this to be a really accessible tool for bloggers and wanted it to be a completely open self-service marketplace (as in bloggers had complete control of their own setups). We didn’t charge brands at first, either, hoping we could get enough volume to scale transactions and turn a profit. ‍",0,0
6," Eric: We first tested the concept by partnering with an established insurance company in the student property protection space. Once we saw the initial response to the product and the areas where we needed more flexibility, we switched to a new underwriting partner that allowed us to take over full control of the program and create completely customized protection and a far better customer and claim experience. Jared: The biggest question was, how do you scale an amazing customer experience using tech? From Day 1, our focus was on the design and user experience of a tech platform that would make it easy for users to inventory and protect their items, all in one place. The goal was for our users never to worry or wonder about what was protected and what wasn’t and to give them a single destination for all their support questions, repairs, and replacements. Eric: Since launching, we’ve gotten picked up organically by several news outlets that recognized the uniqueness of our approach and how much more customer-friendly it is. That resulted in a massive rise in customer and brand awareness, signups, partnerships, etc. Our collaboration with the Repairs First Association has been particularly beneficial because we can sell plans through hundreds of local repair shops and send customers to them when they make repair claims. The focus on the claims experience that they’ve enabled has been enormous for us.",1,0
7," For our first handful of enterprise customers, we built a customized predictive hiring model for each. The advantage of this was that we weren’t beholden to any assumptions and were free to tailor to the customer’s data and business questions. This was great for exploratory models that resulted in presentations and discussions. The disadvantage was that these models were not ready to be put into production. With each new customer, we essentially started over.  After doing this a handful of times, we moved on to build a scalable platform that could do the following across customers: ingest data, fit a model, and return suggestions about live applicants. However, we failed on data ingestion, because none of our customers provided us live access to their HR systems. For some, their systems simply lacked APIs, for others it was security concerns, for others it was simply bureaucracy.  We also realized another fundamental problem: many companies don’t trust their own recruiting data - they know that applicant’s can game the system, or just straight-up lie.  So we pivoted to focusing on interviews, which most of our customers believed (a) can provide more signal than an application or resume when done well, but (b) are often done poorly today. We built a platform that allowed companies to plan structured interviews, assign an interviewer panel, and record structured feedback.  ‍ The (hopefully) headline-grabbing feature was an AI notetaker: for phone interviews, Ansaro provided a conference line, recorded the call (automatically notifying all participants beforehand), and sent the recruiter an AI-generated transcript and summary.  Problems with the 2nd version of included: Companies that prioritized improving their interviews were generally already using new applicant tracking systems like Lever and Greenhouse, which had all the functionality we had and more (the only thing they lacked was the AI notetaker.)Companies that did not prioritize improving their interviews didn’t have Ansaro functionality - but they weren’t interested in buying Ansaro!The AI notetaker didn’t solve a huge pain point. Notetaking in interviews is annoying, but not a billion-dollar problem. Moreover, the AI transcription quality wasn’t great, so recruiters preferred to spend the time taking their own notes, rather than editing a mediocre transcript, to share with a hiring manager.  ‍",0,0
8," I realized that I would need helping hands if I did this, so I brought in my two brothers and a school friend. We mocked the UI with Sketch and developed the application with the latest web technologies. Sure there were obstacles, unforeseen bugs are not uncommon, but we fought our way through. It took us about 2 years until we could go live. First, we launched the software for free, at no cost. People would use software that nearly offered the same amount of features as our competitors, but completely free of cost, with better performance and a clean UI/UX. They helped us boost our ranking on google and at the same time, they tested our tool in a way we could’ve never done by ourselves. So after all bugs were fixed and our software was running smoothly we created 3 pricing models. As a token of gratitude, our first customers will remain in the premium plan for free forever.",1,0
9," The process took a little over a year of development, just to get our MVP launched. Typically, this isn’t recommended but what we’re trying to accomplish is very data heavy so we spent the extra time focusing on optimizing our architecture and building a data warehouse. We still launched with a few features not available. We started asking if we needed any of the remaining features for a user to successfully get the outcome they wanted from the tool. If the answer was no, it was left on our backlog and we geared up for launch! Here’s a “launch” video we made that you can include if you would like. Only one of us is technical as well. My co-founder built our entire platform by himself while I focused on revenue growth for our first tool and building our audience.  To launch Aura we had built a very large Facebook group by providing daily value to 5,000+ people. This gave us a direct line to a targeted audience that already knew and trusted us. To “launch” the product, we teased the launch for about a week and then hosted a Facebook Live event with an exclusive offer to the first 100 users, which were claimed very quickly. ",1,0
10," I began the business, by first figuring out how to procure genuine auto parts. In India, retail availability of genuine car parts is a big challenge, given that many spurious parts are sold, making it hard to differentiate them from the original ones. Luckily, a few phone calls to Bosch, got me into meeting their local sales head who helped me to get in touch with genuine distributors. In parallel to this, I started searching reliable mechanics. My idea was to start with just one mechanic, full-time hired and based on traction & demand expand. I was lucky again, as, after screening 8 candidates, I got a really good one. I initially called the company GeniusMechanic and bought the domain on GoDaddy. The idea was to make it SEO friendly and get customers by ranking for different keywords. I built the website really simple, using Tilda. However, after receiving some feedback from friends and customers, I decided to rename GeniusMechanic to Autto.in. After getting some customer traction, I decided it was time to build a website with a booking feature. Again, without coding, I was able to do it really quickly, using Bubble, which is a UI based app builder, and Chatra, which allowed me to embed on the site a chat application to receive customer bookings.",0,0
11," We've been working non-stop. After 10 days of hard work, we had a business model and two designers ready to start as soon as we find customers. Unexpectedly, our acquaintance Tilek asked us for help with startup branding. He became our first client.  After getting the initial proof that our concept makes sense, we decided to test it in a coworking space we were renting at that time.  We had no website at first because we wanted to validate the idea with at least 5-10 successful cases before any development. That was exactly what Roman said: ""I won't write a single line of code before we understand that it's worth it."" For 2 months, we were working with clients via email. Eventually, it became unbearable to handle the whole process without a platform, so we were on to it. Roman went into a hackathon mode with energy drinks and food delivery, and the web app was ready in 3 days. So this will be our second insight - always test your ideas, observe them, and don't be afraid to make amends or even abandon some concepts if they don't work out. ‍",1,0
12," Because I had been in the shoes of my customers and made all the mistakes myself (building a bad pitch deck, talking to only a few investors, etc.), the whole process of building the company was quite natural for me. I started with my own experiences and shared them as content pieces. These were not just simple blog articles but little helper tools that I wished I had when fundraising. For example, you can have a look at our collection of pitch decks or our investor pitch training tool.  I always kept thinking about which products should be added. I started with pitch deck templates but knew that for successful fundraising, founders would also need a solid financial model and a way to track their investor relations. So I came up with products for that as well.  Luckily, I would describe myself as a swiss-army-knife, meaning I can build and design most of the stuff myself. That has saved me a lot of time and money. Another very useful thing in building BaseTemplates was no-code tools like Webflow or Airtable. Nevertheless, during the first months of running the business, I had the feeling that we were not growing and that only very few people knew about BaseTemplates. That changed when we first launched on Product Hunt. It was a quick start of what became a steady growth to the point we are now.",1,0
13," Beardbrand is a bootstrapped business so keeping our costs down has always been a top priority. To do that, we started off as a retailer and tested the market with other brand’s products. If they were successful we’d develop our own and phase out the other brands. Our initial product was beard oil and I found a lot of the products on the market were a little heavy, shiny, and too fragrant. Since the product goes right under your nose, we wanted the fragrance to be subtler and from a performance standpoint it needed to be lightweight and absorb quickly into the beard. A healthy satin shine is the finish that we desired. After many formulations and versions, we settled on a formula that we believed to be class leading. The market agreed and saw great success with our beard oils. All the profits we made went directly back into the business. In the early days, we tried many different things and I always wanted for Beardbrand to be a lifestyle company, so we tried shirts, suspenders, leather products, and accessories. As much as I tried to force those products, they never got the same traction as our grooming product launches. Finally, I relented and focused on becoming a men’s grooming brand rather than an apparel company. It probably took me way longer than it should have. Beardbrand grew rapidly in the first year as we were telling a unique story at the time and reaching men who have never had a tribe before. We were one of the first companies to make a beard oil and invested heavily into educating the market. This helped us stand out and grow organically. With our unique product, brand, and sales trajectory we were able to get onto Shark Tank. Shark Tank helped give us exposure to a large audience and accelerated our growth path. I think we would have been able to get to where we are now without that experience, but I’m very grateful and lucky to have appeared on the show. We still get minor bumps from the reruns on CNBC.",1,0
14," I cringe as I write this because looking back I recognize a whole heap of massive mistakes I made. What I am about to write is an object lesson in “how not to start a business”, and I would implore anyone reading this takes note because you’d probably be best advised to do the exact opposite! My working hypothesis was simple: my current employer needs a competent IT person, but they only need them for a handful of hours a week. There must be other businesses in a similar position - find them and work for as many as you can find. Sounds beautifully simple, doesn’t it? I didn’t even need a product my experience would make me a valuable asset that any company would delight in getting for a fraction the cost of a full-time salary. Put up a website, sort out a phone line, sit back and wait for the calls to come in. (Okay, you can stop laughing now. I actually did this). I think I spent a few weeks on making sure I had all the technology in place to support clients and that was pretty well it. Once it was in place, I was straight to work. The initial idea was simple: get yourself an IT support contract and get professional support in minutes. ‍ Who was involved? This was my first mistake, and one I never really rectified. One of the first things I did was engage a marketing professional to help me research the market. It didn’t really do me any good - I paid £400 to be told “I’m sure your business idea is viable - I know a chap doing something very similar - but I haven’t been able to find anyone who might be a potential client! Most of the people I’ve spoken to have been extremely rude in telling me they weren’t interested.” In retrospect, I should have taken this as a warning. ‍ What resources/tools did you use? A few things: A VoIP phone. These are great you can choose a phone number from pretty well anywhere in the world and have it route to the phone. You don’t need a new phone line fitted it works over your broadband.A phone answering service. Initially, I redirected the phone to my mobile, but that just made me look amateurish when it went to voicemail. There are lots of companies out there I used a firm called answerjam - they offer a pay-as-you-go service and it’s all set up online. Redirect the phone to them, let them take a message and they’ll text it to you.Wordpress. It’s quite easy to set up a reasonably professional website with this later on, I discovered Themeforest (which has a range of high-quality templates at stupidly cheap prices). Combine this with some stock photos and you can get a great looking website for £50-100.Bomgar. This is a remote support product that I’ve used for many years. It’s a Rolls Royce product with a price tag to match, but it’s worth every penny. I’m sure you’re hoping I’ll list off a range of “idiot’s guide to marketing” books, but the truth is I didn’t find any of these particularly helpful. Most of them would have been great at providing inspiration for someone who already knows a bit about marketing, but they were lousy for someone who doesn’t know enough about business to even know that a marketing strategy should exist, let alone what it should look like. ‍ How did the initial product look? “Product”s a bit of a strong word in this context quite simply, there wasn’t one. The website, however, looked cheap. Because it was cheap. I had zero contact from it and in retrospect, I’m not surprised. It didn’t start to look good until I bought a proper theme for it and paid someone to write some copy. ‍ Did you enjoy the process of getting started/building it? I did, but in retrospect, that’s because I was deep in Dunning-Kruger territory. I had absolutely no idea of the depths of my ignorance if I had, I’d have been paralyzed with fear. ‍ Did you launch/publicize your product in any way? How did that go? Did it go as expected? I advertised in the local press, bought ads on Google and generally did everything I could think of to make a splash. It was a disaster. I had no concept of a sales funnel, little idea of conversions, A/B testing, market research, positioning within a market…. the list goes on and on. I tried to appeal to everyone and in the process appealed to no-one anyone with any business experience will tell you this is a recipe for disaster I started from there and it didn’t get much better!",0,0
15," So as I mentioned, my business days started really early in my life.  It's just like they say: When it's right, you know it. And I knew that I was somehow destined to become an entrepreneur.  From a very young age, I started buying, selling, and reselling candies, CDs, and whatnot.  My first more serious project was AdvertSMS. It was a college dream of mine and a couple of my friends, and even though it didn't last long, it served me as a lesson on what to do next.  Launching a business is never easy. It comes along with high levels of stress and anxiety. And not to mention loans. That's why it is important to find the right strategy.  Though it may sound dreamy at the beginning, having your own company, reality quickly comes barging in.  In the beginning, I depended entirely on freelancing platforms. That was okay when I had only 4 interns working for me. But then a big project came out of nowhere, so I had to hire a few more people.  Having 10 employees only meant that I couldn't rely solely on the freelancing platforms anymore.  That was my awakening moment. If I wanted to have my company up and running, I had to start looking for some serious work. But knowing that nothing great comes without risk, I put my ego and fears aside and started to reach out to people.  At first, I was doing it the wrong way. I was desperate to sell my services, to show the world what is BizzBee all about, and, of course, I failed.  That's how I learned not to make decisions out of despair. Being salesy and pushy got me nowhere. So when I changed my approach, when I started reaching out to people with the sole intention of starting a conversation and building a relationship, the numbers changed, too.  Within 12 months, I and the bees grew the company from zero to 20 employees, supporting more than 100 companies worldwide across different industries. And within 24 months, the company grew to 35 employees, and the number of clients we served doubled to 200 (see our Portfolio), as well as doubling the company turnover. ",1,0
16," The first version of Blogging for Devs went from idea to launch in under 3 weeks. I’d heard so many versions of the mantra, “Launch fast. Get emails.” and I took that to heart. I used ConvertKit to create an email course, delivered as a sequence over 9 days: an intro email, the 7-day challenge, and a conclusion email. Thanks to about 8 friends who agreed to be beta testers, I iterated over the email content about 2 times before deciding to go live. The main thing I did was cut the scope, and focus on making the course outcome-oriented: “Create an optimized article for your developer blog, step by step, in 7 days.” After that took off, I launched a private, invite-only community that was free for the first 100 people. I wanted to test whether it was the right format, and also form the culture slowly and intentionally at the beginning. Eventually, it took up so much of my time that I knew I needed to go paid. I gave myself the famous “12 startups in 12 months” challenge and launched the community as a paid offering in under a month. My main marketing strategy was building in public on Twitter and growing the waitlist that way. Within the first week of launch, over 20% of the waitlist had converted to paying members. ",1,1
17," SHAKED: Botnim started as a Messenger chatbot. The main reason behind it was that chatbots are very easy to develop. I have already been working enough time with chatbots in order to know that it would take less time to be ready for production in comparison to a website that looks good on all devices. I think that the main difference is that developing chatbots means you don't deal with UI at all, and coming from a more backend background that was a great solution, so I developed it using PHP on a nginx server. Unfortunately, there are also tradeoffs. Using chat in real time - e.g walking in the street and looking for a restaurant, seemed like an issue. Messenger's bots sometimes have slowness issues which were unacceptable. The worst thing happened when we showed the chatbot to business owners and we had to apologize for its slowness. At that point, we took some time to rethink about Botnim’s concept. After few days, maybe a week, Gilad came up with the idea of creating a map that will show all the dishes we have and allow users to filter them by different nutritional values and food preferences such as vegan/vegetarian/all. Few days after I sent Gilad a link and the map was there integrated with all of our data. This was a huge breakthrough because this time business owners loved it. I built Botnim.co using PHP, jQuery, Bootstrap (even though I'm sure I could have skipped it) & MapBox - as it works much better than Google Maps. ‍ GILAD: I remember the day when I first went door to door after changing from the slow ugly bot to the map. Every single restaurant was interested and thought it was cool. Once the website was available, we spoke to our friend Naama which is a graphic designer, asked for some design improvements and she volunteered to help. At the end, we got a very nice result! As to the business model, in hindsight, it was quite a complicated model. We were counting on getting paid from 3 different sources: Restaurants - paying for showing their dishes and promoting them on the app.Users - while it was meant to be a free service, we did think some users with special desires or needs will be willing to pay for unique searches, like allergens and stuff like that.The Laboratory - we figured that since we’re supplying the laboratory food to analyze, we could charge commission from the laboratory, based on volume.Funny enough, the lab was the only source that right from the beginning stated their willingness to pay. The lab people knew that they will get their fair share either way. Coordinating 3 sources of income on the first attempt for a startup was a bit unrealistic I think for two people.",0,0
18," I first conceived of Bounce as an Uber for your things. The idea was that you could drop off your belongings at a local business and have them deliver them to you somewhere more convenient. But an idea is pretty much useless until you get it out in front of customers and see if it’s something they need. So we threw a landing page up just to test the waters and had our first ‘Bounce’ request five minutes later.  In the beginning, my co-founder and I were riding around New York City on bikes to deliver people’s luggage. That was the very first version of Bounce, and we began writing code after that. But keeping up with the growing customer base took up all of our time, and there seemed no way to scale it. It was hard to imagine we could pay someone enough to do what we were doing and deal with the logistics of meeting customers. So we shifted to a model where customers would drop off their things at a Bounce location, and we sent them to another Bounce location. When we implemented that, we found that a lot of people were willing to pick up their bags at the same location they dropped them off at, which made things a lot easier from the logistics side.",1,0
19," The first order of business was figuring out our actual product: our initial line of workstation furniture. Right after starting the business, we raised a little money from friends, family and a few angels. At this point, we had little more than a deck and a few dozen customer interviews. We needed the funding to head over to develop our first furniture products if you’re building a software business, you might not have to raise right away. Though we wanted to manufacture in the US where we are based, we realized that small-batch manufacturing domestically would be prohibitively expensive for the time being. After researching a half dozen countries, we settled on China due to its exceptional value and quality for price in manufacturing durable goods, even with tariffs many of our high-end competitors manufacture in China as well.  In October 2018 my co-founder Greg flew to China, hired a translator, and began visiting factories. We ultimately found two manufacturing partners who agreed to take a risk--many high-quality vendors are as selective with their partnerships as their retail partners are--and produce a test run of furniture for us. We ended up kicking off with an adjustable height desk, standard desk, open office benching, and an ergonomic chair, striking the balance between a lean line and a complete solution.  While Greg was finalizing our initial line, I was working on building our digital presence. We decided to launch on Shopify because of its robust infrastructure and selection of apps, found an off-the-shelf theme and customized it to our needs. Once we received our samples, we hired a photographer and took our first photos great photography is paramount for a visual product like ours. In February 2019, we officially launched.  This was one of the more stressful phases of building the business: the two of us and our third co-founder Verity were paying ourselves little to nothing, and encountering new questions every day on everything from international freight forwarding to furniture design. ",1,0
20," Looking through my git history shows an initial commit back in August of last year! In the end, I wanted the final product to have two forms: a docker image which you could license and run anywhere, and a monthly subscription model where we host all the tech for you. Mike Perham (founder of SideKiq) was a huge inspiration for this model, and I’ve followed in his footsteps quite a bit. With that in mind, I built out the core of the infrastructure into one containable unit (open-sourced here). At its center, it’s just a small web-server that proxies traffic into headless-chrome, but adds some nice features like queueing and a really nice debugger (check it out here!). Once I arrived at this stage I had the help of a few other developers test it out. This part is somewhat crucial as it helped validate the idea before I started to build anything regarding billing and accounts. These early users, whom I met whilst commenting on GitHub issues and helping out in StackOverflow, eventually became the first customers later down the road. It’s hard to say exactly how long all this took, as past mistakes and experience sort of “rolled” up into this final product. Once I had everything in place it took about 2 months to fully build out. I’m a father and a software engineer by day, so finding the time was the real commodity in low-supply. I heavily relied on other vendors like Stripe, DigitalOcean and Sendgrid to get payment, infrastructure and emailing handled, which aren’t core differentiators to what I was doing. As far as tech goes it’s all JavaScript and Redis… and that’s it! Launch day turned out to be sort of anti-climactic. I had a few core users that I mentioned earlier that helped validate the idea, but sites like Hacker News and Product Hunt didn’t really seem to care. Even then, posting it on high-visibility issues and StackOverflow posts got customers trickling in. It wasn’t until I started writing content that I started gaining some traction, with a best Practices post even getting its way up to the front page of Hacker News. Finding customers and knowing where to go next are still things I’m learning and getting up-to-speed on, but it’s starting to take more shape and I’ll definitely be writing more about it.",1,0
21," Immediately after seeing Aleix’s demo, I talked to him. I remember I was super excited because I had the same problem and wrote the exact same solution 4 years earlier and I wanted to work with him on it. Stefan also liked it, so we agreed the three of us would build a better version and use it as an internal tool for Mobile Jazz. Back then it didn’t even have a name yet, it was just an experiment. We called it “remote logger” because it sends the logs remotely. When Aleix built the very first version, the code added to the mobile applications was a single class we hacked together that sent logs to the server. It was not a proper Software Development Kit (SDK) in any way, just a piece of code that we would copy-paste into the code of individual projects. The server was completely dumb—it just stored anything that was sent to it. Overall, it was probably no more than 200 lines of code.  The first version we built with Go as an experiment (an experiment within an experiment!) which would write the logs in a MySQL database. But, even if crude, it was helping us already! Now if a customer had a problem, we could make a special build of the application with this “remote logger” thing built in. Then it would send the logs over and we could see what was going on. Hooray! We quickly realized it would be better to include the “remote logger” code in all builds of the app and just enable/disable logging remotely when we knew there was a problem with a device. That was the first evolution we did. After that, it kept evolving. Initially, the tool was only born as a way to provide a better service to our consulting clients at Mobile Jazz, but soon enough we saw other app makers were running into the same roadblock. In mobile development, there is always this problem: when a user is experiencing an issue, it’s almost impossible to reproduce, unlike web or desktop. In those technologies, you can always resort to checking the logs on the server or the desktop computer. Not so with mobile.  In mobile, sometimes applications operate without a server, maybe they interact with servers not under your control, or maybe they interact with Bluetooth or Wifi-enabled devices, so you have no way to know what could be happening. Also, yet another problem is the so-called “device fragmentation.” There are so many different mobile phones on the market that you would literally need thousands of them to test your application properly. Even with the exact same setup and conditions, maybe something working for you does not work for someone with a different mobile phone. After 5 months of using Bugfender internally, it was clear to us we were facing a universal problem other companies might be willing to pay for. So, we set out to build Bugfender as a product. First off, we made a website and added a “request an invitation” form to it. In the beginning, we did not charge anything and we had to manually go to the database and create the accounts by hand. We didn’t even have a proper registration form. It was not an annoying task because very few people were requesting access. We tried promoting our tool in developer forums and Twitter, but we got very few responses. However, working with real users helped us. We started receiving the first unbiased feedback, criticism, and feature requests. It took us about 4 months to add in the payment process because we were happy to keep incorporating feedback and make our tool better before starting to charge. We didn’t give much thought to pricing because our goal was to initially find if people were willing to pay something, regardless of how much. So, we went to a competitor’s site and set up our pricing in a similar way. Once we had the payment process ready, it still took us another 6 months to get our first paid user. Those times were a little hard, but we were full of enthusiasm. When the moment arrived, we celebrated. A paid user meant we were not completely stupid, we were building something someone wanted, even if they only paid 19€/month. Once you start charging, things start to get more serious. Shall we incorporate as a company? People started asking questions we need to answer: What is our privacy policy? Our terms of service? Did we encrypt their data? (Of course, we do.) Also, we had lots of doubts along the way: had we found the right “product-market” fit? It was pretty clear to us that money wasn’t just going to pour in. This was a niche product. It really did “scratch an itch” for developers, but we still wondered if Bugfender really addressed a major pain point or not. Could we convince enough people to reach for their credit card and put it in? Incorporating a company, adding metrics in the software to limit the functionality depending on plans, adding the payment and billing process... (OMG if you are someone with influence in the European Union and are reading this, calculating the right VAT for an invoice is ridiculously complex!!!) Did it make sense to put in all this effort, perhaps without getting anything in return... ever? We had some ups and downs in the launching process and in the following months. Getting our first paid user was a moment of celebration. Though it was little money, it provided validation. Another exciting moment was when we applied for an EU grant and were selected from hundreds of applicants. We were awarded 100.000€ for developing our product, meaning we would no longer need to develop out of our own pocket money. I remember I was talking with the other founders about abandoning ship a mere few weeks before that. Something which also encouraged us to keep going was getting direct feedback from our users via chat. The chat had a great impact on adoption because we could talk to potential users and address their concerns. We could help our existing users which increased retention. It was also an invaluable opportunity for us because we could learn directly from the people who were using the product. This helped us build a website that addresses actual user questions.",1,0
22," I made my exit from the previous startup and got together with Roxana, my DevOps at the time (who has become my amazing co-founder and whom I’d like to thank for being part of this journey). Together, we started building the DevOps platform of our dreams. While we were working hard at building the MVP, we were also trying to sell it to customers (a sell-it-while-you-build-it strategy). It was very important to us to validate the idea, make sure we weren’t creating something that nobody wanted or needed. Plus, bootstrapping, developing on the customer's money is always better. I really enjoyed the process of getting started, it was challenging for me and it was (and still is) a journey about self-discovery. I wanted (and still want) to do so many things (outreach, social selling, quizzes, infographics, conferences, workshops, content, academy, etc.) but we’re only so many people.  We’ve learned a lot and we’ve listened even more. This entire process has confirmed that patience is the key that brought us here.  I love beginnings because they’re full of ideas, optimism, motivation, and trust. I’ve always thought that it’s about the journey, not the destination. The road itself teaches you the lessons. ‍",1,0
23," Since the beginning, I knew I wanted to focus on eCommerce. But there was an issue, I knew almost nothing about digital marketing. That’s how I began looking for a digital marketing partner. I interviewed a lot of digital marketing agencies until I found one that stuck out the most. Luckily, the owners saw the shirt and felt in love with it so we became partners. Soon after, I received a call from them saying that Metta World Peace, a really famous basketball player, had just tried Buttercloth’s shirts and felt in love with them. They explained to me that it could be super beneficial to reach other celebrities and get our name out there. When I met Metta, he described to me the same issue around shirts that I had at the moment of starting Buttercloth and told me he had never used such a comfortable shirt before. He also told me he really wanted to become a partner right at that moment, he became an ambassador of the brand. Metta World Peace was greatly responsible for the success of the company. For the first months, Buttercloth was nothing, but then we began working with him, launched and we got around $700k in sales. So I had a great marketing partner and a well-known celebrity ambassador, so I thought to myself: “what’s missing?” Funding. That’s how I decided to audit for Shark Tank. My mentor helped us get in the line and do it well throughout the audition. Getting featured in the show was a mix of hard work and luck. We had 5-6 audits in different forms, then we had to wait 6 months and then we were told we were accepted and that we were filming the pitch and negotiation. However, the live feature in the program didn’t come until many months later and in all that time, we didn’t know if we were actually going to be featured or not. Luckily, we got aired on October 28, 2018. We had prepared ourselves really well, completely filling our stocks. Despite that, we got out of stock super fast, and that two more times. For the following months to Shark Tank, we did $3M in sales. It also brings a bump in sales every time the episode is aired. At the same time, we were able to land a deal with Robert Herjavec for $250,000 who, to this day, is helping grow the Buttercloth brand worldwide. He was a perfect fit as he really represented us as a company and found our shirts really helpful. Robert and his team have been invaluable to building Buttercloth. Even more important than the capital has been their coaching and access to their networks of the best partners is every area of the business. ",1,0
24, We raised an Angel round from friends and family. We spent maybe 5 months building the product. We bought off-the-shelf hardware from China (IP cameras). Made some changes to the firmware and built our web video hosting service that connected to the cameras in Rails.  The product was pretty technically difficult. We had lots of obstacles designing a good consumer experience.   We launched on Reddit and hacker news. Did some fun marketing stunts like building a pinata busting machine that we streamed using our service. We reached out to very popular critics of electronics and gave them our product to try out for free. ,0,0
25," The coding for Campertunity was outsourced. They say that if you’re building a tech company, it’s best to have a co-founder who is a coder, but my co-founder and I have a computer literacy of close to zero. We decided to still go ahead with Campertunity because outsourcing the coding was do-able for us and because being sociable with people-person abilities will take a business farther. If you check-out the Campertunity website then you’ll see how much we’ve been in the media.  It took 2 years to build Campertunity, with a hickup at the beginning when we hired a friend to do the coding: a guy who constantly said, “Yeah, I can do build Campertunity, no problem.” When, in fact, he took thousands of dollars from us and produced nothing. We could have decided to give up but we thought that because we’ve already spent this much money already (even though we had nothing to show for it!), we need to keep going.  On our second time around, we chose our web developers very carefully. We did interviews, fully explained what we wanted, signed a contract with them that we revised a few times, and had them follow a project charter that we designed. In the end, it was a pleasure to work with the professionalism of Bread and Butter Inc., based out of Victoria, BC, who completed the project on time. In the end, even they seemed surprised that they built Campertunity, such a complex website.   Campertunity is bootstrapped. With no investors, no crowd-funding, and no asking mom for money, I did this on my own as I’d like to keep Campertunity as a project that I can control, for now. Down the road, as we may need more money, we will consider the options out there.  Campertunity will be a huge success but we have one setback: insurance. It will cost $50,000 a year to have insurance in which we can welcome landowners to be a part of. At the moment, if someone wants to list their land, they need to get extra insurance in case a camper breaks a leg or a neck, and not all insurance companies are willing to take the risk. Canada is a cautious country and it’s shown by how our shared economy develops a few steps behind the United States. Even an Uber or a Lyft can’t be found in Vancouver.  ",1,1
26," The MVP was a web app built in HTML, CSS, PHP, Javascript and SQL. For those not familiar with programming, a web app is basically a website that runs on a phone, whether that’s on iOS or Android, Safari or Chrome. It took me a few months to build that out since I was still learning how to code and make everything work together. Since I was working my 9-5 job at Wayfair, I only had time to work on the app after work. For a few months, my schedule was work 9-5, come home, workout and shower until 6, spend thirty minutes eating dinner, then work on Canary until 11 PM or 12 AM. It was exhausting, but it was also so rewarding to see the progress. Whenever I would run into problems, I would Google my way to success. In technology, and coding in general, there’s a very high chance that if you’re running into a problem, someone else has had it as well. Being able to use websites like Stack Overflow was a huge advantage since I was still learning. Wayfair also had a very big impact on teaching me to code. I brought myself as far as I could on my own, but with Wayfair, I was able to bring it to the next level. There were a few times that I thought I wouldn’t be able to figure out a problem, but thankfully Wayfair taught me that you can always overcome any technical challenge. After a few months, I was able to submit the app to the app store. Check out the picture below to see how Canary has evolved (and is still evolving every day). The current version is a native app, so I had to learn how to use Apple’s Swift programming language. The best teacher out there is Brian Voong from Let’s Build That App. You can see him teach for free on YouTube or buy a class and support him on his website. I watch all his videos on YouTube and took his Instagram class from his website, where he teaches you how to build Instagram. Without him, this version of Canary wouldn’t exist. The iOS app took me a month to build. For building the native Android version, we hired a team in India. I posted a job on Upwork explaining the details of the job and what our budget was. I interviewed a dozen engineers and then picked the firm we have been working with. Instead of me learning to build a native Android app from scratch with Kotlin and spending a few months doing that, we spent $3,500 to have the overseas team copy our iOS exactly. I checked in with them once a week via Skype to see demos of the app and provide feedback/guidance. That experience has gone very well. We’re now working on a seperate web app where our venues can log in to their dashboard and manage everything from their computer (or from our mobile app if they want). Venue owners tend to be older and have a firm grasp on navigating computers more so than apps, so we think the addition of the web app will reduce any friction. This web app is built using React and our existing Firebase and NodeJS backend. ‍",1,0
27," Very quickly, without much thought (for better or worse). I decided I wanted to build a career advice site, so I spent a couple of days researching a domain name, then I bought it on NameCheap. From there, I paid for web hosting, installed WordPress, and got to work. The slowest part of this process was picking a brand/domain name. And I feel this is where the most time should have been spent, since it cannot be changed easily and has a big impact on whether people can remember the site, type it easily, etc. I’m not claiming I’ve got the best domain name ever, but for a .com name that was available on the open market, I’m happy with how things turned out. The first version looked very basic and used a free WordPress theme. And I paid $5 for the logo on Fiverr. But I started, and that’s half the battle! You can see how old some of the initial posts are, dating back to 2013. As mentioned earlier, I founded the project and then let it sit semi-dormant (one new article per month) for a few years before I figured out how to grow it. Over the years, the site has gone through many iterations and gradual improvements. We’ve changed the WordPress theme multiple times, improved website navigation based on user feedback and viewing user heatmaps (using Hotjar), and more.",1,0
28," Piece by piece, and continuously.  Within 2 weeks of discussing the initial idea, we agreed on the basic business model, the key marketing message, and the price. My partner and I both believed in the agile approaches to startup, so we never spent too much time trying to figure out the “right” answer. We agreed to just try everything we could and see what sticks. We initially wanted to do a revenue-sharing model with cooks who would get compensated by how many meals they made. But when we pitched it to our first cook (who was a friend of my business partner’s), we basically learned that there was zero appetite for something like. People in the food industry have a very traditional mindset and they wanted guaranteed hourly rate. Once the cook was onboard, we got 20 of our friends to partake in a 1-month trial at $5.99 a meal. 2 weeks later, the cook was making the first ever batch of Chowdy meals at his home kitchen. Over the course of following one year period, we one by one put together most of the key foundations of Chowdy: First was the kitchen, we learned that we couldn’t use a home kitchen for commercially sold food. So, we went out and found an hourly-rental commercial kitchen.  Next, we couldn’t use our apartment for distribution anymore because the volume was growing and strangers started to use the service, so we conjured up this “hub” idea, cold-called a bunch of cafes to pitch them, and was able to get one of them to give it a try. As the volume kept growing, we couldn’t keep using email and Google Spreadsheet for order management anymore because my partner was spending an ungodly amount of time on these admin tasks. So I built a web app that automated all order-taking and order management tasks with Ruby on Rails.  Shortly after that, we could not personally do all the ingredient shopping anymore because the volume was too large for the two of us to handle. So we learned how restaurants get their ingredients from national distributors like Sysco and GFS, so we went out and signed up with one of these distributors. So on and so on. I’m describing all these milestones in a linear way, but there was a LOT of running in circles and setbacks along the way. I remember how on the Christmas of the year we started, we got a Cease and Desist letter from a lawyer representing this company called Fuel Foods because they thought our name was too similar to them (we were called FuelBite at the time). We panicked because neither of us knew how to deal with it and we were scared of getting sued. So we “lawyered up” but was actually advised to change our name. My partner at 3am in the morning came up with “Chowdy”, and that’s what we were called ever since. I think the main thing I’m trying to say here is that we never stopped building Chowdy over the course of 2.5 years. There were always new initiatives we were trying out. Most of them fizzled out but the ones that did work allowed us to achieve what we did.",0,0
29," While in Teachable, my co-founders and I were always looking and chatting about projects and stuff we could work on. That’s when my co-founders Sid and Rudy started Circle, just as a side-hustle. They began by building a little version of the product which took them about a month. They kept adding new features over the following two months, and, soon, they got a few people willing to try it out. At that time, it was a private version. We only invited some creators we already knew, mainly from our jobs at Teachable. Rudy also knew many course creators from his own web development and design business, so he invited them as well to try the tool. From there, Sid and Rudy began to iterate really quickly based on the feedback of the initial customers. They spent a couple of months where they'd add one or two customers at a time, every few weeks. That kept in that way until January 2020, when we said: “This is enough of a product for people to actually get value from. What if we actually go out and turn this into a company?”. That’s when Circle was born.",1,0
30," I’ll have to disappoint you here. No formal process, business canvas or other, was used in the making of ClaimCompass. We just had a couple of Skype calls and decided what we’ll do and see what happens. I think we were saved by the fact that we were all relatively broke, so we were very cautious when it came to allocating resources. A big role played our CTO who not only built a pretty decent MVP, but had also set up the analytics right so we had an idea of what’s going on from the get go. From that point on we went on to try to get our first users, spamming people left and right, posting in hundreds, literally, hundreds of Facebook groups on a weekly basis (that was still allowed back in 2015), message boards, etc.  We did run into obstacles. We still had to figure out, now that we got our first customers to file claims, how do we collect the money we promised them. The idea was to make this an automated process, so that made things even more challenging. The first couple of months we worked out of a single Google Sheets file, trying to understand what the process flow would look like, where could we automate for sure, where would we run into trouble, etc.  Our first PR and media efforts came around the time we joined 500 Startups and raised our first round of financing. I wrote a piece which got us featured in Venturebeat, then we got the Techcrunch announcement, then we did a Product Hunt launch, which to this day I think we absolutely killed as we racked up around 1,500 free leads and got #2 Product of the Day. But to answer your question, no, we did not have a “launch” campaign. ",1,0
31," Of course, the first thing I did was crack open my editor and started building a landing page. I realize the irony here. I did build the initial landing page myself using Tailwind UI but mostly because I was excited about Tailwind. It took about 2 hours and could have more quickly been done with Carrd or Webflow. Here it is in all its MVP glory. The only changes I made were the logos (which came later) but everything else was what the first few people I cold emailed saw when they went to the site, including a self quote because we didn’t have any testimonials yet. Outside of the landing page, I loosely settled on what the offering was. Cold email as a service. I didn’t realize the power of this phrase at the time but I’m a huge fan of single sentence value propositions. It gives your customers clarity. There’s no confusion. They get it, and they can decide if they want it or not. The other benefit of that phrase was that for whatever reason, it felt novel to the initial group I reached out to. For the devs out there: The tech stack was Tailwind with NextJS and I threw it in a docker container and put it up on my favorite service Google Cloud Run. It’s a scale to zero service that makes getting a docker container behind an SSL cert effortless. No, I did not get paid to say that.  The next day I finished up the copy on the landing page and knew I was going to reach out to startup founders. It’s what I know, and I’d crafted the messaging just for them. I used YCDB to find the most recent batch of YC companies. I used WebScraper to get the list of companies and their domains, and one by one I looked the founders up on LinkedIn and used a combination of Hunter and Phantombuster to grab and validate email addresses of founders. I put together a list of about 100.  The message was simple. We do cold email as a service, can I do a campaign of 100 people for free for you? The objective here wasn’t sales, it was logos. I knew that if I could reputably say we’d worked with a bunch of YC companies, then I could leverage the star power of the YC brand to sell other startups. I sorted the list of 100 people in a spreadsheet by alphabetical order and manually sent out 10 emails. Here’s what I sent.   I sent 10 of these and within 30 minutes, I had booked 2 meetings. Interest! Interest, unlike anything I’d ever tried before. To be clear I’d done this same process dozens of times and seen it done many more. Very rarely do results come in this quick. Within the first week, I’d signed up the first few customers to do a pilot for free. I can imagine how frustrating this will be to read, but I promise you, I’ve taken these same steps many times before without any results. Not even any “F-you! Remove me or I’ll sue you” emails! It was by accident that I got the right message to the right person at the right time. The subject line “cold email as a service” was crisp and clear. I was offering to do a job that they didn’t want to do. The work is time-consuming and kind of sucks. They were thrilled to let me do it. The product found its audience very early and very quickly. It was all quite lucky if I’m honest. Over the next few weeks, I continued emailing founders manually and had similar booking rates. After two weeks I had 7 YC companies I was doing the service for. With only one problem. I wasn’t charging anything yet. As far as execution on the service, I did everything myself. I wrote copy, I hunted the leads, and I set up the campaigns. It was a one-man show, and it was already starting to take up a lot of time. It took all of my willpower to finish out the month for those first few customers for free. Once I had some results from real customers and their permission to use their logos on the site, I continued reaching out to founders on the original list I put together with a similar message, tweaking it each time for clarity and transparency. Eventually, I got the confidence to ask for some money and got the first customer for $500 for the month. I was over the moon. Each time I got a few customers paying, I’d double the price. I did a few at $500, a few at $1000, a few at $1,500 and now we’re moving everyone to $2,000 a month. As someone who was doing an AI startup for years, the dynamics of an agency-type business were foreign to me. One thing was immediately apparent though: service revenue grows a lot faster at the beginning than SaaS revenue does. Objectors will claim that service businesses have lower margins than pure SaaS, and that’s generally true, but my last companies’ margins looked a lot closer to a service business than a pure SaaS. AI companies have expensive infrastructure and generally, that means lower margins. A16Z has a great article on this. All that being said, I do think that most people should start with a service business. It gives you cash flow to play with. This game we’re playing is about the number of times at bat. Cashflow gives you more swings, and if you have a sustainable service business bringing new ideas and customers, you can be growing an audience to launch a do-it-yourself version of the service or other SaaS products. The irony in all of this is that I’m not a marketing guy. I’m a dev. If you told me I’d be selling this cold email service (and loving it) a year ago I would have laughed at you. My pitch to these founders at the beginning was not that I’m an expert in this area, it was that I’m going to run data-driven experiments and together we’ll A/B test our way into a repeatable cold email playbook you can take with you.  From sometime in October to mid-January, I was doing nearly everything myself. It was during this time I had been speaking to Mikey Howe (remember him from the micro acquisitions post I did on Indie Hackers?) about Cold Email Studio. Every so often I’d update him on the progress. He was CEO of a dev shop in the UK and was looking for something new. The timing worked out perfectly and we decided he’d come on board and be CEO.  Reflecting on this now, it seems unbelievable that I’d struggle for so many years, finally get a fish on the line, and then pretty quickly hand over the reins to someone I met on the internet a few months before. What can I say… modern times. I also decided that we had to be 50/50 on it. I worried that an unfair equity split would cause issues further down the line and at the time my thinking was that this company is either going to die, or this question will be irrelevant in 6 months (because we will have grown). Truthfully, I wasn’t ready in the beginning, and doubted myself and unfairly doubted Mikey. As the transition was happening, I had hired a contractor that Mikey was struggling with. It all came to a head one day where it was Mikey or the contractor and though subconsciously I knew this was a likely outcome, it was still a gut-check moment for me.  Needless to say, Mikey stayed and we had a rough week of pissed-off customers but pushed through it together. From that point on, I tried to step back and let Mikey do what he does best. I’m sure it wasn’t easy on him, but I’m very grateful he stuck with me. Since then, he’s made some amazing hires and has started turning this business from a job into a machine. ",1,0
32," Colorado Mobile Drug Testing was formed on January 3rd of 2012 in our kitchen table at our home. We knew we had a good idea and we set out to ensure that the service was what our community wanted and needed. At the time we were creating the company, we saw an ad from a local community college offering a small business plan course open to only 10 companies and a monetary award for the first three places. We submitted our application and we were selected out of 55 businesses. This gave us the opportunity to see not only if our business was viable but also if it was an idea that would be able to get financial backing if that was the route we wanted to go in. Long story short Colorado Mobile Drug Testing came in second place and was awarded $8,000 which used as seed money to purchase supplies, products, and other company needs. Now, 8 1/2 years later, we have two brick-and-mortar offices where our clients are able to send their employees to. Even though we also offer on-site mobile services, 80% of our business comes from these two offices. Neither my wife Stacy or myself have ever owned a business before or knew exactly where to start, so utilizing the Small Business Administration (SBA) was crucial to our success. A lot of times, small businesses or entrepreneurs just starting out don't realize what an incredible resource this is and how they can help your dreams become reality. We would strongly urge anyone thinking to start a business and who are wondering if their idea will work, to contact the SBA, and see how they can help. It's been very exciting for us to see where we started and where we are now in the continued growth of our company. Being able to help other businesses stay safe and implement a drug and alcohol-free workplace has been very rewarding. Now we're concentrating on opening more offices in other areas.",1,0
33," Painfully. We never ran a business. Never made footwear. Never started a clothing brand. We knew where we were and where we wanted to go. The company has three founders. Donald Lee--fellow Ranger that now serves as our CMO. Andy Sewrey--my brother-in-law that serves as our president. Together we managed to scrape up enough money to get samples made, build a website, and start marketing on social media. We presold product, built it, shipped it, then reinvested back into more inventory. We started with simple sketches and sent those to footwear manufacturers. Using their magic, they turned our drawings into footwear. After that, it was a matter of buying the tools to cut out the shapes and stamp the outsole. With that basic tooling, artisan craftsman shops turned our idea into a sexy piece of footwear. The tech is fairly simple. To start a company, you simply need an internet connection, smartphone, and laptop. We use Shopify as our online store, Facebook ads manager, Quickbooks online, and a few other subscription apps to tie everything together. Logistics kills most product-based companies. Until July of 2017, we managed all warehouse and shipping out of my garage. Recently we moved to a third party logistics (3PL) company to manage those services. It’s been an iterative, and extremely painful process. We learned a lot along the way and still learning every day. ‍",1,0
34," So initially, we came up with this idea in a hackathon/entrepreneurship competition in a weekend and won the top prize (which came with reduced lawyers fees, advisor connections, etc). A couple of months later, we (a team of three originally) decided to start working on our idea once a week. Next thing you know it became every day after our classes, where we would juggle Community Coders and our schoolwork. As a team of three, we all met through university and were originally friends, and it was an interesting experience balancing both the friendship and business aspect of trying to build a company. Our first iteration to building Community Coders was when we shared our first pilot project through our personal social media channels, put up a website, sent some cold emails to some schools and had a Facebook ad - in which we hosted a two-week summer coding/work experience bootcamp exclusively for highschool students in the month of August 2018. We bootstrapped pretty hard, not paying any room fees as we just used some school classrooms, rented out some laptops from our local library, and we all learned code together, including the founders and the students. Our bootcamp students learned HTML and CSS and a bit of Javascript in the first week, and in week 2, they got real work experience developing a local business website in the real estate, law, and construction industry.  We planned this pilot project for about 2 months and then had the summer camp at the end of August. We made about ~$3k by charging the businesses and a small fee for the students. Although this might not seem like a lot, it was a pretty eye-opening experience seeing the opportunity that you as a founder can do to start creating income and opportunity, pretty much from nothing.  From this pilot project, the biggest mistake that I reflect back on now was not treating it as a proper experiment, with hypotheses, KPIs, and knowing what data points to collect (I would suggest reading “The Lean Startup” and “Running Lean” to look into this concept). After the summer project was all done, our team only had qualitative data points and not quantitative. I believe that this led to a huge mistake, as I believed (without any data) from our observations that we had to pivot towards a freelancing platform where you could learn and work all in one because A) everybody would be able to do it, and B) businesses could get talent for an affordable price. Looking back at it, it’s really funny to see the incredible “pivot” that Community Coders made, and I can see that this was a big red flag. To touch upon “pivoting” in general, I think although they should be done quickly, they need to be treated as a calculated risk. Reflecting on the pilot project, I loved the process of getting started - recruiting students, getting businesses to pay us, simply going out there and making our own money. As an early entrepreneur, we made a ton of mistakes, whether it was our sales/marketing/operational strategies, but the one thing that I can’t fault was our effort. We put in tons of time, traveled from city to city walking door to door, was creative with the resources we were given, and these are some of my fondest, and earliest entrepreneurial experiences. Here’s a picture of our pilot project with some of our students! Here’s a picture of our first poster to advertise to businesses: Here’s a picture of our first landing page. We changed it to two weeks:",0,0
35," At first, it was nothing more than a simple landing page built in WordPress. It asked for an email address in exchange for a discount when we were ready. To get people onto the list, I spoke to web designers I knew personally, got involved in Facebook groups and just asked people if they’d be interested. Really basic stuff. I’d heard so many horror stories about products never getting off the ground, so I wanted some confidence that the product was solving a real problem and was something people would be willing to pay for. That meant asking for money before we even had a product. A ‘pre-sale’, if you will. After we gathered a few hundred people, we ran a pre-sale to see if people would be willing to put money down. We offered a full year access to the product (starting when it went live) and beta access at an extremely discounted price. ‍ We sold 25 out of 25 available spots in about 2 hours. That was an exciting day, and it gave us some confidence that the product would work. That’s when development actually started. First, we hired a UX designer to come up with all the different screens we needed. We listed out all the functionality we eventually wanted and removed everything that wasn’t necessary for the MVP. Our business already had software developers, so we diverted their attention to building Content Snare. The front end was built with Angular 2, and the back end with Ruby on Rails. This is the tech stack we use for almost all of our client projects, so it was an easy decision. It took maybe 6 months from the pre-sale until the doors opened. In that time, we continued to build an email list, grow a Facebook group, run ads and run a beta program for the people that had paid for the pre-sale. This was to make sure any major bugs were ironed out before releasing to the public. One thing we focused on I think more than another MVP’s was the look and feel. We invested in good design up front, to make sure the product was visually appealing. Our target market are designers, after all.",1,0
36," The last idea we had got early traction, generating 700 sign-ups in a couple of days.  We used no/low-code tools to build out an MVP as soon as possible. It took about 2 weeks to build, another 2 weeks to polish, and then we launched CopyAI to the world. We mainly used Webflow and Firebase. We launched it on Twitter which drove a lot of our initial traffic and got us a few thousand users. When users started converting, we knew we had something. We then decided the initial idea could be extended to other copywriting use cases and started building several features to help entrepreneurs with their writing projects. ‍",1,0
37," Without a doubt, it's a universal law that great ideas must be materialized by the right makers, right timing, and the right approach. Our idea was fortunate in meeting co-founders with the matching competence and experience, favorable context in our personal lives, and strong friendship. It took two years of building a product from scratch till public beta launch and two years after that, until this moment when we are confident about what we're building, how to bring value to our clients, and finally, become interesting for VC investors. After we committed to the idea, we gathered building resources — a real challenge started with endless creative possibilities on how to be sure what to build and what not to. I created an internal methodology called Core Truth as a solution for the team. It's a collaborative cloud document, a dedicated place to figure out Product-Market fit and be in tune with the reality of our audience. The document consists of guiding principles for customer interviews, industry insights, user persona archetypes, customer feedback archive, and product-market fit validation methods. We have defined 5 core principles that are guiding us for every ideation and prototyping process: We should feel uncertain about everything we make, yet confident about how we gather feedback. Feedback and debrief hierarchy — Problem, Connection, VibeWishful thinking must not become the attribution of Corebook reality to what product makers wish to be accurate or the tenuous justification of what one wants to believe.We're not looking for opportunities to build new features instead, we're looking for opportunities to create new experiences.Don't fall into the mental trap that learning about the customers' world is something we can finish.",1,0
38," Cristina: Before launching our first official product, we tested an MVP with 300 beta users. This stage was crucial as it provided valuable feedback, especially regarding users’ confidence in our product. There were questions about our solvency, financial backup, and capabilities because we were a new company with a revolutionary business model. We took this feedback and worked for a couple of months to come up with clear ideas about how to educate our potential customers regarding our model and what it meant for them, as well as to explain & communicate how we worked with an extensive network of top-notch providers all of whom helped us back up our clients in case they needed our services during an accident. We hosted an official launch in May 2019 at our headquarters in Zapopan, Jalisco. We extended invitations to local & regional media representatives as well as to governmental authorities, and we hired a local PR firm to help us distribute the news.  ",1,1
39," I had a monthly income from my clients. Every dollar I made, I put it into Creator Growth Lab because I wanted to go fast. I quit my job in December 2018. Gave me a month to mock a prototype. After a month, I realized I couldn't build it fast enough. It was going to take me about a year to figure out how to build it and then three more months to build it. I took all the money I had from my agency, and I used it to pay off one designer and one programmer. I found a designer in Bali. And then I found through a friend of mine, a Vietnamese programmer. My friend became an ad hoc Product Manager and we became a four-person team. It was fast. Within 30 days of working remotely, everything worked exactly how I planned.",0,0
40," The next morning we woke up with this idea of four-way volleyball on a piece of paper with 200+ ideas crossed out above it. We drove to our local Walmart and bought two volleyball nets, cut their centers out and rigged up a prototype. We then invited our best friends over and started playing elimination volleyball, one hit only, and used old school four-square rules like we were back in elementary school. Simply put, it was a blast and we were onto something. Next up, Mike started crafting blueprints and finding potential manufacturers. We then found one that excelled in the sporting goods industry and patiently waited as we had samples delivered. We’d then wait and wait and wait for some more. We’d finally get the game and immediately point out flaws. Go back onto Whatsapp, relay the feedback and repeat the process. A year later, we had our final product!  While this was going on I was working full time at my job at Uber and coming home at night building the CROSSNET website, while my brother Greg was launching our social media accounts and building hype and an audience for launch.",1,0
41," So, I did a bunch of stuff wrong, at least according to the indie-hacker best practices. There are off-the-shelf course platforms I could have used, things like Teachable or Podia. The smart move might’ve been to pick one of them, but they weren’t sufficient for what I wanted to do. My vision was to create a rich, interactive course loaded with explorable examples and mini-games. So for the first couple of months, I focused on building the platform from scratch. The big benefit here is making the content interactive. This is an active course, not a passive thing where you sit back and watch videos.  It also meant I could customize the experience and make something unique and premium, and whimsical. For example, I’m pretty sure my course is the only one that celebrates your enrollment with live-animated fireworks. After those first couple months, I divided my time between content and platform. Once I had a couple of modules ready, I invited about 30 people to test-drive it. I offered free invitations to former students of mine, from when I taught a web-development bootcamp at Concordia University. I got some good feedback from this process, but it wasn’t really ideal the bootcamp alumni were busy in their job hunt, and because they hadn’t paid for the course, they weren’t really invested. They were checking it out as a favor to me, not because they were highly motivated to level up their CSS skills. Towards the end of 2020, I started building in public. I shared quick GIFs of things I was working on, previews of the content and the platform. I'm building my own course platform for my CSS course, because I want it to feature interactive minigames. Being able to tangibly play with concepts is the best way to build a working mental model / an intuition.I'm so excited 😄 pic.twitter.com/3LwuB5MGEh— Josh W. Comeau (@JoshWComeau) November 15, 2020
 ‍ This helped build some early traction, and I started covertly selling the course to people who had emailed me asking about it. I got a ton of valuable feedback this way. By January 2021, I realized that I was still nowhere near completing the course, so I planned an “Early Access” launch. This would essentially be a crowdfunding campaign for $129, people would get instant access to the first 5 modules, and they’d get to follow along with the course development. As I mentioned, I set what I thought was an aggressive target of $50k. I wound up hitting that mark in about 10 minutes. 😅 I only kept sales open for 1 week because I still had a ton of work to do finishing the course and knew that a constant drip of new students would divide my attention too much. By the end of the week, I had sold almost 5000 copies: It was a heck of a week. There were a bunch of technical issues (the downside of building your platform from scratch!), and I spent most of that week trying to catch up on an ever-growing mountain of support requests. It was stressful and exhilarating. Of course, people weren’t paying for a half-baked CSS course. So after taking a couple of days to breathe, I got back to work on the course. It’s currently August, and I plan to launch the course in full next month, on September 27th. ",1,0
42," I went to visit my friend Steve in Croatia. We both grew up in the Seattle area but he fell in love with a Croatian girl and ended up moving there. We were talking about my relationship frustrations, the business idea, and the explosive growth of Tinder and we decided that we were going to build this thing. Top-notch mobile app developers were affordable in Croatia, Steve is a developer himself and he could write the back end server code, and our mutual friend Pinguino joined as the third co-founder two weeks later (she’s an amazing designer and as it turns out, also the best boss I have ever worked for). I started as CEO and later became COO, and took care of the business side of things.",0,0
43," I started in May of 2019 and partnered with a team of software developers that used to work for Zillow and Tesla.  They created a roadmap for my MVP (minimum viable product) and showed me the steps on how to scale.  While the MVP was 70% completed, the team had to close due to gaining too much work and unable to pay their vendors.  This caused a drastic delay and shift in mindset. I was actually able to gain one of their vendors they were working with and teamed up with them full time.  This team, after 3 months of delays, was able to get my MVP out in December 2019.  However, without my initial team I worked with, these developers did not create my MVP as planned and so CuriousCheck, a React web-app, was not built to be SEO optimized.  The developers I partnered with were backend developers, but were not pros in SEO, thus leaving a crucial part of the roadmap coding off.  Let me dive into the problem and make it as basic as possible. React-apps are Single-Page Applicants (SPAs). These apps consist of only one page that’s loaded once. All other information is dynamically loaded when necessary. Unlike typical multi-page apps, SPAs are quick and responsive however, you must take additional (expensive) steps to optimize SPAs or bots that will clump all the pages into one, omitting most of your content.  We initially tried the most common approach to solving this issue, which is pre-rendering. Pre-rendering are special programs that intercept requests to your site, and if a request is from a bot, pre-render sends a cached static HTML version of your website. If it’s from a typical user, the page is loaded as usual. When we created this program through prerender.io, the pre-rendering took too long due to the number of pages and some other factors.  After speaking to famous React consultants, we finally found out the only other way to solve the issue is to install new middleware for server-side rendering. This makes browsers and Google bots retrieve full content. The main issue with this was that this would take at least  2 months and $15-25k.  It all worked out because while trying to find a new more affordable solution, I met a talented developer on Linkedin that has now recreated 99% of my app on WordPress. He had to develop numerous custom plugins to have our site fully functioning and even faster than before.  What I would tell anyone building a React-based App is to make sure you add middleware and make a server-side framework for your app. Reach out to me if you have any questions.  As I explained, If you do not do this, your app will not be accurately fetched by Google accurately.  Don’t get me wrong, React-web-apps are great, other companies that have reportedly used React in their tech stacks, Airbnb, Uber, Hulu, Facebook, Netflix, Instagram, Twitter.  I’ve now learned my lesson and am helping as many people as I can to deal with this costly situation. On launch day, Jan 15th our team scheduled a successful Press Release through some great reputable companies. We were fortunate enough to gain some traction from the press release and receive additional publications with high traffic and high authority links.  After much feedback and the migration to WordPress, we’re relaunching April 15th.  I’ve tremendously enjoyed this journey and cannot wait to show the world what’s coming. ",1,0
44," My roommate had the idea to build Delite in late October 2016. He owns his own business selling pet products and sells his products to hundreds of different retailers. The process of getting orders and invoicing all of those retailers was really time-consuming for his business. He wanted the ability to send all of these businesses a secure web form where they could fill out their orders automatically without having to log in or anything. We called the company Delite and came up with the idea to create “delites”: customizable order forms that you could send to your customers. I am a software engineer and he also knew how to code. We started building the product immediately. It took us about two months to build the MVP, which was basically the ability to create “delites” and send them to your customers, where they could fill out the orders and pay with a credit card. We then spent about four months getting customers and adding features. We applied to Y Combinator and got to the video interview stage, but got rejected. We didn’t quit because of the YC rejection, but it was coincidentally the point where we evaluated the business and decided to shut it down.  ",0,0
45," The idea came from a Reddit thread by Rohan Gilkes which explained step by step how to set up a local service company. The beauty of it was how quickly everything could be done and in just 27 days I created my own cleaning company and had my first customer after about 45 days. The first step was to pick a location that had a lot of potential. I decided to go with Indianapolis as it had a metro population of about 1 million and at the time not many house cleaning companies (none which offered flat rate prices and online booking in under a minute). Obviously, big markets like New York, Chicago, or LA were tempted but it may have been harder to penetrate the markets there.",1,0
46," What started as a joke quickly became a viable business with real opportunity. When we first created our product, it was down and dirty. Just a couple of dudes in the garage melting Hershey chocolate and pouring it into a cheaply made silicon mold of a penis. Looking back to those first days, it was never even in our mind to create a business around chocolate, let alone chocolate dongs. It was always just a funny prank to pull on our friends. Slowly, sales started building. In the beginning, it was a very crude design. A straight black box, a stamp we had custom made, some paper mache to avoid broken chocolate, and a handheld plastic melter to wrap the box. I remember the first time we had 10 orders to fulfill at once. It was a disaster. Took almost 4 hours. It was frustrating and very much not worth our time. Nowadays, we can package and mail 500 orders in the same amount of time. The boxes are custom and ordered in bulk, and we are officially professional chocolatiers. It’s been a long road, and to be honest, I don’t know why we stuck with it. Call it a fun experiment I guess? ‍",1,0
47," Wrote a business plan, built a detailed wireframe, and started fundraising. Eventually, I managed to raise $90k from a few local business angels that were interested in the niche. I was successful in fundraising mostly because I used my experience from the 1st startup and the new developments in the market niche (new competitors making money) as proof that we have a good chance to be successful in the niche ourselves. I am not a developer and didn’t have a technical cofounder, so we decided to outsource the dev. process. We partnered up with a small local software company that we trusted and started work on the platform. Meanwhile, I started gathering a team of freelancers to work on the content with me. The site went live after 6-7 months of work behind curtains. At first glance, all of the above seems in order, but people with a bit more experience would have noticed that in the last sentence hides our most fatal mistake. More on that below.",0,0
48," I was handling EVERYTHING by myself at first, including sales, business development, client-fulfillment, billing, content marketing, etc…  While this limited my ability to grow at first (as there's only so much one person can do), it gave me an understanding of how each key sub-system of the business worked which has helped me greatly in terms of being able to clearly communicate what I expect from my team members. The entire first full-time year of being in business is when I was figuring out all of the foundational aspects of the company. From what verticals/niches we should work with, how to structure our offers, how to generate new business, what services we should offer etc… It was very difficult & lonely at times as I was on the journey alone, lacked clarity on many key aspects of the business, and was struggling to consistently generate revenue. I wouldn’t say the process was enjoyable or unenjoyable as a whole. There were good & bad moments throughout the process, but I wouldn’t be doing what I’m doing today if I quit when it got difficult.  What also helped was making an effort to NOT overestimate what I could do in 9-12 months while NOT underestimating what I could do in 9-12 years. Our initial offers/packages were vastly-underpriced which also limited our growth potential/ceiling.  Think about it like this, if you’d like to grow a consulting business to $15k per month in revenue, would you rather have: Roughly 37-38 Clients @ $400/Per Month Each ClientRoughly 7-8 Clients @ $2,000/Per Month Each Client Just the simple concept of raising our prices helped us attract higher-quality clients and generate more revenue. Higher prices attracted higher-quality clients AND weeded out the cheaper/headache-filled clients. Higher-quality clients don’t want to get the $0.99 lobster special.  They’ll pay a premium for something/someone that delivers great results.",1,0
49," I started like any other would-be blogger or writer. I launched a WordPress-hosted website and began writing. Once I felt like I had a big enough following, I decided to start writing books and producing programs based on the things that I felt met two crucial criteria: I had personal experience with the problem and I could stand by what I taught no matter what phase of my life I was in.  The first thing is what I think should be standard in the content creation industry, but unfortunately, many people are “faking it until they make it”. The second thing forces me to not only make decisions based on what I want my name and brand to be associated with, but also how I will carry myself in the future. For example, I’ve been sober now for almost 8 years. I really enjoy the life that I have as a result of sobriety. I feel like overcoming that problem is something I have a lot of experience with (The first criteria met) and I’ll always want to be a sober guy with discipline over himself (The second criteria met). The second condition also works as a small hedge against any type of relapse. I’d never be taken seriously again if people caught me drinking, for example. I’d lose both from a business and personal standpoint.",1,0
50," We started working on emit in Jan 2018 by making a storyboard of the watch user interface and decided on all the important features for a smartwatch that would enable users to improve their time management and productivity. We wanted to keep it minimal in design so went with a black and white color scheme. We then coded an Android app that mimicked the required features and uploaded it onto a Motorola smartwatch - this was our first prototype. It was an MVP that allowed us to get a feel for the usefulness of the watch and show it to other users. Being Engineering students, we approached the design from a very utilitarian perspective, with the objective of keeping emit as simple and declutter as possible. Our goal is to use technology to change your mindset and behavior versus just adding more functionality. Using Computer-aided Design at our university (Imperial College) we then made a 3D model of our casing, strap, screen and internal components - which we sent to different manufacturers in China. After figuring out which manufacturer was best in terms of manufacturing requirements, shipping and pricing, we asked for sample prototypes to be sent. We then also developed a phone which will be used for inputting all the user’s countdowns through calendar syncing into the watch. We had to overcome the challenges of convincing people to first look at time in a completely different way (in reverse) than has been done for centuries. It also became clear that we are trying to appeal to users who no longer use watches because they can see normal time on their phones, and don’t see the point of wearing a device that only does that. We wanted to contextualize time to each person - and our challenge was to find the niche group of people who were specifically looking for a similar solution. We decided to launch on Kickstarter because it was the perfect ground of marrying investors with customers -  a place where we could raise funds and gauge market interest. We wanted to price as aggressively as possible, and are happy that we’ve managed to have Kickstarter tiers at $99, $119 and $139 depending on how early in the campaign you buy them. This is still less than half of what smartwatches retail for, and it ensures that we can compete with both - smartwatches and traditional watches.",1,0
51," We’re still pre-launch but before we started building Encharge we actually validated the idea and made $4,000 in pre-orders. Since cold emails didn’t prove to be very effective for customer development, we decided to switch the script and do some inbound marketing.  It all started with the article in which I shared my previous experience with HeadReach. That article generated almost 3,000 page views and 500-600 email leads. We later validated the idea for Encharge with that audience by creating a mock prototype and a landing page with the opportunity to pre-order a lifetime access to the tool for $89.  In 2 weeks we got 50 pre-orders. We haven’t done a lot of marketing for the pre-order deal apart from sending to that list of 500 people. Because we’re scratching our own itch and we had conversations with potential leads, we knew we were targeting a real pain – the message was clear, and people didn’t need a lot of convincing to understand the solution.‍ Note: currently the landing page shows an email opt-in.  With the pre-order revenue, we had some confidence to start building the product. My technical co-founder is building the product in React. We also rely on out of the box services like JointJs (for our flow builder) to get fast to market with smaller development times.  We’re currently in Closed Beta. It took us 6 months to build a product with the most vital features. Being in a very competitive, red-ocean market the challenge is to build a robust feature-set while scoping it down as much as possible only to the most valuable features. ‍",1,0
52," I first ran the idea (pun intended) by a few friends who are big in the running industry. Professional runners, professional coaches, fitness writers, running store owners, and entrepreneurs. My explicit goal was to gather feedback and see what obstacles might arise… but I was also really looking for moral support. Did they think I could do this? Did they think anyone could do this? From there, I just went for it! One of the most appealing elements of the business was the ease of launch. Because we don't make a physical product, don't currently employ anyone full-time, don't need an office, and don’t have to physically transact anything, all we needed was a website and commitments from some key industry leaders to be a part of a future event.  For a self-funded launch, I think it went fairly well. By no means did we become the household name we’d like to be one day, but we popped up on enough radars that customers were excited to sign up based on the promise of our retreat alone.  We opted to price our retreats to reward those who signed up earlier. While our service isn’t scalable like a digital product or service, we can create a model whereby there’s a revenue threshold to cover costs and anything beyond that is potential profit.",1,0
53," Neither of us had run an activity centre before. However, something that we both believe in passionately is talking to the customer. To this day, we make it a priority to encourage everyone in the team to join activity trips to get to know our partners and hear direct feedback from our users. From day one we were visiting, calling, and emailing centres, trying to understand where their pain points were, and what we could do to address them. We were initially worried that everyone would have a different set of requirements, but it became pretty clear that almost everyone in this space has a very similar set of issues. We knew it was a big undertaking. Every startup has to make a judgement call on how much time to spend on building an MVP and getting initial systems in place. When we launched our Beta in 2018 with just 5 customers, payouts were being handled by Callum meticulously going through payment spreadsheets and paying out directly from our bank account. That wasn’t scalable, but our other systems were becoming increasingly sophisticated. In order to validate the idea before we’d built a functioning product, we created a “pioneer program”, where businesses could pay £100 to show they were interested in the idea. They got essentially nothing in return, but their money proved to us that there really was a need.",1,0
54," This was our very first foray into creating software as a service. In the beginning, we tried to do everything ourselves. 1) We tried to rig together a UI, which was basically stitched together from various CSS designs on other sites. I highly recommend that no one should ever do that. It is the least useful thing you can do. 2) After our very first disastrous version, we realized that we needed to hire experts for certain parts of the project. For example, we outsourced the UI design to a freelancer we found on Fiverr. We hired a number of AngularJS freelancers to handle the frontend for us. 3) We met at Starbucks to code whatever feature we had agreed that the platform needed. ‍ How long did the process take? Quite a lot - 3 years. ‍ Who was involved? My partner and me. And 2 freelancers we hired. ‍ What resources/tools did you use? Bizspark credit from Microsoft. This allowed us to use Visual Studios Enterprise. Free Azure hosting for the platform. Starbucks as our office. ‍ How did the initial product look? The one thing that we did right was the design. A lot of our prospects commented on the design. Some wished it had a more feminine look. But most people felt it was much more contemporary than our competitors. ‍ Did you run into any obstacles in this process? A lot of the obstacles were more mental. The feeling that we might be making a big mistake with how we’ve tackled the project. The feeling that we might be in a crowded market or that our customers might be too difficult to sell to. We simply pushed forward. ‍ Did you enjoy the process of building it? Actually yes. A significant chunk of the journey was a lot of fun. The sense of purpose and ambition. Waking up every day knowing that you had something interesting to work on. That was a lot of fun. Also, the comradery that I built with my partner. ‍ How did you approach pricing your product? We bounced between charging based on the amount of effort we put in which would have put us at $30/month. And pricing it strategically to undercut the competition at roughly ($9-$10)/month. We settled on $20/month. ‍ Did you launch/publicize your product in any way? That too was a first for us. We spent roughly $600 on Facebook ads. That got us nowhere. It was very difficult to properly target for event planners or wedding planners. At least we knew our conversion rate was awful. So, I spent more time sending out emails to planners on WeddingWire. That was a lot more rewarding. If nothing else we learned why prospects wouldn’t join or what it would have taken for them to join.",0,0
55," ExploreVR.net was built in WordPress. I started out with a super basic list of requirements. I was going to have a spreadsheet where I would keep all the data about the businesses, and then I would figure out a way to present that data through WordPress as a website. Each row in the spreadsheet would a separate entry on the website. Those were my Version 1.0 requirements. Later on, I would add forms to the site where users could go to list their business, as well as adding a bunch of other functionality. Initially, I build the site using a listing engine called Connections Pro. At the time, my knowledge of the WordPress eco-system was very poor, so I kind of went with the first thing that sort of fit the description. Unfortunately, my initial choice of the listing engine couldn’t do about half the things that I later discovered were necessary, so after investing 2-3 months of work into Connections Pro, I had to switch to another engine. It was really hard to walk away from a site that I’d been pouring my all into, but I realized that it was necessary, so I ended up re-doing the site in much more modern listing engine called Listify. It was totally worth it because this engine could do things like logins with social network accounts, it was fully responsive and mobile-first, and in general, it was a big step up. The one thing that I did correctly at the outset of the project was to settle on a building methodology. I knew that my set of requirements was fuzzy, so I decided to go with something called the Agile approach. Basically what that means is that I would start with version 1.0 that was super-bare bones, and I would work in small increments to improve it and add features. Doing it this way would allow me to always have a ready (although imperfect) product on hand that I could show to people. Going with this approach helped me avoid the trap of waiting forever to release a product. A little company called Microsoft is famous for utilizing this approach. It’s basically the process of incremental product improvement over time. Besides myself, I did have a co-contributor who helped me with working on the site. I partnered up with a designer who helped me with creating graphics such as the logo and helping with some appearance tweaks, like deciding on the right typology, color palette, etc. Later in the project when I had the need to populate the site, I hired a contractor through Upwork.com to do it. This person did some manual content scraping for me, as well as created many listings. That also helped a lot. One of my cardinal mistakes (due to inexperience) was grossly underestimating how long it would take to get to an MVP (Minimal Viable Product) that was ready for public use. I was stumbling upon one hidden requirement after another. And it took a lot of time and effort to figure out certain technical issues. One of my major frustrations with the business is that it forced me into the trap of being a webmaster. That part I legitimately hated because I felt like it was cutting into the time that I should have been spending on marketing and promoting my product. Ascertaining the technical difficulty of getting something done is hugely important. But…it was a lesson that had to be learned the hard way, I guess. All told, I kept the costs of the project very low. Because it was a self-financed operation and because I did most of the development myself using off-the-shelf components, I only spent around $5,000-6,000 on the project. Interestingly enough, the bulk of that budget was spent on food. Yep, because I wanted to spend every waking minute working on my business, my takeout bill went through the roof. Other than that, I did spend a portion of the money on software licenses and business incorporation. But nothing too bad.",0,0
56," I didn’t have much money to invest in my idea, but I did have a lot of time so I decided I’d build it myself and keep the costs and risk low. I set aside 6 months where I’d cover my day to day living costs from my savings and re-assess my options after then. While I was by no means a developer I had done bits and pieces of coding and been exposed to software development in a few of my previous jobs so my first task was to build on this and learn how to build and launch an online platform. I figured that worst case scenario I’d at least learn a new and useful skill. I decided to stick with the Microsoft stack that I had some familiarity with, I even found that Microsoft run a program for startups that offer free software and credits for their Azure cloud service so I enrolled in this and set about building fantastic house buyers – the great thing is this meant my set-up costs were close to £0, how could I possibly fail! I already had a rough idea of the product that I wanted to build and I immediately set out defining what the final product should be and build it. In hindsight, this was one of my fatal mistakes, instead of focusing on the problem I was solving and identifying the market for it I set about building something I thought I’d want and focused on the product rather than the problem and who would use it. On reflection, I did spend quite a bit of time agonizing over this at the start. I ultimately decided I wouldn’t know what the product was until I’d built it and would find it hard explaining to people what it was. This really should have been a red flag and is a good lesson that I learned, if you can’t explain your product to someone and the problem it’s solving then you need to work this out before you spend any time on product development or writing code. I’ve always been quite a technical person but had never really considered that I would be able to code something myself so I was quite proud that I managed to build the entire back end, front end and database myself in around 6 months and thought the end product was pretty good. I did quite enjoy the challenge of working out how to solve coding and design problems and learning a new skill, however, as I was working solo I also found it a little frustrating at times not having anyone to run ideas and challenges past. This did have a positive side though in that it really taught me how to identify and focus on the important tasks and ignore the noise (something you don’t really learn to truly appreciate when working in a large organization). I quietly launched the initial version of the site in August 2017 but I had no real idea how to market my product and get users. I ended up having some success with paid adverts on Facebook and Google but I found it really difficult to achieve much traffic organically, this was mainly because the vast majority of people visited two main property portals here in the UK that were very difficult to compete with in terms of content marketing and SEO. ‍",0,0
57," Since we discovered the need, we started to build FeedCheck, a solution for customer review analytics.  We started data acquisition, a field where we had experience. After we built the foundation, an engine capable of collecting customer reviews from any website, we started working at the next level, the analytics part.  Considering a review contains both numbers and text, we split the analytics into two parts quantitative and qualitative. We began with the quantitative part, the numbers and trends like star rating, evolution in time, reviews number, etc. In 2017 we signed a partnership with Microsoft and they offered us resources to develop the qualitative analytics of the reviews. We developed an AI for sentiment analytics and we divide the reviews into parts that mention specific features of products. This area allows brands to view which is their most loved feature and the less liked one. We responded to the question, “Why do our customers love/hate this product?” We attracted more and more customers who helped us understand their needs and develop the product further during development. One of the strategies we had at the release was not waiting for the perfect product. In tech and IT in general, developers tend to wait for the very best alternative of their product, and sometimes this can take months or years. There is an infinite loophole that you can fall into to find more and more possible ways to improve the product. And during this time, you can lose enthusiasm for the product or miss the opportunity on the market. In our case, we released the product as it was after a few months of working on it. We knew there was more to work on, but we felt it was the right moment to bring it out. This proved to be a good strategy, even if we still had to invest a lot of time in development, but this was more aligned with actual customer needs than with our supposed assumption of what they wanted. ",1,0
58," I didn’t want to go through the experience I had when I founded Hubrif. A summary of that experience was I had to find a technical co-founder who not only had the skill-set to build a VOD platform but also must love filmmaking. It took about 1 year to find that person. For Festivilia, I decided to take the bull by the horn. With all the tools out there today, I knew it shouldn’t be that hard to build an MVP on my own. I already laid out a template that will support the use of free tools and with little-no coding required. I found Mobirise - an offline website builder and was able to get a reliable free/cheap hosting plan (hub8), Canva was used to design my logo and in 3 weeks, I was able to build a decent MVP. In all, it cost me just $11 in total! (I only spent money to buy the domain). Back then, clients had to download the form, fill and email back to us and we would then send a payment invoice. The back and forth wasn’t good enough even though our customers never complained. I wanted a semi-automated system so I kept improving the workflow of the platform. Thanks to Airtable Forms which enabled us to build flexible cloud-based online forms (This replaced users having to download, fill and email back a form).  Thanks to Flutterwave and Paystack, we could integrate our payment invoices to our online forms with zero set-up fees). Google Sheets allows us to create beautiful and easy to understand festival tracking dashboards. We have a near perfect semi-automated system with minimal supervision today.",1,0
59," We started from some conceptual ideas back in 2017. It was just a presentation of a possible future that I showed to 15 Targetprocess customers and got very positive feedback. Looking back, I’m not sure this feedback was super valuable since our customers were somewhat biased :) Then we had several challenging technical problems that we tried to solve. For example, how to allow people to build a flexible domain for their company? We created several prototypes, tried all possible databases (including Graph, NoSQL, etc.), and it appeared that Postgres was the best choice. We also chose Clojure as a core language, which is a weird choice, but it gave us the needed flexibility to do various transformations faster. There were many technical problems since the goal was very ambitious and bold.  Fibery start was slow, the first prototype that could be demoed to people appeared after 8 months of development, and private beta was released in 2019 after 24 months of development. Looking back, we could do it in 20 months since some scope additions were not necessary. But scoping is always hard. We onboarded several hundred teams, but the churn was pretty high. Fibery was in private beta for more than a year. We listened to early users and improved the product till the public launch in April 2020. It was a pretty successful launch we got product of the day on PH and some virality. It took us more than 3 years to launch publicly and start revenue-generating. This is very unusual in the B2B SaaS space, but I don’t think we could do it much faster since the complexity of the problem can’t be reduced easily.  After the launch, we monitored early customers and saw who sticks better. We discovered that Fibery churn for product teams was lower and focused on product development processes more. In February 2021, we released Fibery for Product Teams, and now we have more than 50 product companies among our customers.  Our main problem is that Fibery is very flexible and can be used for almost any industry, but from the product/market fit point of view, it is almost always better to focus on some specific niche. We found product-market fit in the product companies niche since our annual churn here is less than 15%. ",1,0
60," I didn’t overcomplicate the journey or search for investment when I started Financer.com because I knew what I was doing and how to build a website and affiliate income. I focused on exactly what I did best, SEO, and I took my time building up the different country sites and a remote team. This method worked out well, and today Financer is represented in 26 markets around the world. There were, of course, obstacles along the way, but this usually came down to ignoring the lesson I had learned previously, focusing on my key idea. I experimented with other industries, such as gambling, but quickly realized I was better off concentrating on financial education and comparison. That was what our readers came to us for, so that’s what we continue to give them.",1,0
61," We started working on Flexiple on a part-time basis during our second year of MBA. Given we already had a flavor of the type of freelancers startups are on the lookout for, we decided to keep our focus during this 9 month period onboarding ~50 freelancers while using our automated testing and screening platform. We ran multiple tests on what kind of platform we should build and came to the conclusion that an asynchronous platform giving freelancers the freedom to complete the onboarding at their own pace was the best way to proceed. The product development and design were helmed by the three of us with 2 freelance developers and a designer completing the team. However, our lack of prior product development left us spending 2x the amount we had budgeted for and with a platform which the freelancers were unwilling to use due to the sheer time investment required. This derailed our plans to hit the market hard when we started working full-time from April’17. ‍ Learning quickly from our mistakes, we focused our efforts on having active client requirements so that we could incentivize the freelancers to take the screening process designed by us. Within a couple of weeks, we identified a couple of prospects and began engagements with them. However, due to a paucity of time, we had to give up the asynchronous testing methodology and conducted freelancer screening manually. This model has been working well for us ever since and in the past 2 years, we have identified that the problem we are solving cannot be solved using completely automated customer-facing processes. We identified that we need to build robust internal processes that will enable us to grow Flexiple in a reliable and sustainable manner. Only then can we ensure that our clients and freelancers do not face the usual challenges associated with freelancer hiring. To streamline our internal processes, we are using a host of third-party automation tools and have built a couple of tools of our own as well. One such tool is the Resume App with which we showcase our network to prospective buyers in a concise yet exhaustive manner. All our internal applications have been built while leveraging our freelancer network which is managed fully remotely. ‍ With a robust business model with positive unit economics since day one, we have remained self-funded and have grown to make $80k per month in revenues all done at a shoestring monthly budget of $4,500.",1,0
62," Honestly, our first two products were absolute failures. We spent $5000 to build each one and ended up throwing each into the bin. In the end, we just used a simple GoogleSheet to make our first $100k in revenue. I have written about it in detail in this thread, but let me explain our mistake briefly here. There are largely two types of tech startups: “Tech-enabled”: where tech just enables you to scale. For e.g. Uber, Airbnb, etc.“Core-tech” where tech is part of your core offering. E.g. Dropbox, Postman, etc. Many startups are just the former but confuse themselves to be the latter.  The consequences of this confusion are that: They invest way too much time building tech to solve future challenges of scale, instead of focusing on building their business and infusing tech when manual efforts have become a bottleneckFurther, trying to build tech before experiencing the real bottlenecks means that you are trying to predict them, which hardly ever works. We made the same mistake. Our customers - freelancers & clients - didn’t care too much about the product we had made. The former wanted quality projects and the latter, great talent. We were just forcing our product on them. When we realized this, we just moved all our work to a simple Google sheet, with our website functioning largely for marketing purposes. All flows thereafter were manual - using emails, manually sending invoices, and so on. This allowed us to focus on actually delivering value to our customers while not being preoccupied about scaling the business from the word go.",1,0
63," We co-founded Flexy Global with three friends my previous business was also co-founded with 3 friends: our Art director and co-founder Nastya, who helped us with our previous product’s design, and my friend Davit, whom I know for the past 30 years. My philosophy is the following— one person is better than 2 but worse than 3. You need to keep enough balance and diversity of ideas within the team. If there are just two team leaders, you can spoil your relationship because there is no mediator. If you are alone, you end up being in your echo chamber, and taking the stress of the startup upon your shoulders is hectic. Four people, on the other hand, is too much, I’ve never tried actually. But, just as states have a balancing mechanism between governing bodies, like in the US, it is a good system to implement to move the startup along. Weeks passed as we started with the first discussions, to actual operation, and our first hire and on June 1st, 2021, we will celebrate our first corporate anniversary.  Our business has two bottlenecks: one consists of leads and incoming projects while the other is screening/hiring good designers. Since our agency kicked off, we are constantly juggling between these two priorities and, as we are growing fast, it is challenging sometimes. To improve the designer hiring process, probably after first settling the backbone of our design team, we will start remote hiring. As for the lead generation, the first channels we appealed to were our friends and family members. For the first few months, our projects came from friends only. They are still arriving after one year. Currently, we are trying 3-4 sales channels and all of them are working well! We haven’t launched publicly and only announced to our friends.",1,0
64, We did never enter a growth phase and failed already in private beta. But we had a few thousands of users on the waiting list. We mainly got them through giving talks and public pitches as well as exposure from our accelerator StartupBootcampBerlin.,0,0
65," We first got into WordPress. We were listening to a podcast called the Smart Passive Income and the recommended stack was Bluehost, WordPress, and a virtual assistant. If you needed to build something more complicated, you just hired a virtual assistant or you hired someone on Upwork to build that thing for you. We had not heard anything about any no-code tools, it wasn't being tossed around. We hired a college student in New York. He started with a WordPress app and then built a JavaScript and PHP application. It was pixel perfect from a PowerPoint file that Tyler and I made, which was all boxes and text. It was beautiful. ‍",0,0
66," One month before I left the job (July 2018):  Amit and I had different ideas for the startup. While I was trying to connect farmers to markets, he was trying to create an online marketplace for businesses & farmers alike. But there were a lot of similarities so we decided to brainstorm the ideas together and come up with a common framework to work these ideas out. At that time, I came across the book Disciplined Entrepreneurship by Bill Aulet, a professor at MIT Sloan. He had created 24 steps to build a successful startup. We used this framwork to define our target segments and figure out the most pressing problem these segments had. We decided that we wanted to solve problems for retailers in the procurement of fresh produce. For that, we needed to learn what their problems were  by talking to them.  Besides this, Amit had already hired a fresh graduate who was a software developer to help him build the tech product. After I left the Job (Aug 2018):  We drafted a list of questions inspired by the book and started going to retail stores in nearby areas trying to understand their current purchasing process and problems they were encountering. Also on the side, Amit & the hired developer started working on the tech product as basic wireframes, etc. were already in place from the work that Amit had done before FreshConnect. Amit also convinced 2 experienced software engineers to come on board part-time to build the backend & frontend. Moreover, we brought 1 more team member who was from our college and a junior of Amit in order to handle operations along with me.  Part of pre-accelerator (Sept 2018): Until this point we were on our own and being first-time entrepreneurs, trying different things. I started applying to accelerators and similar programs to be part of the ecosystem as well as to get mentorship. We applied to an equity-free pre-accelerator called Startup Launchpad and got selected. The commitment was a few hours on the weekend and they helped us with doing customer interviews and with our GTM strategy. With their help, we launched the same month with 1 customer, to whom we delivered the products on our bikes. We hadn't built any tech yet and we were still heavily using WhatsApp for customer communication and GDocs for all our internal planning.  Tech Product Launch (Mar 2019)  We did a lot of experiments with Whatsapp & other free tools to understand customer behavior initially before launching our product. We initially planned to launch the tech product in Dec 2018 but it got delayed by 3-4 months because of the challenges around DevOps or expectation mismatch from our teammates who were working part-time. Finally, in Mar 2019, we launched a web application where users could log in using their phone number and OTP, see all the categories of products in a structured format and add to cart. However, there was no checkout system. Orders were finished through Whatsapp. We wanted to launch faster and Amit came up with this hack. We initially used Firebase for beta but we then shifted to AWS (free account for 1 year with limited options) as our server. There was another challenge that we faced which was related to our target audience: retailers were not tech-savvy and we needed to push them to order through the app. I think this push is needed to change existing user behavior. While well-capitalized players do it through giving deep discounts, we did it manually. Burning Money (Oct 2019) We grew 10-15% month on month and till this point we were completely bootstrapped, unable to raise outside capital but at the same time, we were losing money m/m due to operations cost & defaults in credits by customers. In October 2019, I did some calculations and realized that we only had one month of runway left with our existing resources. It was a wake-up call for everyone. We immediately took a small loan of Rs. 3Lacs on the company. However, it was still a small amount for the long term we needed to raise equity capital. The motivation of the team start going down as we started losing our monthly growth. My co-founder took a break in Nov 2019 and went to his hometown. During that time, I kept trying to keep the boat afloat as much as possible and looking for ways to raise money in desperation. ",0,0
67," Originally, I hired a software engineer in Europe to help me build out the first version of the product. I was paying for everything out of pocket, so I was trying to keep costs low for the MVP. This took 2-3 months and then I started trying to convince my friends to start using the product with their teams. A few decided to help and gave me some great feedback. Within a few months, I had my first paying customer, which felt great and validated (in my mind) that this was valuable enough to pay for. I started off charging $5/month per person. The pricing certainly wasn’t ideal, but it was close enough that it worked for the majority of our customers. Over the next several months, we continued to improve the product (keep in mind, the product itself looked terrible as you can see in the images below), but people found enough value to pay for, which was all that mattered for me. Additionally, they recommended it to other leaders inside their company, so we were able to grow the accounts over time.  I didn’t formally “launch” the product publicly until a few weeks ago because I was embarrassed about it (a mistake in hindsight). We finally launched on ProductHunt a few days ago. Instead, I relied on content marketing and various hacked together marketing ideas to generate enough interest to get people to signup. If anyone signed up for a free trial, I’d instantly reach out (oftentimes manually) pretty much-begging people for feedback. In many ways, this was like pushing a snowball up a hill. You expend a ton of energy to move the snowball, but at least you are making some forward motion! If you are an entrepreneur, do everything you can to get one people’s radar (within reason). Most “big bang” launches don’t go as well as you want anyways. Overall, Friday has been a journey of constant iteration, frustration, and excitement. But I think that’s the same story for any company. It takes time to figure things out. There’s always something that needs to be improved. There’s always a fire to fight. For me, that’s what makes running a company exciting. There’s a new challenge every day that needs to be solved. ",1,0
68," I started Frontend Mentor as a free offering. I was focused more on helping developers and solving their core needs. I knew there was a chance it could turn into a business in the future, but I didn’t want to rush a business model. At this point, I had quit my full-time job but had increased my hours at GA, so I was earning enough money to keep me afloat. After the lightbulb moment of creating projects for front-end developers, I spent another day getting a project up on the site. I found a Sketch design on a Sketch resources website, emailing the designer to get permission to use their design in return for a link to their portfolio site. Another LinkedIn article, some Slack messages to my classes, and some social media posts later, I was ready to test my idea! Sure enough, people started downloading the project, completing the challenge, sharing their solutions, and asking for feedback. This was perfect! After talking to early participants, I knew it was a way of learning people enjoyed. It was also very close to a real-life workflow, so people were gaining hands-on experience coding a project using a design as a reference.  The next step was to put a few more projects on the site to see if people would complete multiple challenges. They did! At this point, I had validated a few things: Given a design and a project spec, people would try to build the project to practice writing front-end code.Once they finished their project, they’d often share their solution with their network to try and get feedback.People enjoyed the process, found it rewarding to build the projects, and were incredibly proud of their creations. Not only had I validated some key hypotheses, but I also realized that this was the perfect project for me to build. I loved everything about the idea, and I could see myself working on it for years to come. As you can see from this Wayback Machine snapshot from June 2018, the visual side of the site needed some work (oh, the irony!). Luckily, I’ve got a good friend who’s a brilliant designer, and he offered to pull together some simple branding and initial template designs as a favor. After a day’s work together, we had the Frontend Mentor brand and some designs ready! I went down my usual channels for the launch of the new-look site, plus I published articles on dev.to and Hackernoon, and a Show HN on Hacker News. With this launch, I also started up a Slack community. This was initially to provide a place for people to get help on projects and share their solutions. But I realized as the community grew that it was so much more than that. People were building friendships, collaborating on projects, giving feedback on the site, plus loads of other things. It was (and still is!) a great place to hang out! At this point, the site was just a static site using the WordPress API. There was no logging in, submitting projects, and getting feedback yet. My goal was to build incrementally to increase my chances of making the right decisions. The Slack community became my research group! Every day, talking to community members gave me a clear view of exactly what we needed for the first version of the web app. I’m a front-end developer by trade but can pull together a (very sketchy!) Node.js API. Before my evening teaching work at General Assembly, I’d often arrive early and set up shop in the communal area to get some coding done. I knew the GA staff well after years of teaching there part-time. One day, Mike, an instructor, sat down, and as we were chatting, he asked me what I was working on. I showed him Frontend Mentor, and he liked the idea so much he offered to help me out on it! I wasn’t actively looking for a co-founder, but Mike is a brilliant back-end developer, so our skills matched perfectly, and we get along really well, so we gave it a go.  He started working on it casually at first. After a few months, we were comfortable that we worked well together. So we decided to make it more formal, using the Slicing Pie method to start dividing equity while the business wasn’t making any money. We chose not to publicize the launch of the web app externally to help keep everything manageable. Instead, we focused on community feedback to build the right platform with the right features. At this point, we still hadn’t settled on a business model. We wanted to find one that was the right fit for ourselves and the community. Lots of people were asking for 1:1 mentorship and the ability to see an “official” solution. We didn’t want to build a mentorship marketplace, so that was a no-go. We also didn’t want to provide official solutions, as this could become a crutch for the community and would reduce the likelihood people would review each other’s code. We often received requests for the Sketch/PSD (Figma wasn’t that big back then) of the designs, seeing as we only provided JPGs in the challenges. This seemed like the perfect opportunity for an optional add-on. We quickly uploaded the design files to Dropbox and used Buy Me a Coffee to test the idea. Sure enough, some people started buying the designs...our first internet money!! Another request that started coming in was for more comprehensive challenges. People wanted showstopper portfolio projects to show hiring managers and help them get hired. So we tested “premium” challenges. These projects would be the closest thing you could get to a real-world project without actually being a professional developer. We launched one at first, and it started selling! Everything was single-purchase items to this point. So we decided to roll it all into a subscription and added some extra “PRO” features to the platform, like private solutions.  But before we could do that, we needed to “launch” the site more publicly. We knew people liked the concept, and we were on the road to a viable business. So it was time to push the site out to more people. A year after putting the beta web app live, we “launched” on Product Hunt. That may seem like a long time, but it was by design. A big mistake I’ve seen repeatedly happen on PH is people launching before they have an audience or a community. I was determined not to get over-excited about the PH launch and rush it before we had a solid foundation. The PH launch was a weird one. The UK had just gone into lockdown a week or so earlier, so I felt uncomfortable being overly salesy and promotional trying to promote Frontend Mentor. I nearly pulled the launch entirely but decided if I did, we might never launch, so it went ahead. We managed to earn 3rd place on a pretty competitive day, receiving lots of great feedback and publicity, which I counted as a win! Not long after that, Frontend Mentor started getting picked up in web development newsletters and even appeared in a CSS Tricks article written by Chris Coyier (front-end legend) himself! A few months later and we were ready to launch the PRO subscription. The community was excited, and we had some lifetime early bird offers for the first 500 subscribers. We managed to sell nearly $10K worth of subscriptions within the first few days, with a steady flow of subscriptions coming in after the initial splash. So we knew we had created something the community wanted. If I could have my time again, one major thing I’d do better is to move faster. I was too slow (I like to call it methodical, but who am I kidding?) validating the business model and launching the subscription. Realistically, we could have had a PRO subscription with design files and premium challenges up and running within months! ",1,0
69, We launched Gadget Flow literally within 24 hours as we were very familiar with the process of building and launching a website. We’ve used a GoDaddy domain name and the cheapest hosting plan and a premium theme from Themeforest. The initial product looked nothing like today’s version. One of the most challenging things with Gadget Flow was the hiring process. Considering that we were just 21 when we launched the company we weren’t experienced and as a self-sustained and profitable business since the first year these decisions could make or break your business really fast. ‍,1,0
70," For the first year or so, we actually ran the business like an agency. We leveraged existing tools and did not build any technology of our own. While we knew the mobile game space well, we did not know the influencer space well -- so we chose to learn about that side of the market by operating an agency for our first year. We worked with many influencers to run interesting game-integrated content, such as this video we made for Big Fish Games’ Gummy Drop.  This strategy not only allowed us to learn about the influencer market, but also generated enough capital for us to hire others around us, including bring on our third co-founder, Tony -- and ultimately raise our first small round of $700k in December 2016 from London Venture Partners. Until that point, we were entirely self funded.  We raised that first round from an idea and a presentation. Our original concept was a platform for advertisers to find, analyze and run campaigns with YouTube influencers. Interestingly, within weeks of that money hitting the bank, we completely changed what we wanted to build, pivoting to our GawkBox idea that allowed fans to support content creators by playing mobile games. I’ll always remember our first official board meeting in January 2017 -- we were pretty nervous about how our board member and main investor would think about us changing the product vision entirely (it turned out we had nothing to worry about!). After we learned of the support of our board members, we set about building the MVP to get to market as quickly as we could. As we hadn’t managed to hire full-time Engineering by this point, we offshored development for this first version. We had a functioning (if poorly designed!) product a few weeks later which we launched to our waitlisted test customers with haste in the spring of 2017, before opening it up more widely shortly after. It might not have looked great, but it certainly worked as intended -- shortly after full public launch we were seeing hundreds, and sometimes thousands, of signups per day. We catapulted from making zero revenue to at one point hitting $7k in a single day, all within a couple of months. ‍",0,0
71," At first, GenM was not obvious. We were very skeptical and cautious in our approach. We had been burned in the past by investing way too much into ideas that did not pan out and wanted to follow a methodological process in testing and proving out our idea. We actually started with just a landing page that had no real product and funneled traffic to the page to see if the idea we had would convert. It did. We then put a paywall to see how motivated students would be if money was involved. Many paid. That gave us more conviction, but we were still caution and decided to roll out an MVP for courses. This would provide a one player mode for students and help us build one side of the marketplace, a key requirement for attracting business clients. Originally, we planned on spending only a few months on courses but we ended up iterating for 9 months. At first, we tried to invent a method for learning that we thought was effective, but this turned out to be a waste of time and we decided to learn from the best education apps. With that strategy, we were able to accelerate our product development and we had a solid road map. We knew our key innovation was not in course work but in apprenticeships so we wanted to focus our energies on innovating there. We ran into a ton of obstacles along the way including not having the right people, running out of money, not generating revenue, not being confident that we are building the right thing. All the classic startup foibles. However, our vision was strong, and we had some very promising data, along with our own experience so we persevered and kept learning/iterating. The lesson we knew was to trust the process. When building a company, you may not see results right away, or at least not until you hit “product-market fit” However if you follow the right process, this is usually a matter of time. Much like going to the gym. You don’t see gains right away but if you trust the process you will realize your gains. As a team, we were very disciplined in our approach to building a product and business. For a long time, it was just us co-founders toiling away in our offices all day and night. Eventually, we launched our apprenticeship marketplace. and that was when everything changed. We started generating revenues. We started growing. We had invented something novel and unique and had so much experience and a clear vision into what we were building that we started to see product-market fit. We did not want to get distracted with press so we kept quiet and no one knew about us. The only thing that mattered to us was building a business that has a clear product-market fit and can scale to achieve the mission we set. Our clients were the only external people we focused on.",1,0
72," Selling my first product was pretty tough. I had tried for years to build something on nights and weekends. I know my psychology and realized if I were going to make something work, I’d have to force myself to figure it out.  I burned the bridges and quit consulting completely on January 1st, 2014. I had enough runway for about 9 months of building my own thing, and then I’d have to get a job. My burn rate was low, so I figured I had a chance. I started out building a course to teach people Ruby on Rails. My thought process was that it’s my first product, and I don’t want to commit to anything that I may not want to do forever. By building a course, I wasn’t committing to doing anything long-term, and I could experiment. I spent those 9 months trying to get comfortable screencasting. It turned into two courses. One was free one was paid. They were designed around what I was doing, which was consulting. I was taking my experience and trying to productize it, but it didn't work out because nobody knew who I was.",1,0
73," I built Graphite WHILE learning to code. It was a strange, non-traditional process. I had tried to learn to code so many times over the preceding 10 years, but I could never focus enough to absorb everything I needed to. With Graphite, I had a goal. So I’d build, I’d get stuck, I’d learn something new, and I’d apply it.  Computer Science majors and programming purists are going to cringe at this next part. I built Graphite in React without even having a good grasp on vanilla JavaScript at the time. The way I figured it, React had so much community support, I could find answers to my problems quickly and ship something that...worked. Didn’t matter to me if the code was shit. I could fix that later. So, I built Graphite as a completely client-side only JAMStack app. All network requests and storage requests were funneled through blockchain protocols and storage backends selected by users.  Every single day was a challenge. I felt like such an imposter building this thing. Who was I to fire up a code editor and program anything? But as I got over the imposter syndrome, the actual coding obstacles became fun. Every bug, every piece of code I didn’t understand became a fun learning process.  I think my first line of code for Graphite was written somewhere around May of 2017, maybe earlier. I was an idiot and never put it under source control until December of 2017. But you can see my first commit here.  When I was finally convinced to launch Graphite to the public, I had the great fortune of also being invited to speak about my experience at a blockchain-focused conference in Berlin. I figured I’d just go ahead and launch the app publicly then. So in March of 2018, I threw together a quick Product Hunt post and went to sleep thinking I’d put more effort in when I woke up. But the truth is, I was so nervous about speaking that day at the event that I didn’t want to think about Product Hunt or launching or anything other than not throwing up. So I pulled the trigger, put it up on Product Hunt, and decided last minute to drop it on Hacker News. Well, that strategy (or lack thereof) worked.  Graphite finished as the number four product of the day on Product Hunt with over 500 upvotes. It trended on the front page of Hacker News for two straight days. Combine that with the fact that this little blockchain event I was to speak at turned out to be a big media event, and Graphite’s accidental, unplanned launch blew up. Graphite ended up being written about on dozens of sites including Wired, Lifehacker, The Washington Post, The Guardian, and more. ‍ But here’s the thing. That was 100% luck. Don’t let anyone with a similar experience tell you otherwise. Luck happens. It’s just a matter of how you react to the times when luck finds you.  For me, I took the luck that had fallen on my shoulders and did everything I could to capitalize on it, starting with the first iteration of a b2b pricing model. I had already started building a user base, so I needed a way to capture businesses. I added just enough features to separate the free and the paid plan, then I started collecting emails and put a “Request Demo” button on the site. I was doing demos from the office of my day job, trying to sell small businesses on this new technology. And it sort of worked. I landed my first customer on a $19.99/month plan. But I knew $19.99 a month wasn’t going to cut it for long. I tried raising the prices, tried adding features, tried streamlining. All in the name of finding the right balance to serve businesses while letting individuals use the app for free. ",0,0
74," We built GrowSurf v1 with quick development tools like Firebase and Heroku. We were able to deploy a working version in a few short months. Because we have experience building web and mobile products, we were able to design and develop everything ourselves. Derek handled backend architecture, and I handled design and front-end. We ran into a ton of issues. Everything from limitations of using Firebase as our main database, to just building a version 1.0 that ended up being pretty useless to users. We took challenges as they came, but during the early days, it was everything from servers crashing and trying to debug on Heroku logs, to battling unexpected costs with Firebase and rewriting code to fit the query-price paradigm. Another challenge very specific to our product is that we are a deeply integrated platform. So we had to build web SDKs (becoming masters of query selectors, DOM manipulation, browser compatibility, anti-fraud, and much much more) and scalable APIs (eventually implemented proper tools like Redis and Kubernetes). GrowSurf v1 was a free product. We launched everywhere we could. Product Hunt, BetaList -- the usual suspects. Like everything else in this stage, it was hard to get attention -- especially in the marketing automation space (e.g, no one likes cold emails in this space). We got initial batches of users, but throughout the whole first year, we never got truly ideal customers. It wasn’t until we rebuilt the product and addressed our issues that we got our first 10 real customers.",1,0
75," So I knew I wanted to do something related to paid advertising. I decided I would try Upwork (despite what a lot of people say about it) since I didn’t know where else to go. I figured with my experience at my internship, combined with some YouTube videos and the resources Facebook and Google provided would be enough knowledge to start. So I got my very first few clients through Upwork. I marketed myself as a PPC (pay-per-click) consultant. Going through a ‘gig’ hiring site like Upwork reduced a lot of my anxiety, as it was a lot easier compared to cold calling people and trying to sell them right away. And while I started out at a paid traffic ‘generalist’, I quickly niched down my services to focus on Facebook Ads, just because 75%+ of the inquiries I had were related to Facebook Ads rather than Google AdWords or others.  It was tough to fit in hours to work on Growth Cave while working my internship. Since I was just getting started (on my business), a large number of my working hours were spent on the phone with prospective clients, trying to determine if we were a good fit. So I was scheduling them during my lunch break, immediately after I got home from work, and even a few before work that had different time zones. It was tough. I actually registered the Growth Cave domain as soon as I had the idea, but never got it set up. For the first 3 months or so, my Upwork profile was literally the only online profile I had related to my work. And even then, I didn’t put as much focus on it as I do now. While in my first month I only made around $400, in my second month I made over $3,000. After I had gained an initial footing and had some positive reviews on my profile, people were inviting me to their jobs rather than having me to apply to them. I was starting to be able to pick and choose who I wanted to work with rather than anyone who would hire me.",1,0
76," I registered the domain name GrowthMentor.io on June 18th, 2017 but didn’t start actually working on the idea till October of that year. My wife teaches English online via this platform called Italki, so I kind of knew that I wanted to take a similar approach from a product perspective since I had seen it work first hand for years.  The first iteration of GrowthMentor was a simple landing page I put up to validate the idea. I used a Twitter bootstrap template to hack together a landing page then drove $500 worth of Adwords traffic to it bidding on the keyword “find business mentor” I  had a ±18% conversion rate with an average CPC of $2 and managed to score 40 leads. Of which I got on the phone with 10 of them for customer development interviews. I used a simple Typeform to profile those initial users and extract as much qualitative data as possible into the pain points of growth. I isolated that loneliness was a major pain point common to all early respondents. And it’s only superficially being solved and also exacerbated by social media. It’s a pain point that was integral to my own motivations for jumping on those Skype calls with the Upwork contractors, so I explored the underlying causes in more depth. What I found was that people in growth have very specific stressors which are hard to relate to if you’re not also in growth.  After roughly three months of customer development and fine tuning our positioning strategy, it was time to start building. Wireframing and then prototyping took around a month. We started sketching every screen out by hand, and then transitioned to Google Docs. After each screen was laid out in Google Docs, Alek Manov turned them into high fidelity designs which we iterated on for a month via InvisionApp. By mid-March, we were ready to start development.  We outsourced the development to Ragnarson who specializes on Ruby on Rails web apps. We were well prepared with clickable prototypes on InvisionApp that 1:1 mirrored all of the functionality of the final build. This dramatically reduced the total build time. Development officially started on April and 6 months later we launched the public beta with more features than we really needed. We knew we could have gone a bit lighter on the build-spec, but thought our target audience was very web savvy and had higher expectations than your traditional B2C customer personas.  If we were going to do this, we were going to do it properly. Not going to reveal exact build cost, but it was around the cost of a brand new BMW sedan. We ran out of runway (aka my savings) a month after we launched and the funding of the continued development comes from my day job’s income, exciting times for sure :) Minimum delightful product > Minimum viable product We didn’t make a big fuss about the platform pre-launch, no pre-launch promotions or anything like that. I’m a big fan of shadow launches because they give you buffer to fix things before the spotlight is on you. We did do a targeted 1:1 outreach campaign for mentors so we could launch with a decent quantity already onboard. I think we had like 15 mentors on the platform the day we launched the public beta. ",1,0
77," Since our founding team was non-technical, we hired a recent graduate as our developer for $150/hour. This guy built the Newsy app, which sold for ~$30M, so we knew he was legit. All in, the app cost around $15K, which at the time was all of our savings and then some. The app was built in around 2 months.  One of the big UX challenges we had to figure out was determining how users would buy and redeem covers. In the beginning, we decided that users would buy “digital covers” which had a QR code that doormen could scan at the door using their phone. This method worked well enough for launch, so we did it. ‍ For the launch, we convinced 2 of the 10 bar owners to accept our digital covers to test the viability of our app. We told some friends the app would be available on a Monday night, we spent $75 on Facebook ads announcing the app would be available, and we tweeted to our 250 followers that we attracted by word of mouth. The app was not approved by the App Store until that afternoon. Just in time! ‍ We showed up early, grabbed a booth and some drinks, and waited for the crowds of people to show up to use our new app. Only 25 people had downloaded at this point, but I guess we expected people to download it on their way to the bars. No surprise now - they did not. It was just us and a few friends.",0,0
78," Every day I would come home from my day job and code up features for Gymlisted until midnight. The tech stack was Python, Flask, and Postgresql on the backend, with jQuery and Bootstrap on the frontend. For the developers out there, you’ll find that it’s really easy to build a Flask application that has all the models and views in one file. This time, I challenged myself to better structure a Flask application. I ended up taking inspirations from Laravel, using Flask Blueprints, defining models separately from views, etc.  To get a working website up, it took around a month and a half of coding evening and weekends. At that point, we had the following features available: Search by city/location. This was powered by PostGIS (an amazing library!)Gym listing page, with the ability to add descriptions, services at the gym, and photosMembership management and purchasing - payments powered by StripeMessaging system ‍ In hindsight, it was way over developed to be a “basic” application. The biggest lesson I learned is that it’s important to get real validation before building the next feature. But being a developer, it’s really easy to get caught up in assuming you know what users want and escaping to our comfort zones: a text editor and terminals ) As for our business model, it was similar to payment processors where we take a percentage of each gym membership payment transaction made between the gym and the client.",0,0
79," I was not present when Habitify was first launched, but a year later. Nevertheless, I felt like I had witnessed a baby’s growth since birth.  Peter told me that in the first 6 months of Habitify, there were absolutely no sales. People downloaded it, but the app was too primitive to be sales-appealing. There were only 3 people at first: Peter (iOS developer), Dat (Marketing) and Son (Designer). They were living AND working together on the 5th floor of a poor-conditioned flat, with no air-conditioner under the 40-degree heat of Vietnam summer. I came on board to help grow the apps when there was just Peter running the whole operation. We didn’t have an office and had to work in a co-working space everyday for more than 6 months. At that point, we were one of the first habit trackers that strived to be multi-platform.  Mac, iOS and Apple Watch as the the initial trio, then last year we expanded to Android and Web. Our core motto was to make tracking habits as easy as it gets. No matter what device you have on your hand, you can start building your habits. Following this direction, we expanded the team in 2018 and 2019: from 2 people with no office, to almost 20 people working to push Habitify forward. ‍ Pricing strategy is a very interesting story. At first, we only priced the app $2.99 for a lifetime premium, and that’s that. When we started to grow Habitify to more platforms, the costs increased and forced us to change the model. We began to charge each platform separately $10 (iOS, macOS, Android), which led to a problem of premium synchronization. That model was too troublesome for us to maintain, which drove us to our current model: A combination of subscription and lifetime packages. Sometimes I find it hard to believe that we’re stopping at $39.99 for the lifetime version, $29.99 for annual and $4.99 for monthly. People are still purchasing it! And in fact, our revenue has been higher than ever (and it keeps growing)! ",1,0
80," Every app starts with a design, which I did on Sketch. I kind of had an idea in my head of how the design of the app should be. I took a lot of inspiration from Things, which is my absolutely favorite todo-app. That app has a very underplayed design, in the sense that the layout is not sectioned up as much as a lot of other apps and it doesn’t have a lot of different bells and whistles when it comes to the design. It’s straightforward to start using the app for beginners and it has all the complexity needed for power-users. After a lot of iteration, I ended up with something I liked. I build the app in React Native, which was one of the reasons I did the project in the first place. I used Expo as a base since they had over-the-air deliveries (which I absolutely loved) and had libraries for a lot of different base functionality I knew I needed in the app. They were also cross-platform, which meant that I’d have a relatively easy time “converting” the iOS app into an Android app (sadly I never got around to doing that). The monetization strategy was much the same as many other habit trackers. For my app, I decided to allow people to have 3 habits for free. After that, they could start a free trial which would lead them to a subscription for a month, a year, or a one-time purchase for a lifetime subscription. To ease the implementation of subscriptions and purchases I used Revenuecat, which I can highly recommend anyone who’s about to deal with in-app purchases in an iOS or Android app to use. It makes life much easier.",0,0
81," We figured the next steps would be to do some more validation with farmers about what an actual product would look like. We drove out to farms to get an idea about how their current dry matter estimation process looked like and asked a bunch of questions to help design the first prototype UI. Our first demo product was something whipped up in React + Material UI framework. It took about a month as I was the only developer and also had to learn React as I went! The demo contained a basic layout of paddocks with dry matter totals and a few charts including a feed wedge. We presented this at a local farming trade show to get a further feel for demand and also some feedback on the UI. This was good validation as again we had a whole lot of farmers turn up wanting to speak to us about when our product would be ready. Looking back, in this period we probably spent too much time on validation from farmers. If we had more domain experience, it would have been obvious that they have been looking for a better solution than ‘eye-balling’ the grass levels for years. There have been various different attempts, but no one has succeeded in making something both sufficiently better and easy to use. Most alternatives involve towing or moving a device around manually, which would take hours on an average size farm. At this point, we started to collect as much data as possible from farmers on their grass levels, including a lot of historical data. I started to explore the use of satellite imagery instead of camera data from drones as it was clear if they could achieve the same outcome, it would have some pretty significant advantages. It would make the product a simple app for a farmer, instead of app + drone they would have configured and fly. This would minimize the work required on their behalf and would also allow an easier expansion into countries with pastoral farming that have more stringent drone regulations than NZ.",0,0
82," I had a slight background in programming field as we had subjects related to C+, Java, and HTML in university. So, I started browsing development forums, reading articles about Instagram API, PHP, and Databases. I wanted to have an idea of what was needed to make Hashtag Pirate possible. In the end, I thought the best option was to find a freelance developer or startup company to do the work. It's cheap and safe. After some research, I finally picked a capable developer. For me, it was exciting to build your own website for 2 reasons: first, the excitement of offering a public service and reaching people from around the world And second, the excitement of setting up your server, to control your own small window to the world. The main obstacle I found then was the development itself. I had to explain my requirements and requested features over and over to get my point across. The development team was in India, so trying to talk to the actual developer was a struggle. After a period of trial and error, the developers finally understood what I wanted and how to develop it. The project started in May 2015, and two months later (at the end of June), the MVP was complete. ‍",0,0
83," I cannot claim credit for the idea of Hawkers’ sunglasses since Alex, David, Pablo, and Iñaki had already developed them a few years before I came along in 2016. Pablo originally got the idea from his brother, who returned to Spain after studying in the United States with a unique pair of fashion sunglasses from the Knockarounds brand. They worked as brand ambassadors for that company before launching Hawkers. Although I did not create the original idea for Hawkers’ sunglasses, I have been instrumental in its branding and explosive sales growth via social media influencer marketing. For example, I reached out to clothing brands in Spain to create partnerships between our sunglasses and their fashion outfits and promoted the partnerships online. Hawkers caters to a younger demographic with the colors and style choices we have chosen for our sunglasses. We have paid close attention to product quality and consumer price along the way, ensuring that customers receive top value from their purchases. Any company can produce a pair of functional sunglasses, but Hawkers focuses more on creating a designer-style product popular among young adults.",1,0
84," So, I remember going on a research expedition in my office that was down in the basement of our home at the time. I remember the constant coffee stains on my desk created by endless nights of researching the rights and wrongs of creating and sustaining a business. My desk was covered in accounting, corporate management, and marketing 101 books. I remember waking up to ruffling of papers and the occasional sighs of breath from my wife who was searching for her stash of books that I stole during the night to understand the business world. With that said, I read a lot and connected with a great attorney who filed my LLC. He was a stellar attorney with a multitude of colorful business experiences. He created my consulting agreement, which was my ticket for contracting businesses.  Among people competing for my first client’s business to do his marketing was a scrawny kid who stayed up all night who mapped out an entire campaign using Gantt charts and tons of stickies. After a series of consultations and weeks of free work, I had signed my first client.  With the revenue I generated, I created my first website through Wix and hired a marketing consultant to do my branding. I went to do as any Founder not savvy in accounting would do: hire an accountant to manage my taxes. Ironically, my wife managed my payroll. When I asked how things were going, she would just smile sarcastically and say “ oh well, it's going”, which was code for “be glad that I love you”.  Before you know it, I was a full-fledged consulting business with my first client generating a decent revenue. I was scared and excited at the same time.",0,0
85," Headlime started back in the depths of a global pandemic while in lockdown. I was sitting in the kitchen, drinking cold matcha and writing down ideas I could start working on next. Ideas that would be easy to build and validate before wasting years on them. Then I remembered: Three years ago, a friend and I wrote a book, called Headline Formulas, which has sold a few hundred copies. That's when I decided to turn Headline Formulas into a tool. I decided to focus on this for two simple reasons: 1) books are worth less than tools, and 2) it would be easy for me to build it, as I already had all the content ready. One month of building late, version one of Headlime was finished. It was a simple “content spinner”. The site had 200 formulas, which you could customize quickly by filling in different variables. The tool would then output 200 customized headlines to use in your marketing content. The launch was an instant success, with over $60,000 in sales in the first few weeks. Most of this was thanks to a limited deal I launched, which gave customers access for a one-time fee instead of paying a subscription fee. It honestly blew me away as this was my first ever successful product launch. I think what I did right here is mostly listening to customer feedback. Their vision of the product was beyond my wildest ideas. Customers did not only want headline templates. They wanted all types of content, like emails, Facebook Headlines, and Google Ads. So from that day on, I went on a shipping spree, launching new features, content and updating the tool to users their wishes. I couldn’t have been in a more perfect industry at the right time. Two months after launching Headlime, OpenAI launched their new flagship AI product, GPT-3. A neural network that can write content. And boy, was it powerful. I messaged the CTO of OpenAI to get access and got it. I quickly realized that this AI was insanely good at producing marketing copy. With the proper training, you could explain your business, and the AI would output almost perfect marketing copy for ads, blogs, websites, etc. I saw the writing on the wall. Content spinners are done. AI-generated content is the future. So, I decided to go all in: Headlime would turn into an AI-powered copy generator. I went off the grid for five months and started using all my working hours (and free time) to build version 2 of Headlime.  ",1,0
86," It took 2.5 years to get to the platform we liked but it was a very gradual process. We first started doing everything by hand. Understanding the needs of startups and how they made decisions about recruiting an intern or not. Doing the same on the students’ side to understand their expectations and what they wanted in their user experience. About a year in and lots of tests, we saw the opportunity of building a business with recurring revenues. As we had spent countless hours with both groups we had a great vision for what the platform should look like to create value for startups and students alike. We started experimenting with platform alike features where we would cut the time we spent on certain tasks and automating a few.Our v1 was a weekly email to startups with the CVs of the top 10% of students that we selected. We saw that this created as much value as the agency service and even gave more freedom to startups who could discover more students that we might have not introduced with our former way of working. After this successful test, we decided to spend some time on no-code tools to create the first product. It was a shared Airtable view where startups could discover students on a better-looking platform and not in a simple email. Then, we got close to the final version where we built the platform on Webflow and took subscriptions with Memberstack. Over the last 9 months, we added nice-to-have features such as the possibility to filter candidates, allow startups to send a crush to a student with one click and a few others. We ran into a ton of obstacles. The internship market is still very young in Belgium. Startups aren’t always aware of the value that can be created by talented students. It took lots of time to educate these startups to help them see what interns can bring when it comes to developing their business. To do so, we shared the stories of some students who had great results and where some ended up getting recruited for a job by these startups.  We also had technical challenges where no-code tools would not allow us to deliver on some startups’ wishes in terms of features. We had to get creative and find a few smart hacks to reach these goals. We didn’t have any big fancy launch but shared it within our existing networks and startups we knew in Belgium. We lacked expertise in distribution and I see it as one of the main reasons it failed in the end. Pricing was always a challenging topic. Startups only really saw the value of our platform when they had successfully recruited an intern with Hello Tyro. Except that it could take some time so we had to spend extra time on new clients to help them find the talented student they were looking for as fast as possible. The first thing we did for pricing was to launch the product as a free beta where some startups could test the product at no cost. After a while, we would chat with them to get their feedback on the experience and test a few different prices with them to see where we were at. From their feedback, we implemented a few different prices on different engagement levels (annual, semester, and monthly) at 49, 99, and 149€. ",0,0
87," We run an interesting Seed Funding program in our company. It is something like Y Combinator. When we decide to build a new product or give a shot to an idea, we give a $20,000 budget and 3 months to a team of 3-4 people to build and launch the product.  This budget can be spent on anything - hiring & team building, marketing, technology, consulting fees.  So, Helpwise got $20,000, 2 young engineers (Vibhor & Rishabh), 1 Engineering Manager (Prabhat), and 3 months’ time. By August, our MVP was ready and we started inviting beta users (mostly our customers of our other products and our friends at other startups).  Deciding how to price your product is one of the most important early decisions that you have to take. And, interestingly, the least amount of time is given to that. Learning from this mistake from my previous experience, we spent a good amount of time discussing and testing different pricing models and plans.  Finally, two important factors influenced our decision:  The reason why we built an internal use email software - we found other products super expensive, mainly because of per seat per month pricing for small businesses growing from 5 to 20 to 50. Cost shoots up quite significantly. How one of the most-used software (Basecamp) in our company is priced? So, our final pricing plans came out to be: Free Plan for up to 5 team members (aka small business) Pro Plan for $99/month for unlimited team members & 5 shared inboxes I know that most of the SaaS practitioners consider Fixed Price for Unlimited Seats as a sin but we really want to give this a try. It has worked for Basecamp, so hopefully, it will work for us as well :)  ",1,0
88," To validate the idea, we created a Wix website which had a Typeform survey for people to apply to the program. From day one, I think we had around 100 applicants. From there, we grew for a couple of days sustainably 100 applicants per day and after a couple of months, we started growing 20% a month. The way we managed to get these 100 people was mainly through 4-5 posts we made on my Twitter and LinkedIn profiles. We also did some Instagram ads which worked really well. My advice is to build your business idea as fast as possible and launch it to market so as to test your assumptions. There're a lot of entrepreneurs that are six months building a product without getting any feedback from customers just to find out that, when they launch, the reality is very different to what they were expecting. Right from the beginning, the differences between this new idea we launched and the student loan company, were very clear. The student loan product was very unattractive from the customers’ point of view, due to Argentina’s high inflation. The new version, instead, was zero-risk for the student, as they only had to pay if they began making a big income. I was completely new to Income Sharing Agreements when we launched Henry, but I was open to pivoting to another business model. I always advise entrepreneurs to focus on solving a problem, and not on the solution itself. ‍",1,0
89," Hot Barber is a simple website that lets hair stylists set up profiles and customers browse portfolios for the stylists they need. Since we were focused on affordability, we started by partnering with local cosmetology schools (with cold calls and emails) to built the initial supply. Our hypothesis was that, for some services, senior beauty school students could provide high-quality service for a fraction of a price of an elite salon. This turned out to be only partly true - students definitely need experience before they’re as capable as a professional stylist, but some students have experience before they start cosmo school. We designed and developed an MVP ourselves and spent time at our cosmo school getting students onboard. Our plan was to launch a pilot with one beauty school and Facebook ADS to generate some demand, then move towards a beta with hundreds of students from all the schools in San Francisco.",0,1
90," The business was purely online (the site has since been shut down) and was started by my 2 brothers, a friend, and myself. The set up was to start out with a drop shipping site until we got enough visitors to start bringing on individual sellers. The site started out as just a simple Shopify e-commerce site with a few basic apps. This was our set up. We had a formula that would tell us our minimum selling price. For example, this shirt would sell for $25 normally, but we would only need to sell for $17.26. This allowed us to know how much discount we could offer and how much influencer take away we could allow. After getting our first customer to sign up, we quickly realized that Shopify wasn’t going to work and that we were going to need a better system. Unfortunately, we never made it to that new system. After spending $10 on an Facebook ad we realized that paid ads probably weren't the way to go. We had too low of engagement to be sustainable. ‍",0,0
91," I loved technology but I wasn't a computer programmer neither did I have the funds to hire one to help me build the platform. This was my first hurdle in building Hubrif. I had to find a technical co-founder who not only had the skill-set to build a VOD platform but also must love filmmaking. It took about 1 year to find that person. In the meanwhile, I was working as a field agent too for a market research company to pay my bills until I was able to secure a better job, attend auditions for acting roles (I forgot to mention. I started out as a stage actor back in the university and gradually moved to film after school) while continuing to structure how hubrif was going to be. I came across an article written by him concerning building a VOD platform and when I finished reading that article, I just knew he was the one I have been looking for. I reached out to him and convinced him to be my technical co-founder. I would be in charge of content acquisition, marketing and administration while he takes care of the tech. We both split the equity equally, 50:50. In a record time of 2 weeks, we launched Hbrif with 50 curated African short films. As I had met my technical co-founder from an online vibrant tech community back in the days called Radar, we decided to announce the launch and ask for feedback there. No actually. He was building an online video platform that enables you to build a VOD platform. it was called vindie.io. Hubrif was housed under the platform. ‍",0,0
92," From when you got started until you went live, explain the process in detail. My co-founder, Jared Brown and I started building Hubstaff in 2013. We first developed the applications and made them completely free. We wanted to get a real sense of what our customers had to say and measure the demand for our SaaS. Testing our concept was key to launching a successful startup, we needed to put the time and effort into the concept in order to shape the company’s direction down the road. Once we gathered enough feedback we decided it was time to launch our paid platform. ‍ How long did the process take? The entire process took about 10 months.   Who was involved? In the very beginning, we had two developers and myself doing the marketing.   What resources/tools did you use? The concept was based entirely on the past experiences of myself and my co-founder. We took the knowledge gained previously and put it into action for the development of Hubstaff.   How did the initial product look? The initial product looked really bad, it was very small and only performed a few actions - basic time tracking and screenshots of the team members. We’ve come a long way since then. ‍ What sorts of doubts did you have when starting? The biggest doubt we had when starting was getting the desktop application to run without any bugs. Like any software development, there is a level of trial and error but we wanted to roll out a product that was free of any major glitches.   Did you run into any obstacles in this process? What did you do to overcome them? The biggest obstacle we encountered was getting the bugs ironed out among all the operating systems - this was no easy task.   Did you enjoy the process of getting started/building it? Building Hubstaff was the greatest challenge of my professional career but it was also the most exciting. It was so rewarding to see the increase in demand and people actually using the product. That being said, there was a ton of testing that was required and that was not a ton of fun.   How did you approach pricing your product? In the beginning, we offered a generous free plan but we realized that this business model didn’t make sense for a SaaS company like ourselves. We learned that free plans cost more money than they make and that if people value your product, they’re likely willing to pay for it. We looked in the marketplace to get a better understanding of what others were selling for and we asked our users what they valued the product at. As we continue to improve Hubstaff we re-evaluate our pricing accordingly because we feel it is important to price your software according to the overall value it offers your customers.   Did you launch/publicize your product in any way? If so, how did that go? Did it go as expected? We didn’t launch or publicize our product other than releasing to the database of users that we had built up over time.",1,0
93," The live version you see right now was built within a month. It was designed and coded in-house by myself and a few individuals I’ve known over the years. Hyperstarter has a team of 4 where we all work remotely, with the majority of team members coming from China. The site itself was inspired by Google’s homepage and online checkers that suggest how web pages can be improved. As we’re targeting Kickstarter campaign owners, we put a single form box in the center of the page for people to run their existing Kickstarter URL. I just wanted to build it and then work out how to make money later. My thinking was if someone’s using my tool for free, then I’ve already got “my foot in the door” and can start to gain the user’s trust. Often users on our site send over a message of “what else can you do for me” and this is how we make revenue, but it wasn’t something I thought about whilst building the site. We launched in April 2016 officially, but having previously worked on Kickstarter projects beforehand I asked all my contacts and campaign owners (who liked what we did for them!) to support our launch. We launched on ProductHunt only, having prepared weeks in advance but due to the time differences, we weren’t able to be featured on the popular newsletter in time. In summary, as an alternative to paid (Facebook) ads, what we do is very time consuming but effective. Our pricing is available on the Hyperstarter submit page where we can offer a listing on our platform or “hands-on” work which can consist of PR outreach, looking at who they should be connecting with and pitching. Obstacles we continually face are mainly based around Kickstarter and trust, which I will explain in detail later on.",1,0
94," We started our company from NOTHING. Yes, Imaginovation is a 100% organically bootstrapped company that started with a simple Craigslist ad. We built Imaginovation through hard work and dedication.  Since we didn’t have any funds in the beginning, we would often post on Craigslist and try different types of free advertising to promote our business. It helped us get a few leads but that wasn't enough.  We were still struggling very hard to keep our business up and running. Pete had to continue working and hustling at two jobs (Imaginovation and SAS) for almost five years since the inception of the company.    We didn't have the funds to hire people too. So, it was a continuous process to learn and improve things on our own and handle many aspects of the company such as sales, marketing, project management, account management, finance, design, and more.  I still remember how we would often take crazy initiative, learn, and do things. We have spent several sleepless nights with our team to meet our clients' expectations and meet very tight project deadlines, in addition to working incredibly hard (10-15 hours a day) trying to grow and scale the company on many fronts.  As we started to grow in revenue, we took the smallest salaries possible and poured everything back into the business to scale up the operations, increase the team size and promote our services more heavily.  I would say one of the best things we did to grow Imaginovation on a revenue perspective was to drastically improve and execute our digital marketing strategies such as SEO, social media, and content marketing, along with attending networking events and tapping into our referral networks (friends, family, etc.). The second best thing we did was get very hungry, passionate, and aggressive on the sales side which allowed us to close several small and large deals.  In addition to all those things, Pete and I worked very hard to improve our tech talent which enabled us to perform and produce for our clients, gain positive reviews, and grow our portfolio as well as our credibility in the market over time.",1,0
95," My first product at IMPOSSIBLE was because I wanted to get six-pack abs and do a photoshoot. Vain as hell, but hey - it was a fun idea. I did that, did a dope photoshoot in an abandoned building outside Chicago, and then got asked a bunch of questions about how I did it. I realized people are interested in what you do, but they’ll pay you to teach them how to do it. So, I quickly made a product around it. In the product, I talked about Intermittent fasting and the paleo diet. This was in 2012 as paleo was about to blow up. I got so many questions about it - that I built a one-page guide to answer all the questions I had gotten. That site began to get so much traffic that we put up ads & affiliate links to pay for the hosting. Slowly that business grew on its own, spun out into its own company, and evolved to include keto, carnivore, and other real-food, low carb diets, an award-winning paleo app, and a meal planning tool. Meanwhile, as IMPOSSIBLE expanded, I set out to run an ultra marathon on every continent to raise funds for charity. On race #1, I got dramatically injured and had to rehab myself back to health through physical therapy. That led me to create a mobility exercise coaching app - MoveWell. Now, Impossible is evolving. We’ve spun our fitness content over into exercise demonstrations, tutorials, and goal-focused programs at Impossible Fitness. We have our e-commerce products (apparel right now, but performance fuel coming soon). Our Impossible Shirt is by far our best-seller. Our process is usually something along the lines of “experiment with a few things, see what people are interested in, and then build a product around that.” It seems to be working well so far!",1,0
96," When we decided to build software to make working with clients easier we had a huge, grand vision. Not enough designers used creative briefs, or clear contracts, so our tool would have both of those. Designers and developers were also bad at communicating, so we would map everything out for clients to the point that the whole project flow was crystal clear. And clients were notorious for taking too long to pay, so we would build an escrow system that would hold the money for the project and automatically dispense it when deliverables were complete. Our system would handle everything. Which is great except: It would have taken years for a team of 3 to build everything we wanted to do.We were trying to change human behavior with software. Don’t try to change human behavior with software. But we were naive and determined. So, we set out to build this massive, world-changing project management tool. Rather than talk to our users to figure out the most painful part of the client project lifecycle, we just started building. Naturally, we started at the beginning, which meant creative briefs and project proposals. The tech was built in Ember.js back when Ember Data was still in beta. So, we were running a production app with an often buggy and not super well-documented data library (fun times). The backend was all PHP (and I believe Laravel) because that was what we had the most experience with. The code base was honestly a nightmare, it was all spaghetti code, we had no documentation, and things were just cobbled together. But, it worked well enough to get us users, so I don’t have any regrets there. As a developer, you should constantly be embarrassed looking back at the code you wrote years ago. After months in buggy beta, we realized the creative brief tool was broken and no one was really using it. So, we decided to change things up. Again, we could have talked to users to figure out what they wanted us to build. But instead, we decided, everyone needs contracts, right? And our proposals are basically contracts. We’re still going to build everything, but let’s go all in on this contract thing for now. So, we created the concept of different products within the larger system and decided the first would be Ink - the ultimate freelance contract tool. We spent several more months in private beta - at this point, we were working out of a co-working space and would show new project changes to people working nearby. So, we were starting to talk to users, but just to show them new product changes, not to truly figure out what they were spending money on (and might spend more on). And finally, we decided the product was good enough and it was time to find out if anyone would pay for it, so we launched on Product Hunt.",0,0
97," The process was long but very rewarding. We started by gathering as much data as possible by conducting multiple interviews with college athletes and brands. We eventually decided to build a mobile app for athletes and a web app for brands since we believe it is the natural product for both customer bases. College students, in general, use their phones far more often than they use their laptops, and we wanted to make it as easy and accessible as possible for college athletes to utilize their NIL. For brands, we wanted to create a web app that was simple on the front end and complex on the backend so we could create substantial value for brand managers that wish to continue using our product. We even have an internal motto for our brand’s web app: “To make NIL deals as easy as Facebook ads”, and we know through our product development with the joint leadership of the three co-founders that we have accomplished that.  Currently, we only have the athletes’ app launched. Since day one, we have received incredible feedback and love the initial reactions from college athletes. However, the most impactful part of our launch was when other college athletes reached out to us, wanting an opportunity to join the platform. It’s one thing to reach out to a massive set of athletes and have a specific percentage download and make an account, but it’s an entirely different feeling when college athletes you didn’t contact reach out to you and want to be a part of Inked Sports. As a founder, it is the best feeling in the world when your brand organically grows. It’s difficult to put it into words, to be honest. ‍",1,0
98," Over the course of 5 years, we developed multiple products. For brevity, I will talk about two major ones. MedZee - An end to end practice management solution for dentists along with the option for users to book appointments. Doondoo - A business listing website with extensive details of businesses and gamification for end users. It was similar to Yelp, except that it wasn’t limited to restaurants or services alone. Our vision was to list every business no matter what the segment. The idea was to bring together comprehensive information about every brand in one place. Coming from a strong technical background, building a product was the easy part. It took around 2-3 months each to build the first versions of MedZee and Doondoo. Given the sophistication of the products, that was a major feat that I am proud of even today. They were built over different timelines and expanded over time. We managed to raise an early-round of small investment for MedZee. The other teams from the same investors were shell shocked at the pace we could develop products. So that was clearly our strength, and unfortunately, also the only one, which I will get to later. Our service-based business was running side by side. We worked with eCommerce clients like Decathlon in India, Property Finder from the middle-east real-estate segment, and other industries from different countries. Here is a soft copy of our brochure for the service-based business. We reached a total team strength of 27 employees at one point.",0,0
99," The initial script took just a few days – but then it was at least a year before I set it up on a public domain. I sent an email around to my friends asking them to try it out – but the UI proved “difficult”. I was requiring people to leave their email address, and I would email them the cheapest flights that were found. I struggled with this format for a while before dropping it in favor of live results. I had been using VB.Net in my previous jobs, so continued. ‍",1,0
100," The first version of the portal was launched as an extension of our existing business directory. It was only when the concept gained a little of popularity when we moved it to a separate domain name. Initially, we outsourced our web development work - it was a complete disaster. Our explanation to the agency we hired for the job was totally ignored by them. We ended up with a product which was nowhere near to our expectations. This problem delayed us one or two months.  So then, we decided to build it ourselves. The team included me handling business planning and sales, my co-founder who handled the design part and operations and 3 employees who handled programming, operations and sales. We used LAMP, HTML, CSS and Codeignitor Framework. The first step when creating Jobridge was building a basic job portal with working features for employers, employees and admins. This took us around 2-3 months. The launching site was really simple, with only the most basic functionalities. Once the portal was in place, we started improving the design and building new features such as a membership panel and an integration with SMS. So, it took another 3 months before our web-based system was ready. As we did this, we started training our operations and sales guys to handle job seekers, sell to industries and get some franchisees onboard to help us grow at a faster pace. Our pricing strategy was simple: Posting one job cost $10Jobseeker premium membership cost $15Franchise owners has to pay a one-time fee, which cost $200We kept a 50% commission from each sale made by the franchise (from both job postings and premium jobseeker memberships) I enjoyed every single moment of building Jobrdige. The business model was unique and the market was challenging. But I enjoyed every moment of experimenting new ideas and winning/losing with them. ‍",0,0
101," This idea started in 2012 and didn’t launch until 2015. Not because it was really hard, but because we were both distracted and working on other projects. However, this non-stop singing card kept coming back and I had to act on it. Once I started to do the work, it took me about six months to finish it. I wouldn’t say it was hard work but there were no clear answers. I knew it could be done but, who would the right manufacturer be? And at what cost? And if I work with China, do I trust them? In this case, it was pure diligence or obstinacy that got me through. The initial prototype is what we launched with on Kickstarter. We didn’t want a super sexy card. We wanted a card that looked totally innocent and a little bit boring or dated. The biggest complication was that ordering 1,000 units was super expensive so total cost was $7/unit. When we launched on Kickstarter I charged $15/unit and that’s how I chose my price. No real challenges arose except for some timing issues. Originally, we planned to launch in February 2015 but it was apparent that was not going to happen. April 1 was coming up and I decided to just wait longer and launch on a great day. Although no one believed us on the day we launched it worked out better on April 2nd. Kickstarter launched on April 1, 2015. My brother shot the video in his house. We shot it in one hour and that was it. Luckily, he has a background in film directing and editing. I also went ahead and made some crappy iPhone videos but those turned out to be part of the success and shared more than our main video. In 30 days we were on ABC News, CNET, BuzzFeed, radio shows, and more and raised $92,073. While I had no plans to build a company it was apparent that I had. Halfway through the campaign I started the Shopify store, bought a domain, and did all the legal paperwork. Joker Greeting was officially born. I flew in ½ of the Kickstarter orders and put in my garage. The next ½ was being shipped ocean and arrived just in time when this was mostly gone. I packed and shipped nearly every single one of these orders with some part-time help. ‍",1,0
102," It was almost all on the supply side. Thanks to the magic of e-commerce, I could do next-day home delivery of a commercial-grade vertical cold press juicer and an excellent horizontal cold press juicer. I spent $2000 on shiny machines to extract natural goodness. I spent the next 3 weeks googling juice combinations and recipes. Navigating the messy and inconvenient organic produce ecosystem of Bangkok. Most merchants of “organic produce” don’t know where their stuff comes from. I had sampled liters of fresh juice, which produced great results for my body. It was done. I came up with the secret commercial recipe that made bitter melon juice barely drinkable. That wasn’t enough, I came up with more recipes of health-boosting cold press juice. Ginger, turmeric, garlic, and white mugwort to name a few. Turns out those are also not needed because the market is not that big. The only way to get my juice to people was to use a delivery app. It turns out the cost of delivering juice is the same as the cost of the juice. I tried to package them like a shot. They're very small because they're strong. The pricing doesn't work out because I cannot charge for them as a premium beverage. It's a physical business, and the profit margin is not very high because you need a workforce and you need to work with fresh ingredients.",0,0
103," JustReachOut was built on Ruby on Rails, through each iteration of the software we continue to add features that add value based on user feedback and how we can make the process of PR research easier.  I wrote about JustReachOut's early days in this blog post and started selling the app before it was even built! I leaned on my own technical skills until I absolutely needed an engineer who could create a more functional version. At that point, I brought on a friend, who generously took on the task of creating what I see as the first true version. JustReachOut was still just a side hustle at the time. When the roadmap for developing the product further became too unwieldy for a side project, he stepped away. Then I brought on a silent partner who provided an immensely talented bunch of engineers and product managers. We improved the search engine's functionality and outreach capabilities. Finally, we were able to focus more on teaching customers how to do their own PR and that’s when Corey McAveeney (my wife) officially joined the company, in 2018, lending her experience in sales, copywriting, and customer retention.  ‍",1,0
104," Me, personally, I didn’t build the actual product. I elevated my CTO from Findie (Radu, one of the top 5 smartest people I have ever met) to co-founder and he built it with our core team of engineers. Sure, I was involved in most of the decisions, but my job was to set the vision and go raise the money we needed to get our MVP to market.  We started out by looking at the fully-automated tech that we had built to solve the problem of having to edit tens of thousands of video trailers. We asked ourselves a fundamental question: what happens if the customer wants to fully automate the conversion from horizontal landscape to vertical portrait and the result is anywhere from 50% accuracy to 99% accuracy? What tool do you give that customer to either fix the 50% they didn’t like (or was totally wrong) or just that 1% tweak? So, imagine you’re the customer. You are being offered a self-driving boat ride to the island you need to get to, but the self-driving boat won’t drop you off at the pier. Maybe 5 meters away, maybe 10m or 50m or 1km. In any case you’ll have to swim a bit. Now, if you love swimming, and that’s how you were originally going to get to the island, no problem, you like manual stuff. If you don’t know how to swim, and you thought the automated boat was going to get you all the way there, major problem. That’s why we invested so much time and effort into building an easy to use interface that works really fast and intuitively. It takes 20 minutes to learn how to use Kamua. You can spend 50 to 200 hours in desktop software learning the skills required to do what our AI automation does for you. And even if you do learn those skills, our AI is way faster than the fastest most skilled human, and most people who work in editing will tell you that it wasn’t their life’s dream to crop videos for a living. So we are careful not to destroy the love and the art of video editing. Drum machines and MIDI sequencers didn’t destroy the art of drumming, they just made it possible for millions of people to create hip hop and dance tracks without a full on drum kit. Some of the best songs in history were created with minimal musicianship. This is what technology can do: unlock creativity by removing barriers to execution. ‍ So back to the nuts and bolts of the product building. We built everything to be used in a web browser (Chrome, Firefox & Safari) and to work in the cloud. We didn’t want to force customers to have to download and compute stuff locally. Our first customer had the exact problem we wanted to solve: they had really old and slow laptops for their social media managers, but these were the people under pressure to get videos out in a timely manner. That customer is part of the Omicom group, so they are a great first customer for us. We then got in touch with Google and let them know what we were building. And even though they were working on something called AutoFlip which they eventually released open source, that crops videos, and we have a competing technology, they invited us into their Google Cloud for Startups program and provided us with $100,000 in cloud credits so we could deploy our service anywhere in the world and have fast processing for our customers. After that, we did the same with Nvidia in their Inception program and with HubSpot in their startups program, so we are building partnerships with these amazing companies and getting a tailwind when we need it the most. So now, our service is fully deployed on Google Cloud and anyone in the world can sign up and request access to it.",1,0
105," The first step was building an architecture for it and a demo for ourselves: could we feasible build the first responsive HTML real-time GO server? The tools were very new at the time: socket.io for Websockets, node.js for event emitting/channel management, Ruby for the server (with a microframework called Cuba). The front-end was made with jQuery, but a funny thing for the Front-end Geeks is that we build a React-like rendering engine to only update the correct components instead of re-drawing the entire page. With my partner we sat down together, we picked the tools and the design, and we started coding as fast as possible. One of the most magical moments in the process was the first time that we could place a stone in the board and it worked real-time: like hearing your baby speak! Technically there were many obstacles: WebSockets was not reliable enough for many browsers and browser setups: the javascript community did not offer nearly as many tools and projects as it did later on so you had to build a lot from scratch. And games are *hard*. And real-time games with time-sensitivity are even harder.  We wanted to crowdfund the project in Idea.me, a Kickstarter-like company that was made in Argentina (because Kickstarter was not available for Argentina, and I think still isn’t). The day we launched the campaign since most of our users were outside the country, their donations were blocked by credit card companies and the sort. Nobody could pay. So we shut the project down from the idea.me website, and built one on our own website overnight, with Paypal. One of the fondest memories was naming the funding section on the website “Candy” with pink colored cues and icons. People found it hilarious that their curiosity led them to find that “Candy” was actually us asking them for money. We priced much like a Kickstarter campaign, different Tiers meant different perks and benefits, but mostly subjective. It was borderline a donation, because what people wanted was to see a new player in space more than anything else.",0,0
106," We took inspiration from what we already saw on the market for subscription-based design. And then started breaking down what we thought others in the market were doing well, what we could do better, and identifying any gaps that we could see.  And we were doing all this while pivoting from our previous businesses. It felt like months of walking on eggshells, trying to keep up with existing clients to who we’d committed projects. And then trying to build and launch a new brand, along with its operations. With revenue from BannersMall and Doto being used to bootstrap Kimp we were burning the candle at both ends. But in hindsight, there were a lot of blessings in disguise during that time. A few of our most recent hires that had been made to help expand Doto now became big players in launching Kimp. And through Kimp we’ve been able to give new opportunities to our team members to grow. And to serve clients around the world whereas we were previously focused on North America. For years we didn’t know if we could gain traction anywhere else. But within a month of launching, we were already getting uptake from multiple regions. Our initial launch was done fairly quietly as a soft launch. There was a lot we were trying to tweak, but we wanted to get proof of concept too. So we began reaching out to past clients to see if they’d be interested in trying Kimp out.  And we also started running social media ads. A couple of our campaigns took off and we saw a huge influx in sign-ups between the end of February and throughout March. So much so that we were often building our workflows as fast as we were breaking them. And oftentimes relying on client feedback to gain insight into our blind spots so that we could account for them. Near the end of April 2019, it felt like we were hitting a stride. This was definitely in part a result of bringing on more team members. And having some breathing room to look at how we were doing and where we wanted to go. For instance, adding in a video design subscription as we continuously received requests from clients. And then rebranding our subscriptions to Kimp Graphics, Kimp Video, and Kimp Graphics + Video. ‍",1,0
107," Short answer? The wrong way.  Instead of using DIY materials like wood or off-the-shelf parts of gaming accessories to test if the idea was even worth it, I went straight to the bank, took a huge loan and then paid industrial designers to start working on the 3D models.  After those were done, I paid literally thousands of dollars for super expensive prototyping online (Shapeways.com) since the models were big and bulky to create.  I also paid someone to write my own business plan, I used the loan money to fix my old car, and essentially found numerous ways to not spend the money wisely.   At the time I was doing my day job and studying, so at some point after 2 years in development, I decided to launch it on Indiegogo.com. Naturally, at around $100 a piece, no one bought it. I also had little idea of how to run a crowdfunding campaign.  I still didn’t give up. Later, after countless rejections from accelerators and investors, me and my co-founder got accepted into the Buildit hardware accelerator where we spent 3 months and another $20,000 on the business.  Shortly after, we finally had to find a way to launch it as we were running out of money. In early 2015, a Kickstarter campaign followed where we raised $4,000 and had to shut down the campaign shortly after.",0,0
108," Kopely’s business model was conceived in October 2019. After sharing my pitch deck to friends, family, and my personal training clients I started pricing how much it cost to actually build an app that would be living in Apple’s app store. After gaining quotes from several developers I quickly learned that capital was going to be one of my biggest hurdles in developing Kopely. On average the Kopely beta was quoted to cost $150,000- $200,000 and a full-featured app was $500,000- $2,000,000. The costs were well out of my affordability. As I contemplated raising angel money I came to the conclusion that I just couldn’t take people’s money without having more proof of concept. I started to live in online stress, psychology, and self-improvement forums to better understand people's pain points.  As I was doing my market research I was asking around for app developer referrals. Soon, one of my training clients recommended that I sit down with the owner of a dev group that he has used for his software companies. After several meetings and sharing his personal interest in health and wellness, he made me an offer I couldn’t refuse. He and his team of developers would build Kopely in exchange for equity. We were planning to launch the BETA in July 2020. When the dev group got on board, the process was invigatoring! When we hung up after our call I literally jumped and screamed with excitement. I was blown away that someone recognized Kopely and me as a risk they were willing to take. In short, my dreams were coming true! ‍",0,0
109," Well, it all started with by paying attention to the needs of the market. I was reading different influencers blog and I observed the great enthusiasm around Facebook Lead Ads. Despite the hype, people were still worried about how to sync their leads with their CRMs and ESPs. We did a very brief market research, gathered feedback on our idea and then started working on it. We didn’t need massive validation since we approached the project as a side business. Still, we worked our asses off for three months during weekends. In the beginning, it was just the two of us, the co-founders. We started as simple as everyone else: a WordPress website and an app that interfaced with Facebook’s API. We didn’t have any particular obstacle on our way. After the first marketing campaigns, we started making sales. We only invested a few bucks in advertising with an almost immediate positive ROI. As I mentioned before, the project had traction from the very beginning and so we started bringing in more people. Looking backward I can say it was the perfect process to bootstrap it to where it is now.",1,0
110," It took me about two full years to go from idea to product. Before sinking a bunch of money into the company, I felt it was essential to do as much research and low-budget development as I could on my own.  When I was first playing around with prototypes, my primary objective was to mitigate the natural bitterness of kava. The word “kava” in Fijian means “bitter” this reputation for unpalatability is one of the reasons why Americans especially are hesitant to try the ingredient for the first time. After much experimentation and research, I discovered that dairy and spice were two viable masking agents. I knew the eventual Leilo product line would be a carbonated soda/seltzer, but I was on a limited budget and more interested in people’s reactions to the functional effects of kava. So I started making these huge batches of horchata from scratch in friends’ kitchens at night after class and rugby practice. People would see me on the street carrying tons of milk, rice, cinnamon, and sugar and be pretty confused. It was fairly labor-intensive and there was certainly a learning curve, but I eventually got good at making my kava horchata. I would then package each batch in little 8oz bottles and take them to Columbia parties with me. It was amusing I got lots of stares and snickers as I showed up with a backpack full of hand-made horchata when most people were drinking Bud Light. Some people dumped it out without trying, while others let it sit in their fridge for weeks until it separated and looked very unappetizing. A few people thought I was nuts more thought I was wasting my time and money. I bring up this comical and self-deprecating story because I see many founders who are too apprehensive to release their product until they think it’s perfect. It’s a valid worry criticism is scary and hits hard. However, I believed it was far more important to start collecting feedback and data than it was to wait for perfection in a vacuum. I knew that my horchata wasn’t the optimal presentation of what Leilo would eventually be, but I figured that if I could get some consumers to appreciate an admittedly amateurish version of Leilo, I would only gain more believers in the product as I continued to refine and improve it. And the people who did try the horchata had positive reactions, giving me the market validity I needed to pursue more professional development. After all this experimentation, I finally felt strongly enough about my concept to take it to flavor houses for formulation and eventually co-packers for production. This was in late-2019/early-2020.  By March 2020, we were all set for take-off. But our launch turned out to be a complete disaster because I impeccably timed it with the initial COVID outbreak in NYC. We had retailers set up across Columbia University, launch events throughout the city, and lots of cool demos mapped out. The day before our scheduled rollout, we got evicted from our dorms and sent home. My team was suddenly scattered across the country, our retail agreements in LA and NYC fell through as those markets shut down for several months, and we had to immediately pivot to DTC sales almost exclusively. I think that was a valuable lesson in maintaining optimism and agility in the face of dynamic circumstances. You can create the most detailed business plans, but life rarely shakes out how you predict it. The pandemic is an extreme and unusual example in this regard, but looking back at it, being forced to adapt to rapidly changing circumstances gave me and my team the confidence to grapple with whatever surprises might come our way in the future.  ",1,0
111," Building the product was pretty easy for my co-founders. They have been developing products for a long time. We had our first version ready within two weeks. That was surprising because, in my previous experiences with devs, everything used to take quite a bit of time. They used JavaScript frameworks called Meteor and Node, as well as MongoDB for the database. Pricing was simple in our case. After we’ve analyzed our competitors, the decision was to set a low price (around $19/month) for the basic version and we’ve increased it since then. However, it wasn’t all roses and sunshine in the early days, though. Our “activation rate” metric (when someone would sign up and launch a campaign) was low, as the UX of the product was far too complex. Along with some not so happy first paying users, this led us to re-think the whole UX. After fixing it, our activation metric increased by 100%. We lost a few users initially but acquired two or three times later on.",1,0
112," We built an MVP ourselves. Iñaki took care of the frontend and I took care of the backend and databases. We wanted to hire someone to help us with that and Iñaki was very reluctant. I am really happy that he was because I had to go back to coding which I hadn't done in a while. We spent from October to February building and launching our first application with 20 games. The KPIs we had were good enough. We visited five VC funds and all of them put a term sheet on the table. It was not only because the numbers were great, but also because the idea was good. On paper, we had been successful in the past with other startups and we complemented each other. If I were an investor, I would also have put money into the company.  We got a €1.5M seed round from K Fund and decided to hire a team. We were quite well known in the ecosystem and we had a good network, so we were able to recruit an outstanding team in a short period.",0,0
113," I was a total newbie and that’s why I believe my story resonates with so many people. The world is full of aspiring bloggers who never set up a WordPress site and make that first post live. Or others who give up after a few months. The biggest thing that helped me be able to make a living and still do everything my way and enjoy it, is that I stucked to it and covered topics I was passionate about. It is indeed possible to make it (not too big, but just enough to have a nice lifestyle thanks to that) in a competitive niche. I targeted personal development. But now it’s also Entrepreneurship, Health, Lifestyle, Travel, Career, Finance, and more. The interesting this is that all this was happening as I myself was evolving. As a self-help enthusiast and a writer by nature, the magic happened only after I combined these two. Meaning, I defined my passion being personal growth and admitted to myself that I need to start writing and see where it takes me. It then became my hobby and my therapy, but I was also slowly building a blog. I didn’t know a single thing in the beginning. Not about the publishing world, not about blogging, making money online, building traffic, or designing a site with a CMS. But it’s easy, as long as you’re ready to invest the hours and focus necessary for that. There was never a business model. I just started with a simple wordpress.com site and kept it like that for a year. Then, I decided it’s time to invest as this blog was now sort of my portfolio. By that time I was already making my first money as a freelance writer, so no better way to build myself than to have more of my content published on the platform that I control. So I set up a hosting account and moved to wordpress.org. For the first years I was selling my self-published books on the website using WooCommerce, but now they are all on Amazon. Organic traffic itself was what brought attention, and also sponsors interested in linking to their website or mentioning their brand naturally from an article. Either I write it or they provide the content. I now often get around $100-$200 for a single quality piece that I publish in the form of a guest post. After I saw this business model became the best way to monetize the blog, I also invested more in better hosting, a premium theme (it now looks like a magazine-style blog and the focus is on content), optimized it better, started caring about rankings more, created a page for advertisers and did a few other things more professionally. I also do affiliate marketing, although it’s not yet a permanent part of my monthly income. I’m still testing, but what seems to work best and what I feel most comfortable with (like most other bloggers) is to simply talk about products I myself am using or am a fan of and include a link to them. No Amazon Associates, no Clickbank. Also, I was never a fan of ads and if you’re going to be creating a trusted resource and want to provide a great user experience, then Google AdSense isn’t an option. I focus on content, a lot of it, and quality. The good thing about the Internet is that this strategy still works. And spammy sites can’t do it better than you regardless of their budget, if you’re investing the time to create and distribute great content. ‍",1,1
114," So first of all, I did quite a lot of validation for Lieferoo. My first idea was to build a platform to connect people from Pakistan and Germany so that one person that was traveling to the other country could bring what another person in the other country wanted. I created a survey and shared it on different platforms so as to validate if this was something that people wanted. I also talked to around 100 people who used to travel. It took me around one or two months to figure out if this was something people needed. I even made a group on Facebook of people who were interested in bringing stuff from Pakistan to Germany or from Germany to Pakistan, and a lot of people joined it. Soon, a huge number of people were asking about what I wanted to build and I found a group of people on my Facebook who had the same problem. Many Pakistani friends also wanted to buy electronics and in Pakistan, it was much more expensive than in Germany. So, they started posting on Facebook asking if anyway knew someone who was traveling to Germany. That was when I realize I had to put more focus on the Facebook group. Anyway, only a few months before I realized that I have to pivot soon. Bringing stuff from abroad is pretty much risky because of two reasons: illegal drugs and taxes. Drugs was a really risky problem. The same with taxes, as if people wanted to bring something from Pakistan, they would have to pay tax on it. It was this weird combination and this operational problem which made me think that I had to pivot to domestic long-distance stuff, such as chairs, tables, etc. After a few months of working on the project, I finally launched Lieferoo website which looked like Airbnb but for domestic logistics. But I faced a big problem: People still did everything through Facebook and didn’t sign up to the platform. I really enjoy the process of building the platform because I never had built a website and a and a software product before - it was very interesting for me. I didn’t have to build it myself. I told my co-founder how I wanted the product to look like and he built it. The one smart thing I did was to co-found the project with a tech person I met in University. This way, I didn’t have to pay anything to a developer and it was quite easy and fast to make the MVP. People began signing up the project and putting stuff there that they needed to be transported. But really few people signed up in the supplier side. There were lots of things needed to be transported, but nobody to do it. I remember that a guy even wanted some stuff to be moved from Munich to San Francisco! There was one competitor of mine called Nimble which had the same problem. There were a lot of people putting stuff and nobody was able to take it. ‍",0,0
115,"  The development of every new product starts with prayer. I feel that prayer helps to relieve any anxiety I feel about the process and motivates me to create something that improves health across the world. Our team then conducts an online patent search to make sure we are not accidentally repeating someone else’s work.  Each new product, once a consumer need and demand is confirmed, goes through multiple phases from concept to completion, including conducting years of research in our San Diego laboratory. We put our products through rigorous studies with independent doctors and scientists to ensure the consumer receives accurate and expected results.  Then we start marketing and selling it.  I once worked for a company where I had to memorize a sales pitch about why a three-inch roll of tape was better than a two-inch roll of tape. I knew it was silly, but it was my job at the time. Once I left that job, I vowed to never use a sales pitch again. Selling a product like ours should involve natural conversations that seek to solve health problems for our customers.",1,0
116," The first version was released in about 3 weeks. For this version I received some help from a friend for the design (he’s the founder of Lovehabibi, a great success story). At the time I was a backend Perl and Java developer. I however chose to learn PHP and Symfony because that seemed more suited for rapid web development. I had only 3 weeks to spend because I was between jobs. After releasing the tool and starting my new full time job I didn’t touch it, until one day it got a couple of good reviews and started to get some traction (although it really was the MVP you can see in the screenshot below).  So I decided to invest some time to release a better version, with paid plans, to see if I could sell it. I used my free time, week-ends, evenings, holidays. When I sold my first subscriptions, I considered the opportunity good enough to quit my job and start working full time on the business. Fortunately I had enough savings to last until I could make a living out of it. From there I kept improving the product following the lean startup approach, using a mix of user feedback, looking at what the big players offered, and testing ideas. One thing I always tried to achieve is to keep the interface coherent, consistent, and simple. The tool got a lot of praise for that. And providing outstanding support.",1,0
117," LiveAgent was built as a spin-off project. Our first product was Post Affiliate Pro, an affiliate management platform, which popularity was growing rapidly. We were in the market for a new customer service solution when we realized none of the tools were sufficient. That’s when we started to build LiveAgent. It took 3 years for it to become a multichannel help desk software, like it is today but is still improved daily by new updates pushed by our devs. We didn’t plan on selling LiveAgent in the early days, we only wanted to use it internally. Some of our customers, mainly B2Bs, were asking us about the support tool we used. That’s how we sold the first license.  Today, LiveAgent makes up 75% of the company’s MRR, overcoming Post Affiliate Pro in both revenue and number of customers. Both PAP and LiveAgent are built with similar technologies, utilizing PHP & Java as the main programming languages and using MySQL, Kibana, Elastic and also Grafana for performance monitoring. Our servers run in multiple locations (EU, US, Asia) with multiple providers starting with Linode where most of our accounts run on the fast SSD nodes, AWS where the bigger files are stored. Recently, we started building our own “in-house” server farm in EU to ensure the highest performance possible and increase uptime. We will be migrating our EU customers there soon.",1,0
118," I launched it in 2016. It was an online marketplace built with Sharetribe. What I quickly learned was that using no-code tools was by far the easiest part of launching an online business. I did so many things wrong when launching it. The only thing I did do right was to choose Sharetribe. Sharetribe allowed me to launch with no worries about payments, authentication, admin controls, or giving different permissions for the supply side of the marketplace to access the application. Getting custom features was possible, but it was too much for what I wanted to build. Sharetribe was able to get me 80% of the product I wanted. I spent a year making this product without getting validation, without setting up an audience, and without doing all the steps necessary before launch. Justin Kahn, founder of Twitch, said that “first time makers focus on the product. Second-time makers focus on the distribution.” When I launched LocalTown, I earned some revenue and got press coverage in local news, but I wasn't able to sustain it. I started learning from other makers to understand why I couldn’t make it work. I was just seeing on Twitter a few makers building with no-code and I started documenting that. Then I created a tool called GetStackd, which became Product of the Day on Product Hunt. It was a form that helped makers figure out what tools to use. I created a database and then I created a simple logic using Typeform and Airtable. It mapped together your idea, your skill level, and the complexity of what you wanted to build. Then it scored the answers and mapped it to the tools that makers used for real projects. It was based on real data. Then used Zapier and Gmail to sent an automated recommendation. The feedback I got was tremendous. I've noticed that a lot of people need help with launching. And so that's what my next project is, which I'm also building with no-code tools.",0,0
119," By October of 2009, I’d left my job, and in January of 2010, I moved to Thailand where I began doing freelance SEO and freelance writing. What I realized later on is that this freelance work was the bridge from a life that left me unfulfilled and unhappy, to one that allowed me to do whatever I wanted to do. This also formed the basis for Location Rebel Academy. I believe the easiest way to get out of a day job, and build a sustainable long term lifestyle business is to follow a 3 step process: Build a website to use as your training ground for learning valuable skills like copywriting, SEO, the basics of design, and marketing.Freelance one of those skills (typically writing) you excel at to build your income, confidence, and momentum. Once you’re at $3k a month you’ve got options.Take everything you’ve learned and apply it to something you’re passionate about and build a brand around that. This video talks about that three-step process and is also my favorite thing I’ve ever made: Location Rebel the blog served as my training ground.Freelance writing helped me pay the bills while I learned how to work online. It then gave me the time to build the things I was excited about in Location Rebel Academy and my golf site Breaking Eighty. This sets the stage for Location Rebel Academy, our product. By July of 2011 I’d realized that I had learned a lot, and this process that I’d gone through worked for me, so maybe it would work for others as well. I spent 3 months creating a course that taught you essential online skills, but more importantly, taught you how to make money with them through freelancing. I spent 3 months promoting the launch. I released a PDF book of all the tools I used to work from anywhere, and then released 4 videos covering some of the main tenets of the business. This included things like the reality of job security and rapid skill-building. I did a “beta” launch of 20 spots for $297. We’d built up an email list of around 600 people, and I simply hoped I’d sell all 20 spots within a week. Being my first real launch, I didn’t know what to expect. We launched at 9 am on July 26th, and within 48 minutes we’d sold out all 20 spots. I couldn’t shut the sales page down fast enough and we sold 4 more. So in less than an hour, I made $7,000 - and that’s when I began to believe in the potential of what I was building. But it wasn’t all easy from there on out. Riding off the success of our beta launch, two months later I planned the “real” launch.  One of the mistakes I made early on, was thinking that I had to be traveling all over the world and proving you could “work from anywhere” to get people to join. So for the main launch, I moved to Bali for two months. I had huge expectations riding off our previous success. I got everything prepared, I stayed up late Bali time to do the launch, and when it went live?  Crickets. No more than a handful of sales. People didn’t need or necessarily want to see me in an exotic location. Most people following Location Rebel just wanted to be able to work from home from their sweats. Or have the ability to take their kids to the park in the middle of a Tuesday. It took me a while to learn that lesson, but once I did, it took some of the pressure off the travel aspect of the site. Since that launch 10 years ago, we’ve now had over 4,000 people go through the course. We’ve had hundreds of people quit their jobs and build successful online businesses.",1,0
120," The idea of Lunch Money started when my husband and I first moved to Toronto. Since I hadn’t been tracking my spending consistently during my sabbatical, I figured it would be a good time to start doing so since we were now more permanently settled and starting to share our finances. I started a Google Sheet and we diligently tracked all our spending for months. Since we were still traveling a lot, this Google Sheet also had to take into account multiple currencies and exchange rates. It quickly became too much to manage. I always had the idea to turn our spreadsheet into the app – I knew that if I could break out of the confines of Google Sheet, I could build something that was better designed with more computational freedom. I finally decided that I would start working on this initiative in Fukuoka. The plan was to decrease my freelancing hours to free up more time for this new endeavor. The initial designs were done in Sketch and I followed very closely the layout of my Google Sheet. I picked my stack to be a mix of familiar (React, Node.js, Postgresql) and unfamiliar (Semantic UI, Typescript, Redis). From January to April while we were in Fukuoka, my schedule was more or less like so: Wake up at 7:30am to attend stand-up for one of my freelancing companiesWork 2 hours for company #1 and another 2 hours for company #2Go to the gymCome home and cook lunch (a.k.a. practice cooking using Japanese ingredients!)Finish lunch and head to a co-working space to hammer out Lunch Money work, usually from 2:30pm until 7pm when our stomachs would start grumbling.Go out for dinnerGo home and work until we sleep (usually another 3 more hours of Lunch Money work) I don’t think I have ever been so disciplined in anything else in my life, but then again it’s hard to think of another time in my life when I was so motivated by what I was doing. It had been a long time since I have been consumed by a programming project and I was loving every single minute of it. My first goal was to get an MVP that my husband and I could use. I achieved this in early February. My second goal was for us to get completely off of our spreadsheet. I achieved this one month later in early March.  I started collecting private beta sign-ups via a simple landing page with a few screenshots between February and June. It was a long and arduous process to implement all the features I wanted for private beta and to polish everything up. Finally, in July, I launched a private beta to a group of about 50 friends and a few strangers. For the next few weeks, I collected feedback and worked tirelessly to continuously improve the product. I hadn’t thought about anything related to marketing or pricing– I just wanted to make my early adopters love the product first.  It was time to think about pricing. From my previous experience at the pet health start-up, I knew that I would not offer a free tier. We offered a free tier before and it was demoralizing spending so much time answering support emails from people who were never going to pay us for our time. I landed on a free trial which would eventually convert into a monthly or yearly plan. I picked an initial pricing of $3/month or $29/year which I felt was reasonably low for anyone to give my app a chance! In mid-August, I started having this sinking feeling that not having a solid marketing strategy was going to be my downfall. I had no real plan on how to get more users and my few attempts at posting on Reddit got me banned from some of the most popular finance-related subreddits. Not a great start. Then one day, on a whim, I decided to post a Show HN on Hacker News to introduce my product. Long story short, I ended up #1 on Show HN and on the front page for almost 24 hours. I got nearly 1000 signups within just a few hours! I stayed up that night responding to every single support email and diligently adding tasks to my Asana. I couldn’t believe that complete strangers were actually excited about something I had built! It took a few days to realize that I was now in a new phase of Lunch Money and there was no going back. ‍",1,1
121," When we first started working on our side-projects, me and Francesco were a pretty standard designer-dev duo. Lately, the lines have been blurring a lot, a while Francesco still does the bulk of development, I started working on the frontend of our apps, which are built with React. We’re pretty fast now, and we can build React prototypes of our ideas quickly, especially since we’ve created our own UI Kit, which is a set of components that are easily customizable and reusable. All these components are styled from a single, centrale JSON file. This means that when I change the branding of the Mailbrew.com website, even heavily, I can then copy the necessary parts of the UI Kit configuration, paste inside the Mailbrew app config, and see the app magically transform according to the new branding. Mailbrew has been particularly challenging though since each user is able to create and customize email newsletters, so we needed a newsletters template system, a backend that can generate them, a frontend that displays a live preview of the newsletter while you edit it and so on. In this regard, having a close beta proved to be essential since the first version of the apps was very rough around the edges, and also way slower than it is now. We’re much more confident releasing it to the public after these months of work and fine-tuning. Another big obstacle has been positioning. While we had our own idea of what Mailbrew is and who it is for, seeing our first few hundreds of users using it was essential in understanding what the value proposition is.  Not, for example, during the onboarding, we ask you what’s your role, and then after a few weeks of usage, we ask you to take a survey asking you a few questions that help us understand what’s Mailbrew for you. All of this, together, was incredibly helpful to craft a great landing page and shape the product you see today. ",1,0
122," As I mentioned earlier, it all started in 2014 when I launched the first version of KWFinder. The development process took me about one month. Right after, I posted it on Reddit, HackerNews and some other forums. This was the first-ever marketing activity done for KWFinder which stood behind its early success.  Given the fact that I was already a technically oriented person with experience in the online field, I was quickly available to launch and market the product without any third-party help such as investors or developers. This helped me to test KWFinder’s potential in a short time with almost no costs. Since there are two sides to every coin, my universality became an obstacle when the tool started skyrocketing. My main concern was the delegation of the tasks. It took me a while to get through it but at the end of the day, I must say that thanks to the people that joined me during the last 5 years, we all managed to bring Mangools on the level on which it currently is. ",1,0
123," The prototype was launched in late 2019, with some members of our community as early adopters. To be honest, it didn’t meet my co-founder and my expectations. It was our first time building a product, and we had like 5 customers.  But we didn’t give up. We decided to rewrite the product thoroughly and completely revamped the UI. Customers loved it, and we relaunched around July 2020 the current version. In the early days, we spent a lot of time talking to our customers. We tried knowing their “Job-to-be-Done” with our product and even asked them if we could record calls we had with them to build exactly what was needed.",1,0
124," We ran a significant pilot with a publisher across several of their domains. All of our use cases and personas were represented with this publisher to validate our workflows and get a deep understanding of the impact across the entire content process. I’ve been a practitioner my entire career, so I also knew my process’s pain points and bottlenecks very well. However, they weren’t frequently discussed or documented.  The idea of data-driven content optimization, strategy, and planning was not common in 2014, even though Google made a dramatic change to its algorithm in 2013 that required a mindset shift.  We focused a lot on educating the market. I also brought in several peers from my network to leverage their feedback and perspectives. We also spoke often with our customers to make sure we met their needs.",1,0
125," The initial website was very simple. Just a wizard that allowed you to pick a matboard, change the size and quantity and order. No accessories, very few options and a pretty rough layout. It worked though, we were getting orders! They just cost an arm and a leg in AdWords spend. In the first days, I called every customer that ordered to get feedback and also because I was so grateful to see success! I remember personally taking $200 orders at midnight because a customer needed something rushed. It was so much fun every order was like a signal from the heavens that we were going to make it. For the first year, all we did was pay for traffic, analyze that traffic, get feedback and iterate on our marketing campaigns and the website. After about a year we had a website that was turning a positive ROI on marketing spend and I had become an SEO/PPC expert. From there we added frames and other accessories. Continuously improved the website, built systems for production and customer service and kept growing. I will say having relatively slow and steady growth was probably a good thing. In those first years, we ran into lots of problems. Production couldn’t keep up, equipment would fail, employees would quit, partners would have kids (I kid, I love my nieces :)). It was fun though every day was a new challenge and we just kept at it. I do think we missed out on some opportunities by not investing more in technology and the website early on. We never got any outside financing for our business which was great but at the same time, an influx of money early on would have accelerated things. At any rate, by year three we were number one for most of our big keywords and had very effective PPC campaigns. The last couple years have been focused on launching a new site which is mobile friendly and much easier to use based on the learnings from the first version of the site. We hope to launch this soon and I believe it’s going to take us to another level!",1,0
126," Part of building the company involved understanding what are the reasons it could be shut down. I wanted to make sure I mitigated the major risks, before market testing. My conversations with Uber made me realize the importance of the law when dealing with on-demand business models. In every city, Uber was ruffling feathers and getting lawmakers to scratch their heads. The older generation didn’t trust Uber, but the forward-thinking millennials didn’t care. The model was working and the company had done lots of work on assessing appropriate drivers, protecting their liabilities, and marketing their business. Obviously I couldn’t copy everything they had done since we were in two different businesses, but their success was an inspiration. In my head, I was on the right path but I was proven wrong. To dive deep into food law, the first thing I did was speak to friends who owned or worked in the industry. I started to learn about various laws, inspections, audits, and policy-makers in charge of the industry. I spoke to many cooks and caterers, logging all of their feedback while pitching my idea. Many were enthusiastic, but uncertain about the rules and regulations I would face. Those that owned restaurants and catering businesses cautioned that I would be in trouble for starting this business. I couldn’t derive any real conclusions from these conversations. I had to go to the source of the truth. I found applicable food laws on the internet and started reading. I had never owned a restaurant, and never even thought about the laws surrounding this industry. It was not a fun read, but it taught me a lot. It was not enough to read just Ontario’s laws, I needed to read bills and laws in forward-thinking states like California and New York. I learned about home cooking bills that were submitted as a result of the recession, which were not acts in some parts of the United States. During the time these bills were being passed, Canada took a step backward and decided to limit what could be cooked and sold at home. I realized the business I would be starting could lead to a public debate. People had strong opinions on this, and if large states and countries were deciding how to regulate it, I knew I was playing with fire. To prepare myself I spoke to a number of lawyers who listed these bills and laws in their blogs. Any lawyer I came across in North America, I would give them a call, and schedule 30-minute meetings over lunch. I would have a disgusting burrito bowl in one hand, while arguing on the phone for a homemade marketplace in the other. I learned a lot from these conversations by trying to understand where the laws came from. I learned that none of these laws were airtight, and the city didn’t have the resources to defend them. I also learned there were lawyers very interested in my idea, and desperately wanted to see it succeed. The best advice, however, was to get insurance. I recall how long it took Uber and Airbnb to find the right insurance partners, and I knew this was going to be a struggle. I shopped around and spoke to a few different companies but was unsuccessful. It was not until one of my lawyer friends introduced me to a small insurance company, that I caught my lucky break. Together we discussed the business, the legal structure, and obtained a two million dollar liability insurance, which we thankfully never needed. Again, I learned so much from all of these conversations. Food companies need insurance from all sorts of things! It is really interesting to see what makes the world tick when you look under the hood. Now that I had the laws and insurance checked out, I needed to know if this really was a business I could work on. I had been looking at competitors and the market, but I wanted to dive deep. I got in touch with every single competitor who would speak to me and asked them how they got started. To some, I would lie and say I am a student learning about the business. To others, I was honest and told them exactly what I would do. Speaking to my competitors was an obvious move, but it still surprises me how many young entrepreneurs I speak to that neglect doing this. There is a risk you obtain no information, but then you don’t really lose anything. However, you could obtain great feedback and an even better understanding of what you are about to commit to. I spoke to over a dozen competitors from around the world and learned about their challenges with regulation, the business model failures, and general small business qualms. Some competitors offered to be a mentor, others told me I would fail. The conclusions I drew from these conversations, however, made two things clear. One, that no one had won in the market, and yet everyone loved the insight. To me, that meant it’s anyone’s game, and you just have to play your best to see where it goes. Those are the best games. There’s no Goliath. No heavy hitters. You’re not playing the house, you’re playing each other and the outcome could be very lucrative. Secondly, none of these competitors knew what they were doing. We were all up against laws and trends that were constantly changing. We were playing in an evolving industry and there were no right answers. We’re playing poker blind with equally shitty cards, yet somehow everyone believed they could win. Welcome to entrepreneurship. Or so I thought.  Alongside my direct competitors, there were companies that were trying to solve the same problem as us. These were food delivery companies like Foodora and Uber Eats, along with pre-made boxes such as Chowdy. I decided to speak to each of these and learn what they did to start their companies, and how their business models worked. This was incredibly helpful as it allowed me to see how we could be different, and also gave me an idea of the price point that made sense. My chat with Foodora’s MD was incredibly helpful, as it showed me the costs of running a delivery startup, and how their unit economics could only work at scale and with top-end brands. This left a huge room for the long tail - which was my target audience. The question that remained was whether or not I could convince people to buy these products and that led me to start market testing. Up to this point, I had spent around 2-3 months doing this research, while working full time. I had no website, and a few friends interested in helping me out. I tapped two of those friends, Halima and Alan, and asked them to make some food for me that I would sell and deliver on their behalf. They agreed. I asked them to make the food and let me try it (free food!) and I took pictures that were used to create flyers. I posted these flyers in the lobbies, gyms, and community centers near where Alan and Halima lived. Since it was downtown Toronto, the population density was high enough that I thought I could obtain enough traffic. I added my mobile number for people who were interested in buying the meals, and did not source Alan or Halima specifically in the ads. Luckily, people started calling. At first we offered only 3 meals per cook, but within a few days, we had to ramp that up to 10. Halima and Alan were starting to sell out, and they wanted to experiment with other meals. Simultaneously, I would interview strangers walking around downtown about my idea. I would take some work from home days or spend evenings talking to people and seeing if this opportunity had potential. A combination of these things made me overlook the fact that most people buying from Alan and Halima were people that already had an idea of this concept, and were just buying this on a trial basis. These sales were false positives, and I should have spent longer here studying the market. Since I thought the market was telling me it is time to grow this, I tapped one of the hackers - Justin - at my breakfast event to build a website. I had already built the preliminary website called ‘foodali’ at the time, but it was not good enough. Justin saw my progress and we had worked together on something in university. He trusted me and I think that is why he joined. I guess he also liked free food tastings and the idea that this was part mission-driven. It’s important to note that while I had done a significant amount of legwork, I kept him and anyone else I wanted to work within the loop. It added to my credibility, but also it kept me accountable. In some ways, I always knew I’d work with Justin, Halima and Alan, and I just needed to create a reason. This was the point where I thought I could start looking for cooks outside of Halima and Alan. I thought this would be difficult, however I was wrong. Craigslist had tonnes of postings and I was able to contact many of the cooks and they were interested. I had to convince some that this was a website and platform for them to sell, while others got the idea right away. Before onboarding them, I needed to make sure they were safe, and that I could trust them. This is where free food tests came in. I printed out the food preparation checklist from the government website, and studied it. Some of the items were outdated, and I knew if I asked cooks to let me inspect their homes with a printout, they would be curious. I had to create more legitimacy and this is when I decided to get a lawyer on board. The lawyer would help me draft documents that I could use to prove what we were doing was not illegal, and update the checklist, such that it was relevant. The biggest benefit of doing this, along with having a website, was that it gave us more credibility in the market. We posted these documents on the website for anyone to read. At this time Justin was also wondering if we needed a designer to make the website more appealing. I had worked with Etan during an internship at BNOTIONS before joining RBC and I thought he would be a perfect fit. I reached out to him at the time, and he agreed this would be something exciting for him to work on. ‍ ‍ When the team of three was formed, the website and documents were ready, I set out to call, visit, and acquire cooks. It was a brutal effort, travelling around the city to find cooks, only to realize that sometimes they were not interested. I visited parts of the city I had never known, and met people I would have never come across. It made me appreciate the diversity that exists in this great city. It’s worth noting the goal of this business was not to try and check every meal eventually. Airbnb staff don’t visit every house, and Uber doesn’t check every cab. I knew if this was going to scale, I would have to stop these checks eventually, but as Paul Graham says, do things that don’t scale. ‍ ‍TLDR: Studied the regulations, identified gaps, obtained insurance, spoke to competitors.Started with flyers in buildings and two friends who were cooks, spent time interviewing people and being customer-focusedGot cofounder for a website, found cooks on craigslist and community centersCreated a food inspection checklist with a lawyer, checked every home for safe cooking  ",1,0
127," Our MVP was as simple as it gets: a group chat where we would broadcast a menu of 2-3 items from a popular restaurant, with specific drop off times and locations. Our target market was students at dense locations on campus. We spammed existing group chats and added friends to find users. The goal of this was to answer a few questions: did people have similar problems with food delivery as I had? Does a cheaper price make the limited selection and drop offs worth it? Will the routing times actually pan out accurately to be more profitable then existing services? What simple gamification scenarios might work (ex. Order even earlier for a discount. Have product scarcity to encourage quick decisions). We found relative success with this, notably 17 items dropped off within 45 minutes for our best delivery. Our solution to their pain-points was immediately recognized. We even made just a bit of money through ordering catered prices and selling at menu price, despite no delivery fee. Jack and I did the driving ourselves. This only went on for one week, then COVID hit, and all students were sent home off campus. But we took this validation, and prepared for a real product launch. We had to shift away from campus and downtown to apartments instead. We launched a website to sign up and subscribe to menus, which consisted of automated daily text messages. ‍ First Launch and Obstacles We didn't gain the traction we wanted during this new launch, which happened in June. We again used Reddit, group chats, and experimented with Facebook and Google ads. Our previous target customer, students, were not around, so we tried to focus on acquiring customers at apartment buildings by approaching apartment office leadership. Growth was slow, and towards the end of the summer, we had 75 subscribed customers, and while we were able to achieve occasional bulk drop-offs and successful trips, it was clearly not sustainable. I still believed that with the return of students, we would find greater demand, so instead of trying to accelerate growth over the summer, we spent time learning the logistics, some customer behavior, and built an online ordering + tracking system. ‍ Relaunch With students returning in August, we relaunched with a streamlined website ordering and checkout process, as well as implemented card payments. It was (almost) like a real food delivery product! During this, our customer base rapidly grew, so we started to expand restaurant selections, utilize route optimization, and experimented with different features and pricing strategies. We wanted to validate that our service could be profitable down the line, so we maintained a balance between trying to obtain margins on deliveries, acquiring, and retaining customers. One extraordinary benefit of this model is that as orders increase for one trip, the average time between stops decreases, as they are more likely to either be at the same location or closer to each other. For example, within a 1 mile radius, dropping 10 items off might take 25 minutes over 5 stops, but 20 items could take 35 minutes over 8 stops. ‍ Notable achievements $10k MRR at time of shut down (commissions and fees averaged 13% of this)500 usersOver 15 items per trip on averageLess than 30 minute average drop off timeBest quantity: 47 items for one mealBest profit: $420 payed by customers for a $350 meal at bulk price, over a 45 minute drop off timeThousands in fees saved from customers, in additional payout to restaurants, and driven miles reduced as compared to if the orders were fulfilled on-demandAccomplished largely from August 2020 to October 2020, doing our own driving, and just 2 meals/drop off times for weekdays! ‍ Hacks Very first payment was only from Venmo/PayPal. We would send payment requests after dropping off. Fortunately, and miraculously, nobody ghosted us!We initially created routes manually and sent our Twilio texts manually (from a basic web app) like a dispatcher for order updates. We had routing and estimation implemented just before this became too overwhelmingTo roll out website ordering with limited front-end experience, we leveraged Webflow to create our UI. Their e-Commerce did not meet the functionality we needed, and they only had a back-end API, but we still used some of their item creation and display, so we glued together DOM manipulations as well as our backend API to create our ordering and checkout process. ‍",0,0
128," As a first-time founder, this was incredibly painful. Today, I know all about how you should validate an idea first, talk to customers, build an MVP, seek further validation and then think about a proper product. Back then, I had no idea! I had never heard of sites like ProductHunt or IndieHackers. So, I took the tools that I already had in my belt (being able to code stuff in Python and write some crude HTML/CSS) and started building. First a landing page, then the full product. ‍ If I look back to this, I made a ton of mistakes: instead of letting my early potential users dictate my scope, I thought of all the cool features I could add during my commute. Instead of validating the business and asking potential mentors and mentees what they’d look for, I did it all in my head. Honestly, thinking back to it this would’ve been destined to fail. What I ended up with was an overblown MVP scope. The site had to have a scheduling feature to schedule meetings, right? And the chat solutions that were out there were too expensive, gotta build my own. Let’s add a to-do list function, a way to send sample projects to each other, and what about a community? Let’s add that one too. If there is one thing that I did right, it was talking to people every day. In my head, making this work relied on having good mentors on the page, so I DMed and emailed people every day, asking them to become part of it. The MVP took me around 4-5 months to build, which is a stupidly long time and mainly caused by the huge scope. When I was ready to launch, over 100 people were interested to become mentors, many of which had 10,000s of followers on Twitter. The strategy was clear: They’d all sign up, share their profile and all their followers would come streaming in. Well, that didn’t happen of course. Out of the 100 interested people, around 10 ended up signing up, and maybe one or two of them ended up sharing their profiles elsewhere. Now, the work began. ‍",1,0
129," Although I had taken a PHP programming course the previous year, I had never developed any applications. I only had done some smaller stuff in HTML and CSS, so I had to learn to code almost from scratch. The timing was great because at that moment I was looking forward to learning how to code, and learning by doing (working on a real project) is the best way. For the MVP I used Codeigniter as a Model-View-Controller framework, jQuery for front-end animations and logic, and MongoDB as a database. I coded everything myself (AKA: copied and pasted a lot of stuff from StackOverflow) and from time to time I asked a cousin Juan (an engineer who had bootstrapped his own eco-groceries delivery company) for help.  After two months, in January 2013, I launched the first version of MetricSpot. It looked okay-ish, but it was enough. The MVP only had one of the tools, the Home page SEO analysis report. ‍ I contacted a few marketing bloggers to publish a review and MetricSpot began to get traction: I reached the 1000 visits/day milestone in only two weeks. Most people only notice you when you’re already successful. “Lucky guy”, they say. However, they’re missing out the big picture: I had no money at the time and I had to work my ass off to get my business running. I freelanced for 6 months to pay the bills, later I got a job as a software developer and worked nights and weekends on MetricSpot. In January 2015 MetricSpot was finally generating enough income to quit my job and focus 100% on the company.",1,0
130," Publishing my book led to starting a podcast with a co-host, Mike Taber, called Startups for the Rest of Us in March of 2010. The podcast began as two software entrepreneurs talking about their journeys. Between that and an online community we started, we realized that while message boards were fine, we wanted to meet people face to face (“IRL” as the kids say these days). So we decided to bootstrap a conference. Never. Do. That. Since we didn’t have the money to pay a hotel up-front, we got a first right of refusal on a couple of dates at an old hotel in Las Vegas. We then asked a few speakers like Patio11, Hiten Shah, and Andrew Warner to speak. At the time, our tagline was unique: The Conference for Self-Funded Startups. There were zero events like this for bootstrappers. We proceeded to hack together a static HTML landing page, promote it to our podcast and blog audiences, and submit it to Hacker News...all the avenues you would pursue in 2010. We got enough interest to start selling tickets, though in the end, we didn’t sell nearly as many as we’d hoped. Our original goal was 225 attendees, and we had right around 85 paying attendees. Ouch. Running an event was way more work than we thought, and we almost lost tens of thousands of dollars but were saved by a last-minute sponsorship from Microsoft. We wound up just about breaking even, and although the day after we swore never to run another in-person event, we’ve now run dozens of them over 10 years. And we’ve since expanded from in-person events to our online Slack group MicroConf Connect, mastermind matching, our YouTube Video Vault, and several other resources we’ve built for the SaaS community. ",1,0
131," The initial idea for the bat, as the story goes, was dreamed up by Marcus as he watched a cricket match from his hospital bed, recovering from a stroke. Cricket bats hadn’t changed much in design since the turn of the century, but the game had with the introduction of faster paced Twenty20 games (T20 games last for around 3hrs, compared to the 5 days of a test match) where the sole focus was on attacking.  Following the initial idea that cricket bats should be updated to match the changing demands of the game, we worked with a small manufacturer in Cambridgeshire to design the bat. And following some tweaks, such as re-positioning of the ‘splice’ (a cricket bat is made up of 2 parts, the join is called the splice), the unique design was born. An explanation on the bat, as featured on C4 news:  The bat was initially code-named the ‘Albert Trott’ bat, in honor of the only person who had hit a ball over the Lord’s Pavilion (Lord’s is a cricket stadium, colloquially known as  the home of cricket). After some deliberation, the bat was renamed the Mongoose, as it was small and ferocious, and 22nd May 2009 the new bat and brand were launched. There was quite a big, glitzy, PR launch planned at Lord’s where a conference room had been hired. Our PR agency arranged almost all of this and through contacts, we’d roped in a number of ex-professional cricketers to show off the bat in a practice area. Lord’s made an amazing backdrop for all the press photos and interviews, giving credence to this unusual looking bat and from a PR perspective the launch was a roaring success receiving coverage in every British newspaper, a 5-minute segment on BBC Breakfast TV and a 10-minute segment on Channel 4 news.  ‍ The website at the time we were using for our direct-to-consumer sales was a Wordpress site, customized to power our e-commerce sales. Over the first week since the launch we sold 24 bats via the website, making around £5,000 in sales.  We had no idea on how the launch would be received and no cash to build up stock, so the bats were all handmade to order by Hunts County, the manufacturer based in Huntingdon. They were a small, family-owned business, who made bats the old school way, by hand, with a drawknife and spokeshave so their knowledge of technology was limited, to say the least.  To get our orders to them I would have to email across a manually updated Excel doc every day and then follow up by phone to check they understood it!",0,0
132," My co-founders and I prototyped many different products over a period of 6 months but eventually did not release a working product. We started by interviewing freelancers and small business owners, trying to better understand pain points in their workflows. Almost everyone said finding new clients/customers was a huge pain point many also said getting paid on time by clients/customers was a pain point. We built stubbed-out prototypes in Photoshop and HTML/JS (without real data) so we could simulate different product ideas and get feedback from potential users. This design-feedback-iterate loop gave us learnings, but differences in opinion among the co-founders also quickly emerged, both in terms of business direction and in terms of what our goals were for doing the startup. These differing views soon became too big to ignore and, eventually, too big to proceed with -- this was ultimately the cause of our startup’s demise. I learned a lot about how to do a startup through this experience, and importantly how crucial it is to be aligned with your co-founders on foundational motivations and philosophy from the very beginning. Without this, it is very difficult for a startup to survive.",0,0
133," Right after the idea of Mubert came to me back in 2016, out team immediately started creating the MVP. At the time, it was just a web interface with a list of genres and endless generative streams. The first people to see the concept were our friends and colleagues. Our first public release was at one of Russia’s largest music festivals, where all the participants could influence the music stream in real-time by scanning their emotions. As the feedback was positive, we decided to raise funds for the initial product development and that's how I found myself in the US back in 2017. We were a team of professionals with a deep passion for music and tech and though there were some challenges on our path, we did it! We built the whole ecosystem in less than six months. The first public launch of the app was in late 2017 – an interface with three channels of functional music – but it was first publicly recognized in mid-2018 when we got the App of the Day award in Japan. And since then, Mubert kept growing to what you can see now. We wanted to be freemium, as it’s rather hard to ask people to pay for a product before testing it, especially when it’s an innovative music concept. Though the first versions were completely free, we’ve since limited access to additional channels on a subscription basis.",1,0
134," I've been building web applications for a while and have been using the same stack for about six years. This is a big advantage for a bootstrapper. I reuse visual components, pieces of code, marketing copy and overall best practices I accumulated over these years. The most basic version and one that I demoed to some coworking owners was done in about a week. Just built to see what their reaction would be. Whenever I start something new, I work on it full-time for a fixed period of time. This means my other businesses go in ""maintenance mode"" where I only do bugfixes and customer support. I ""launched"" it like this with one plan for around $29, I think. The launch was just letting the interviewees know about the launch and sending out a mailing to the people who signed up through the landing page I set up. And then… Crickets. Nothing. Nada. People visiting the site visited maybe one more page and then left. In the meantime, I had to catch up on some work on my main business, which in turn didn't help Muun. After a few weeks, I emailed the same owners and email list again, along with coworking spaces I visited myself in the past.  ",0,0
135," The concept of My Auto Shop started in October 2019, and through a couple of months of research and iteration, we landed on a prototype that was a similar business model, but had more of a primary focus on an ‘Uber’ delivery experience of customer’s cars using e-scooters. We wanted to push that live and then ‘learn as we go’. This was built quickly by a friendly development agency and pushed live in January 2020.  In my experience, it’s important that before anything launches, you understand the macro environment of where your business is going to sit. What are the customer demographics like? What are their purchasing habits? What does the vehicle market look like in New Zealand? What’s your TAM? etc. However, we wanted to get our hands dirty ASAP so we jumped in head first pretty quickly. We intentionally launched in a quiet time so we could figure out our operational processes. Unfortunately, (or fortunately) we landed on the national newspaper and suddenly had jobs coming through, which led to a frantic couple of weeks. Once we got our feet under us we started moving well, only to be hit with COVID lockdowns next. We’ve only just been in a position to really focus on growth in recent months.  ‍",1,0
136," The first version of MyMurmansk (the original website that laid out the foundation for MyCity) was built by my co-founder Dennis in just two nights, even though the idea came nine months earlier. At first, no one from our three-person team had time to build it. Everyone was busy with their day jobs, and it was supposed to be just a side project for fun. Then we hired a student to build it to our specifications, but he didn’t do a good job. Then we sort of just forgot about it and moved on with our lives. Until one day in March. Dennis just wrote to me one morning: hey, I sort of lost faith in hiring anyone to make that website, so I just built it myself last night. Take a look. My reaction was: 😍 That was exactly what we wanted. I immediately started preparing a press release, thinking about how we can promote it. Two days later, we launched MyMurmansk. And then the roller coaster began.",0,0
137," The project began in 2016. We did some typical rookie startup mistakes by not analyzing the market, competitors and customer problems first. “Make it cool, and they will come” - was our philosophy at the time.  The first model was made literally made out of cardboard, we used it just to check size and proportions. Thanks to a great partner-company in Plovdiv we then we manufactured a real, working prototype from sheet aluminum. The feeling of actually riding your creation for the first time is indescribable! This model was three-wheeled with tiny wheels and a rough seat. We spent more than two years of improving it, testing with customers and following their feedback. In the middle of 2018, we abandoned the three-wheel configuration, for a simpler and more reliable two wheels. Already we had a few early customers and growing fan-base.  Concerning pricing - our product is slightly different from competitors’ (maybe even resegmenting this market). We know that there are cheaper models out there but we think it won’t be the deciding factor for the people who praise the value of Narcine.  ‍",1,0
138," The Million Dollar Case Study from JungleScout laid out the Amazon FBA process with extremely simple step by step instructions. I followed along each step of their process to launch my product on Amazon. The research started in May 2017, after I had discovered JungleScout. I used the JungleScout Amazon analysis tools for my research. I was on the lookout for an underserved market. I was looking for a niche on Amazon that had good organic search volume, good sales volume, and poor competition. I narrowed it down to a few options including slime storage jars, hanging wall file folders, inflatable limbo games, inflatable pineapple pool floats, and inflatable loungers. In my research, I found that each of these niches were underserved. Each had good sales, but there was barely any competition that stood out with good reviews and a great product. I decided to launch my Amazon business in the inflatables niche. Starting with inflatable loungers, then moving on to inflatable pool floats and inflatable games. I chose the inflatable lounger to start. I chose the lounger because, in my research, I found that the top ten results on Amazon for the search term “inflatable lounger”, each competitor was generating over 300 sales per month. Some up to 2,000 sales per month. I knew that, if I could rank my inflatable lounger product within the top ten search results, I could provide a better product and generate at least 300 sales per month (equal to $9,000 monthly income!). In addition, when I researched the competition, most of the other inflatable loungers sold on Amazon had bad reviews (3 stars or less). Plus, most of my competitors had less than 20 reviews in total. I knew if I could enter the niche, get more reviews than my competitors, and ramp up my sales quickly then my product would stick in the top ten search results for “inflatable lounger” on Amazon and the passive income would roll in every single month. Once I found my niche, I researched how I could improve the inflatable lounger to deliver a better product to my target market. In my competitive research, I found most of the bad reviews for inflatable loungers were a result of poor durability, difficulty of inflating, and comfort. My competitors were selling cheap products. The loungers would break easily, they were hard to inflate, they didn’t hold air longer than 30 minutes, and they just weren’t comfortable. After doing more market research and talking to consumers, I found my differentiator. I would enter the inflatable lounger market with a premium product. My lounger would be designed with a square head shape (more comfortable), it would be the widest and longest lounger on the market, I would use a premium 210T Nano Nylon (more durable), I would use a single mouth design (easier to inflate), and it would have a stronger clamp to keep the lounger inflated longer. Through June and July 2017, I spent my time endlessly researching manufacturers and testing samples. I talked to hundreds of manufacturers on Alibaba until I found the perfect partner based in China. We worked together to custom design my lounger. A lounger that was durable, lightweight, more comfortable, and easier to inflate.   In August of 2017, after spending almost three months testing samples and talking to manufacturers, I placed my order for 500 units of my custom-designed inflatable lounger. While my inventory was being shipped overseas to the Amazon warehouse in the United States, I worked on the Amazon listing and began to kick off my marketing efforts. I worked with a professional photographer to produce product photos with models using my inflatable lounger. These photos would be used in my Amazon listing. I created a website for NE Lounge, and started driving traffic to the website to let everyone know that a better lounger was coming soon. I had professional videos created to show how to use and inflate the lounger. I had a product insert designed that would be packaged with my lounger, this included instructions on how to use the lounger and information about NE Lounge (for marketing purposes). I found the keywords I would target with my Amazon listing. I would start with the terms Inflatable Lounger, air chair, inflatable chairs, and wind chair. These keywords had a great search volume on Amazon. If my Inflatable Lounger showed up on the first page of Amazon when people searched these terms, I would get sales. I created my Amazon listing title, with my keywords mixed in. The title I chose was: Inflatable Lounger Chair | Premium Inflatable Lounger by NE Lounge | Quick and Easy Inflatable Air Chairs | Run 10 Steps to Fully Inflate | Perfect Inflatable Chairs for Festivals and Beach Lastly, I finalized the rest of my Amazon listing with a detailed description and five bullet points that defined my value proposition: EASY INFLATEQUALITY DESIGNCOMFORTABLE INFLATABLE LOUNGERDURABLE & LIGHTWEIGHT100% MONEY-BACK GUARANTEE By September 2017, my first round of inventory reached the Amazon warehouses. Just a few days later, I officially launched NE Lounge. A few days after that, I got my first sale.",0,0
139," So, the process I take to build all of my projects (including NerdPilots) starts with talking with my main designer and explaining to him what I want to build. Then I send him examples of things that I like from different websites. A couple of days later, he comes with the website design. After this, we spend a couple of days improving it. I ask some of my friends what they think, and then I go to my developer and tell him to code the design into a website. And that's it. We started NerdPilots with the service model. We had a rudimentary back end where people could manage their projects. But soon we moved into the traditional agency model site as I found we had three clients and it was already a mess. Since launching NerdPilots, we completely redesign the homepage. I didn't like the original design that much and we had to remove the SaaS options. When you're doing unlimited design or development, you're looking at a different type of client, such as small agencies with their own clients that need help. But dealing with them was not enjoyable. And we also realized that we were going to spend the same amount of time working to acquire a client that was going to pay us a $100/month versus $50,000 for a project. So, after we got a big $38,000 project, I realized that we have to focus on bigger projects instead of small subscriptions that paid $69/month. Right now, NerdPilots has 12 team members – 1 project manager, 2 designers, 2 assistants and 7 developers. But at the time of launching it only had one team member. I promoted the business on some Facebook groups, but I was limited with how many clients we could take because our back-end wasn't really that great. ‍",1,0
140," I took feedback from the community on the things that would help them out and then built a site around those needs. Initially, the site was just a list of interviews and then I started to add more features over time. The hardest part was picking the right features to build. In some cases, I ended up spending a long time building features that weren’t very popular so I think it’s really important to sniff out the areas that are working and focus on those. The other issue is that the site allows users to add a lot of their content (startups, jobs, posts, meetups, etc.). After a while, the site had thousands of dynamically created pages, some with poor-quality data which I’ve had to tidy up manually. That took a lot of time so it would have been better if I had a system in place to manage that from the start. I think that’s an important consideration when starting some type of community platform. The site is purely built on Bubble and uses Zapier for a couple of automations and Mailerlite for the newsletter. In terms of how long it took to build, it’s hard to say as I’ve tweaked along the way but I imagine it’s into the “thousands” of hours now. ",1,0
141," Having worked in the industry for a while, I knew some people who were experts in various disciplines that could help drive results for our early clients. When we started in 2017, NoGood was 100% remote. Put a team of smart marketers together and they’ll always be able to drive results. However, the whole point of starting NoGood was to build something that was greater than the sum of its parts. This would require more team collaboration, culture, and more refined processes. I made the first hire for the core team in early 2019, and we worked together out of a small office in a WeWork. By the end of the year, we had put together a real team with designers, developers, a data scientist, growth strategists, a few performance managers, and creative designers.  We continued to expand the team in early 2020 as we brought on more clients, but as luck would have it, we’re right back to being remote.",1,0
142," None of the founders knew how to build a mobile app or had any prior knowledge of programming or coding. The founding team mainly came from marketing, design & finance backgrounds, hence mobile apps were definitely not within our domain of expertise. We had to hire programmers to help us with creating our app, but it’s super challenging to hire technical roles if you don’t have the expertise to assess candidates. In the end, we did manage to roll out an MVP, which consisted of a simple booking system and a listing of all the major clubs in Singapore. But due to our inexperience and the lack of capable developers, we were unable to take our product to the next step, and ultimately had to pivot our business in order to survive. We then created NOX Express, an alcohol e-commerce website, using Shopify. With the connections we built through NOX, we aimed to educate consumers on the different varieties of alcohol available at affordable costs. We worked with suppliers, importers and brand owners to market their products to our users. ",0,0
143," In August 2014, I pitched the idea to my colleague at the Japanese company I was at who had experience with sourcing products from China - he loved the idea and agreed to be my co-founder. His wife was Japanese and this also allowed him to research the best Japanese survival gear/equipment.   We called it Okami Pack because okami means “wolf” in Japanese. We wanted to make the most effective “wolf pack.” We even spent a few nights walking around Akihabara trying to find the best survival tech gadgets. Most of the initial few months were spent on product market research so we could finalize the initial product concept. We studied all the survival equipment in Japan, all the Kickstarters of innovative survival kits, and many of the available bug out bags on the market in the United States.  Online, I realized there were entire communities of “doomsday preppers” - so I read many of the forums and subreddits to understand the different types of survival gear. Eventually, I recruited a team around the Kickstarter — all based on the promise of future payment should the Kickstarter earn money (a % of profit structure). At this point, I was fully confident it would succeed. Our team was: co-foundervideo production team for the Kickstarter videographic designerweb developerproduct designer & developer Our initial version wasn’t so pretty, but it was functional: The inside of the pack was separated based on three needs —sustainment (to address nutrition, drinkable water/purification), first aid + hygiene, and tools (lighting, chargers, fasteners, protection). We tried many iterations but struggled with form vs function. The more items the pack contained, the longer the pack could sustain survival situations, but the heavier, less portable, and thicker it was. We also understood the importance of aesthetics given it’s target demographic (affluent urban millennials).  By May 2015, we finally had the pack finalized and our first official prototype. After completion of the initial prototype, I got help from SCORE, which offered free small business mentorship and was immensely helpful. They took my prototype seriously and made introductions for me. In May, I had Prepared Associates (an emergency services company) review the pack. I also had a Director at the Department of Homeland Security & Emergency Services review the pack as well. By June 2015 — 9 months after starting, I was running painfully low on funds (less than $1,000 dollars). I met with a product development company for breakfast — ones who had done their own Kickstarter successfully — to recharge my motivation. They informed me of the likely costs of manufacturing our prototype and explained that the most painful part was actually after launching — fulfillment. They asked about my remaining capital reservoirs.  This was when a harsh reality began to set in.",0,0
144," The Ombori Grid took a long time to come to fruition. In 2015, I realized that building m-commerce apps was far too slow and expensive. The speed and cost of development just couldn’t keep pace with the rate of change of the industry.  What retailers needed was a simple, fast way to get hold of a mobile commerce app that would integrate with their website and back-end infrastructure. So, we came up with the idea of Web2App, a tool that would automatically create a mobile commerce app based on the customer’s existing e-commerce site, literally within minutes, with no coding required.  Then, we realized that what they also needed was a marketplace, like an app store, where they could just go and find the product they needed, customize it, and deploy it without even talking to a salesperson. We called it PresenceKit, and you’ve probably never heard of it. In the meantime, we were building all sorts of interesting pilot projects with companies like House of Dagmar, Lindt, Telenor, and Clas Ohlson, and then, in collaboration with Microsoft, we built a talking, voice-controlled interactive “selfie mirror”, which was installed in H&M’s flagship store in Manhattan.  That led us to talk with major brands around the world who told us that they wanted fun digital things to put in their stores and transform the shopping experience. And then…COVID. The worldwide lockdowns meant that every single project we had was put on hold, pretty much within a few days. We had to come up with something fast, or go out of business. We’d already been talking to Kjell, a Swedish retail chain, about IoT systems to count the number of people in stores, so we fast-tracked that and started deploying it to customers worldwide.  Because we’d built everything starting from a mindset of rapid and easy deployment and compatibility with existing hardware and software, what we ended up creating was effectively PresenceKit for IoT. The Ombori Grid is a unifying platform on which all of our solutions are built, and then there’s a marketplace of ready-to-use, customizable Azure IoT apps that can be deployed and scaled rapidly.  So, as well as occupancy control, we have appointment booking systems, video customer service systems, order pickup systems, digital signage, self-checkout systems, interactive wayfinders, and more. A client can come to the Marketplace and find all sorts of ways to transform their premises and the way they work, run a pilot, and then scale up when they’re ready.  It’s not just for retailers - our solutions also work for offices, healthcare, restaurants, and all sorts of other businesses. ",1,0
145," The process of making an idea that only exists in a creative’s mind into reality can be tricky. In our case, it took 4 years to deliver the first canoes to our clients. Everything started with paper models, the first made in 2013. Soon after, we started developing the first prototypes by hand using material we got for free from manufacturers that believed in us. This allowed us to get far enough to apply for government funding (subsidy) allowing us to make a few prototypes of high enough quality to kickstart our crowdfunding campaign in July 2016. These were produced by industrial tools: we used custom extruded gunnels, made the material using our manufacturer’s laminator and applied the folding lines using a CNC-machine with some custom modifications we made especially for the task. The initial prototype looked quite a bit smaller than the current canoe and was very unstable. A lot of the principles are still preserved through. We never had any doubts about the technical feasibility. And we were never proven wrong. As every startup though, we did have financial doubts. We put in all our savings, but this was far from what we needed to develop this. Product development took longer than expected and finding our initial investors took time too. There certainly have been a few times where we didn’t see how we could continue funding the company, but somehow, we always managed. We did love the process though. Building and doing completely new things is what makes startups great and drives us! Considering the pricing of the product, you define a lower limit based on your estimated production costs & an upper cost based on the market. We launched the product on Kickstarter, and that went better than expected. We raised more than € 235 000, 157% of our goal.",1,0
146," As mentioned above, the original intention of One Hour Professor was to create courses for my audience and sell those courses.  While I do have one specific course that I give away for free which leads to purchasing another course, this idea never seems to work for me. I found that the Internet marketing space is hypercompetitive and it's just so much easier to make a living in other areas. That said, my business model on One Hour Professor now is more focused on affiliate marketing as opposed to selling courses.  Although I do sell a few courses a month, I’ve found that affiliate marketing is a much easier way to make money for this particular website.  Most of my affiliate marketing is centered around creating reviews and tutorials for various software programs or products that I use myself and earning a commission from them. ‍",1,0
147," OneUp started in 2017 as a side-project for Vishal, which he worked on overnights and weekends while working at his day job. He is the technical co-founder, and has built everything himself using the domain expertise he picked up during an internship at a social media management company a few years ago. The original product started as a very minimal MVP, and went through many different iterations in terms of landing page copy, UI, onboarding process, flow, and functionality, all in search of product-market fit. The product was ultimately too complicated and confusing, so we decided to strip it down and aim for an extremely easy and intuitive experience so that first-time users can jump in and immediately understand how to use OneUp",1,0
148," Very slowly. We spent many months just coming up with ideas without really implementing any. Everything was very well thought through (e.g. I vividly remember weeks of discussing in the detail the pros and cons of having threaded discussions versus a flat hierarchy), but it took a long time for us to implement any of it. I think that happened for multiple reasons. The most important one was that our team wasn’t as balanced as it should have been. We had a philosophical foundation and could discuss anything from the tiniest details to our grand vision of the interconnection of texts and the human species. How we could add a social, annotation layer to anything in the world, not just books. It’s great to think big, but you still need to start by taking small steps. That took us a while to understand. Fortunately, we had a deadline for the graduation project, so in the last week or two, we quickly put a prototype together with our main ideas. ‍ When we graduated we raised a total of €130.000 in subsidies. That’s where our philosophical ability paid off. We were very good at sharing our vision and getting people excited to play a part in it. The subsidies came with their deadlines, which again helped us execute. We launched publicly in 2011 at The Next Web conference in Amsterdam. About two and half years after we started. ‍",0,0
149," After leaving Microverse, I navigated an idea maze because I didn't know what I was going to create yet. I created a bunch of different landing pages and tried to understand what resonated with entrepreneurs that were building online schools. I finally found that it was a pain to manage income share agreements. ‍ I jumped to building the product instead of trying to solve the problem in a non-scalable way and then building the product from that. I knew how to build the MVP using no-code and low-code tools, so I went straight to the building phase.",0,0
150," It took us about 9 months (roughly) to create Pagestead before we launched in the spring of 2017. However, this first version used a lot of code of a previous version, so it wasn’t like we built it from scratch. We also were not working on it full-time (we all had other jobs during those months). While building the first version, we were a team of three: myself, one back-end developer and another front-end developer. The first version of Pagestead was pretty lame to be put it bluntly. We really launched with the absolute bare minimum in terms of features. Thankfully, we have a large list of email subscribers, existing customers and other helpful people in our network who helped us determine which initial features we needed to have. It’s thanks to our early customers who believed in us and pre-ordered or purchased during the early days that we’re in business today! Below is an image of the first landing page for Pagestead (back when it was still called SB Pro): There were, and honestly still are, tons of doubts about whether we’re building a viable business. Just a few days back I was asking my wife if she thought there was some magic number of customers, revenue or profit which would finally remove the doubt and confirm we have a sustainable business. Unfortunately, we were not able to come up with this magic number :) Before launching, we had a pre-order page allowing people to pre-order at a nice discount of 20%. Back then, we said the magic number was $10,000. If we were able to achieve $10,000 in pre-orders, we’d conclude this was enough proof the idea was viable and enough people would be willing to pay for this software. When we reached that number, I still had my doubts. We ended up doing just over $30,000 in pre-orders. The doubts were probably slightly less, but definitely not completely gone. It’s not just doubts about whether we’re building a viable business. It’s doubts about new features to build, how to scale customer support, whether to hire that new employee, etc. You learn to deal with it though. I acknowledge the doubt and then cast it aside and move forward making decisions to best of my capabilities with the information I have at that moment. One of the biggest obstacles we faced while building Pagestead was FUD (fear, uncertainty, and doubt). While we were working on the first release, I constantly worried we were not moving fast enough, we wouldn’t be able to attract additional paying customers after launching, not being able to make enough money to support everyone, etc. It’s that annoying nagging voice in the back of your mind. I am sure we overcame a whole bunch of smaller obstacles the past year, but none of them seem worth reminding. I can honestly say that the process of building the initial version of Pagestead was not an enjoyable experience, in the slightest. It was an intense and stressful episode and there were plenty of moments I was seriously considering abandoning the project and moving onto something else. I guess the thing that kept me going was that on some level I knew it would all be worth it. Additionally, having customers willing to pay us money for a product that has not yet been completed was a huge driver as well. When it comes to setting the prices for Pagestead, it was really just a matter of experience, talks with customers (and knowing what kind of customer we would be selling this to) and intuition. I don’t believe we have our pricing nailed at the moment, and we’ll likely be making some changes in the near future. We’ll use the information we have at that time, try making some changes and see what kind of response we’ll be getting back from our customers. I am personally not a big fan of big public launches and we never did this for Pagestead. Instead, we launched quietly to our mailing list. That was all really. A simple email to let everyone know we have finally launched. I love the idea of stair-stepping the launch process and doing multiple small-scale launches. So, whenever we release an update, we do a small launch by email, Twitter, Facebook, etc. We have had a number of people asking if they could “hunt” us on PH, however, we’re holding off until we’re closer to product market fit and have made some other improvements.",1,0
151," It started as simple scripts to check when expired domains would be deleted and available for registration again. I would just hand-register these domains when they became available. I got some really great domains this way. Eventually, my manual registrations were not fast enough, as someone else was doing it automatically with a script and was able to register domains before I could get them. I reached out to the guy - a German programmer – and we chatted a lot about it. It was interesting because we were the only two people in the world who had decided to do this, so we had something very much in common. Yet, we also were competitors. Eventually, I got to the point where I was able to get every expiring .io domain that I wanted, so I decided to sell it as a service on park.io. Since I already had the infrastructure in place to grab the domains quickly as they became available, it was simply a matter of setting up a user interface and tying it together with the backend. It was a week or two of grunt work. I remember the quote ""Rome wasn't built in a day"" going through my head a lot during that time. Then I launched park.io in June 2014. The initial product was pretty bare bones, but it provided the user a way to backorder domains and manage the domains that they owned. My goal was to just get the most basic, usable version live, and then to automate the things that people used the most. I think probably the biggest doubt I had at the beginning was in regards to the ethics of the service. Was I just a domain squatter? Was I supporting domain squatters? Eventually, after seeing how happy people were to buy the domains, I realized it must be doing something good. One time I received a thank you card and gift in the mail from a happy customer who was able to get a domain for their business. I think a lot of this lead me to realize the importance of having happy users. I think it is really important and makes the business and your life so much better. As for pricing, I wasn't sure what to charge. I remember getting advice from a Wharton professor, who had studied pricing for his entire career, and his advice was something like ""if you aren't pricing it so high that people turn away because it is so expensive, then you aren't pricing it high enough."" So, I thought $99 was a good number because it was pretty high, but still in the 2-digit range. Honestly, I didn't think about it that much, but luckily it worked out pretty well.",1,0
152," I figured that the most accessible format for Pathways would be in an app format. So I began searching for suitable teams, whilst creating the content for our pain therapy program. The first version (MVP) of the app took 3 months to develop (longer than I’d like) but was good enough for us to gauge the response from potential customers. We ran some ads on Facebook, and to my delight, a handful of people were happy to pay for the premium content. And more importantly, we started getting reviews like this: “I've had years of back and neck pain that stopped me working. 6 weeks into this program and I'm having my first pain free moments. Thank you!” That’s when I knew this was definitely worth pursuing further. By this stage, I realized that in order to really build out a good app, we needed to switch the software our app ran on from Unity 3D to React Native. I hired a new team that I was confident would help us build out a market-ready version on React Native, but after 8 months, they failed to deliver. We had wasted thousands of pounds and precious time. If it wasn’t for my deep motivation on this project, I would have moved on at this stage. I took away what I could - some very valuable hiring lessons - and moved on. Thankfully, I found another team that I was a lot more confident in and they started to work to recover Pathways. It wasn’t easy, fast, or cheap, but we were moving in the right direction. After another 3 months of effort, we were able to release a stable version on React Native - although still a fairly basic app. I took an objective look at what it would really take to offer the best digital pain product, and we were still some way off. So my team and I started to develop ideas on how we can take this from a mediocre app to an amazing one. After another 9 months of development and content creation, just this week we released our best version yet. I’m finally confident in our product, and it’s the ability to really make a life-changing difference to pain sufferers. Here are some of the super cool things available in our latest version: Our audio pain relief program is now a video program.We have a brand new exercise, yoga, and physio area.Our new masterclasses go deep into specific healing topics.We offer an innovative way for users to track pain, and factors that affect wellbeing.We’ve added 100s of interesting and unique challenges to help people get past the pain. ‍",1,0
153," When we got started, I was in between jobs after moving from Kentucky back to North Carolina. I was applying for jobs but still had a ton of free time. During that period, I built our current website and designed the logo. I also designed all of our condition reports that we fill out during each inspection for chimney and dryer vent services. I set up all of our email services, set up the phone system.  Meanwhile, Matt and Billy figured out how and where to buy the van and equipment. We made a list of everything we’d need for every job that we’d eventually have and figured out what we needed to buy now versus what we could hold off until later. We utilized our connections to see what kind of discounts we could get, especially considering all three of us were out of jobs at this point and we really needed to be lean.   For pricing, we had a pretty good idea what our competitors priced, since both Matt and Billy worked for the competitor for a while. We didn’t want it to be exactly the same as their former employer, but we did want competitive pricing so we called all of the other chimney companies and simply asked their price for their most basic services, like a chimney sweep or inspection. With that information, we had an idea for how we needed to price our services. The largest obstacles that we ran into during this whole process was that we didn’t have enough money and I was in Raleigh while the company was starting in Roanoke. We borrowed a lot of money from family and used our credit cards to buy most of the equipment and the van. We would also buy only what we needed when we needed it. This means that we didn’t buy all of the items on our list of must-haves at once we waited until a job required a specific tool before we bought it. Being in Raleigh was very difficult, but we stayed in touch and spoke every single day while we launched. We created tasks and used Monday to keep up with tasks and hold each other accountable.  ‍ While the process of getting it started was definitely stressful - unemployed and starting a business - I have to admit that I loved every minute of it. I mentioned that I’m sort of a serial entrepreneur and I really love planning and executing a business idea from scratch and seeing it through to completion. I’m a very type A and thrive under stress (most of the time, at least). ",1,0
154," It took 8 months to publish v1.0. We were 2 people. Onur Aslan and I. Onur was developing the frontend and I was developing the backend. I was managing the relations with 3rd parties as well.  We have used VueJS in the frontend and Flask-Python in the backend. We have used Firebase and Google Analytics as well.  Maybe the biggest challenge was defining feature sets. It was difficult because we didn’t have clear user stories. So we implemented some features based on our guesses.  When we launched we didn’t have a proper launch strategy. We just announced it on Linkedin and Twitter. We got really good engagement on these platforms. Then someone listed us on Product Hunt and the product was shared in some email lists. We got 600 signups in a few days. It was very exciting. We couldn’t sleep during the night.  In terms of pricing strategy, we wanted to make it free for up to 10 users. After that, we would charge 3 to 5 dollars per month per user. We just wanted people to use and give feedback so we removed the price tag.",0,0
155," After having an amazing experience using the hand-written prompts that my Co-Founder Nathan Anderson’s mom created for a buddie’s college graduation party, we decided this was something that needed to be shared with others around the world. The next day we were brainstorming over multiple glasses of wine at a local bar & restaurant. We wanted to write down as many prompts & questions as possible, without losing out on quality content. Once this was done, we ordered an original prototype. I created them on a website where you can design custom cards. I think the set was around $50 and was 108, circular cards, with our questions and prompts on them. We used these for a few weeks, and then decided to rework some of the content. After this, we reached out to our graphic designer who had created our logo, Kevin, who I found through Reddit. I had him whip up a much higher quality set that we then sent over to Print Play Games for a few REAL prototypes, with a box & all in order to send out to some of our beneficiaries (we will be donating 10% of our PEAR Card profits to Mental Health America, American Foundation for Suicide Prevention and Brain & Behavior Research Foundation), some of our social media influencers & other who’d helped us up to this point. Print Play Games is the prototype division of AdMagic, an indie game printer who’ve done games like Cards Against Humanity and Exploding Kittens. I found them online and they have been nothing short of amazing. Once we finalized everything, we went to Kickstarter and raised a little over $19,000 and got our first shipment of PEAR Cards created!  ",1,0
156," I’ve been developing Ruby on Rails web applications since shortly after DHH released the framework, some 10+ years ago now. So, I knew that I would use RoR. To launch, I just wanted the MVP set of features for a Reddit clone: posts, communities of interest, voting, commenting, etc. I was the primary developer throughout the entirety of Phez’s brief lifespan (a few other contributors submitted patches). I use Sublime Text for an editor, and my typical deployment stack is: Amazon AWS, Ubuntu Linux, Ruby on Rails (latest at the time), PostgreSQL, nginx, and unicorn. The initial product looked terrible! Just like a boilerplate Bootstrap site, that was very obviously a Reddit clone, functionality-wise. One of the biggest obstacles I faced was responsive HTML/CSS development (getting the same HTML to look decent on desktops and mobile devices). As a backend developer, who also deploys/manages applications (e.g. some DevOps), you have to know pretty much already. Then throw in HTML, CSS, JavaScript, jQuery, etc. on top of that -- and you are looking at pretty many technologies, and it’s hard to master them all. So, I pride myself on being a jack-of-all-trades, but yes, perhaps, master of only a few. Publicity is an area that I’ve never had a knack for, honestly. I basically just find a few subreddits that might appreciate it and launch my projects on there. Maybe a handful of other social networks, but I never do much promotion otherwise, typically. That was the case with Phez. ‍",0,0
157," Our photography business was not scalable, and we struck a revenue ceiling that was difficult to overcome. The only way to get around this was to create more services. This is, of course, where the photobooth came into play. Dieter Rams, the great product designer, was a significant inspiration. We started with the booth's required electronics (computer, touch screen, camera, flash, printer, etc.). We designed a product that was the most beautiful embodiment of those components: nothing more and nothing else. We ran a fast Google search for a nearby fabricator to make our first alpha device. We completed a couple of quick prototypes in the three weeks coming up to our first trade exhibition. We began as simply as possible and progressed from there. These rapid iterations helped us go to market faster and allowed us to do numerous rounds of UX testing, resulting in a better product. We started using Squarespace to develop the website, which is by far the easiest, cheapest, and most attractive web design option I've ever tried. After two years of using it, we moved to Shopify due to its extensions and powerful backend.",1,0
158," I just took my laptop and started to code. I was not making or counting on any money I did it for fun. I did not analyze any market, or “validate” any business ideas. On the other hand, I was absolutely sure that if you make a replacement for a popular commercial product, people will come sticking millions into your pocket, whether you want it or not. And I was sure I could create pretty much any software I wanted. But I was not sure if I wanted to invest a part of my life into making such a product.  It all happened naturally, by finishing one feature after another, helping one user after another, without knowing what would come next or what was my goal.",1,0
159," Uku built and designed the product on his own in the period of a couple of months in early 2019. Everything was done in the open as he shared his thought process on the blog and he interacted and engaged with the different communities such as Indie Hackers. We open-sourced the product, opened the development process, asked for public feedback and feature requests, and made the product roadmap open to the public too. There was no big launch and the product grew organically from the community engagement.  The pricing structure was kept very simple and as straightforward as possible. There are no premium features, accounts are billed purely for the amount of traffic they get and we keep the prices as affordable as possible in order to make it possible for even the small sites to be able to get a privacy friendly analytics product. Google has taught people that the price of web analytics (and any other product) should be free and that you should be the product instead of paying with your privacy and your data and the data of your customers and we’re trying to change that.",1,0
160," I started working on Playdate as a side project in early 2016. I had assessed the options for mobile development and decided on doing it natively at first, a decision I would later regret. Swift was relatively easier to learn than Java, and I decided to supplement development with contractors. I hired a few different ones through Upwork and had modest success. As a developer myself, it was straight-forward to vet the offshore teams before starting contracts with them. As I worked on this, I realized that I could not juggle my full-time job as a developer with this side project in the timeframe I wanted. So I quit my job in August 2017 to pursue Playdate fulltime and found a cofounder in early 2018. Around April 2017, we soft-launched Playdate to the App and Play Stores. After we got initial traction, we garnered as much feedback as we could from hundreds of users to help design the next version. I ultimately decided to rewrite the codebase using React Native for the following reasons: React Native was in a much more stable place than when I had last looked into it on project inception it had garnered much more of a community and available online resources. Facebook had also changed the license from their own restrictive one to the MIT License, making its use feasible. Moreover, React Native was certainly appealing because JavaScript is my most familiar language and our designer-turned-engineer was similarly comfortable with JS. Finally, there were some “nice-to-have” features like hot reloading sims, but perhaps the most important impacts were that the overhaul provided a way to rebuild our client-side foundation to erase significant technical debt and helped build team morale with a tangible win.  Playdate was free and ad-less, and would always be that way. We planned to make money by providing coupons from venues when users had an in-person playdate, but this was to be post-MVP and after building up a user base. During the lifetime of Playdate, we focused exclusively on growing as quickly as possible. Here are some pics that show the evolution of the app: ‍  It was around this time I used a friend-of-a-friend designer to create the logo (best $20 spent ever). Lesson learned, a good designer can create logos and designs faster and better than I can. Awesome specialists are worth their weight in gold. ",0,0
161," We managed to build the first MVP in 2 months, in 2019. In developing the breakthrough virtualization technology, we prioritized scalability. Our goal from Day 1 was to bring an unprecedented number of simultaneous live applications with large user bases. We launched on PH with our co-browsing service in the summer of 2020. We saw enormous success, validating our approach to revolutionizing remote collaboration. We worked on piloting our technology with those who need it most in the Edtech and remote collaboration communities. ",1,0
162," Wow, there is so much we had to do to get it to where we are today. First, I really prioritized on the design. I’m a worry wart. Because of that, I like to plan. I knew that nothing else mattered if I didn’t get the product design right. I am sure I drove my agent and the factory crazy. I wasn’t willing to even think about launching the product until I knew that the product design was right and that a prototype could be made in the quality I expected it to be and at the price that I thought consumers were willing to pay for. ‍ How long did the process take? This process took me nearly 10 months, I went to China 2x to threw out 2 earlier version. I knew we were on to something with the final version when I got friends and family to try it on. At first, they were like “what is this thing?”. But after I explained what was the problem I was trying to solve, they just nod in agreement. ‍ Who was involved? My cousin Macy, my husband, my kids and our close friends. I think they are all tired of me now. ‍ What resources/tools did you use? I have a great factory agent that I work with and a big network of friends in the business. WarRoom group run by Ryan Deiss, Roland Frasier and Perry Belcher has been a tremendous strategy and networking resource. ‍ How did the initial product look? The initial prototype was horrible. Of course, I didn’t think that at that time, but after some feedback from friends, it was clear that I had to throw 5 months of work and start all over again.  ‍ What sorts of doubts did you have when starting? Will people buy it? Will they use it?  Will they tell their friends about it? The biggest doubt that I had was that some people would say that they didn’t want to be strapped into their chair. I get that, but I think once they see how easy it is to get in and out of the PK, and that lumbar support is so comfortable and really works in keeping them upright, they won’t really think of themselves as being strapped in. Also, some posture correctors were actually pretty crazy. So, I have a pretty good chance there will be a segment of people in the marketplace that will understand the science behind how Posture Keeper works and give it a try.  ‍ Did you enjoy the process of getting started / building it? I did enjoy the process. It’s like being pregnant. I have 3 kids so moms out there can appreciate the analogy. I’m on my eight month and I just want the baby to be born already. ‍ How did you approach pricing your product? I approach everything from the consumer perspective. I’ve compared PK to products out there that were trying to solve the same problem. While there was actually no product out there that was identical to mine, there were, what we call in retail, “law of substitution”. So, I look at all similar products and found out what would people switch to if they thought my product was priced too high. ‍ Did you launch/publicize your product in any way? Did it go as expected? We’re launching on Kickstarter. I hope it goes really well.",1,1
163," As every other software project, we started by analyzing what did our potential customers need. In our case, that was easy because we were building Price2Spy according to the needs of Takolako. The process did not take too long (around 3 months) as we were already very experienced building web apps in Java for our outsourcing clients. Apart from myself, acting as PM / business owner, the project was carried out by 4 engineers, none of them working full time on the project. At this point, I came with different thoughts about Price2Spy that would later define the different paths I took: “I’m building a tool for online retailers. Online retailers are very busy people, they will appreciate if a tool can help them save some time. However, they are very careful with their expenditures, so my pricing shouldn’t go too high”“The fact that we’re based in Serbia doesn’t help at all. Serbia (at that time) is more known for troubles, than for quality software engineering.”“As I don’t have a big marketing budget, I have to build a strong website with a lot of content in order to win organic visits.”“I don’t have to rush, as I have other projects running, which are profitable enough.”“Things don’t  need to be all about happy faces like ‘use our tool and all your problems will be gone’. My clients are experienced online retailers who know that there are no simple solutions to important problems.” However, no matter how clear it seems I had all things, there were 2 issues which gave me a great deal of trouble in the early days of the project: ‍ 1) How should I name the tool? Thanks to our online stores, I already had quite some experience with SEO so I knew that the name should be self-explanatory. Therefore, it should definitely contain the word ‘price’ as it was all about pricing. However, as you may guess, all good and simple names were already taken. In our internal conversations, we kept saying that this tool was good because it would help retailers spy on competitors. Hence the name Price2Spy, which I find pretty strong. However, the word ‘spy’ is rather controversial, and has many negative connotations, that you’re simply unaware of if you’re not a native English speaker. Put it together, I think the name has helped us win the market in a very quick way, but harmed our efforts to win top enterprise clients  2) How should I price our services? How do you price a tool which helps others price their products? In the very early days we came up with a very easy way to capture prices from many different websites, so I decided not to limit the number of competitor websites but just focus on the number of products to be monitored. Since we had an eCommerce business of our own, we could measure the impact of using such a tool. The conclusion was that the pricing should start rather low ($19.95 USD per month, for up to 100 URLs to be monitored) since we wanted our clients to have a cheap entry-level fee, which could be upgraded once they felt the benefits of the service were great. Nowadays, (after 9 years in business) we believe we should have started with higher prices. On the side, it was clear that we had to stimulate our clients to grow, so the more URLs they monitored, the lower the ‘price per URL’ was. ‍ Did I enjoy the process? Very much, but to be honest, I think I was not aware I was enjoying it. I love creating new things and solving problems no one has properly solved before. On the other hand, Price2Spy was a baby project, among several other projects I was running on a daily basis, all of which required quite some attention. Nowadays, looking back, I see that I was very lucky to possess a number of skills that were needed to make it a success. Among these were that: We were already very experienced in software development.We knew we didn’t have to spend much money/effort upfront. Instead, we had to launch something simple and if it worked, it would start bringing profits which would justify investing more time and money into development.We were aware of the importance of SEO.We were under no financial pressure, meaning that we weren’t looking for instant success.We were building a tool for eCommerce professionals and I consider myself to be one that kind. Price2Spy was launched in April 2011. We got our first trial clients in May and the first payment (which made me so happy) on Aug-13 2011. ",1,0
164," It's kind of an interesting story as I took a really different path than most startups do. By 2018, I got a little bit tired of not being able to build my own software ideas on the back end. As a designer, I felt like I should be able to design a product from 0 to a functioning version. I also began to think the work of a designer was all about the user experience and the user interfaces and how those pieces come together to solve a real problem. That kind of thing in the past I'd always outsourced and hired developers to do would end in 2018, as I spent the whole year doing a deep dive into learning how to build applications using Ruby on Rails. I had my other business, AudienceOps, running alone and being profitable, so I was able to dedicate all of my time (30-40 hours/week) to learn how to build complete applications. I took some courses, worked with some mentors, and did a lot of both simple and complex practice projects simple. By the end of the year, I was actually able to build a very simple, but real live, software product called Sunrise KPI. It's a simple tool for gathering key metrics from different tools like Google Analytics or Stripe and pulling those into daily email reports. It was a problem that I wanted to solve for myself - I wanted to get a hold of my numbers every day while I was drinking my coffee. Then, as I got into the beginnings of 2019, I started to really break ground on ProcessKit. I spent from January to June 2019 building the product( Ruby on Rails, Vanilla JS with Stimulus JS, HTML, SCSS and Heroku) and since then until today, enhancing it. In June we started bringing on the very first paying customers. I'm still the lead designer and developer on ProcessKit today but I do have another developer who works with me. We’re able to push the roadmap forward pretty fast these days.",1,0
165," I tried to keep the MVP (Minimum Viable Product) as simple as possible. It didn’t have a lot of features, because the main goal was to launch it as fast as possible. It took me about two months to go from an idea to production.  I spent the first two weeks just researching and brainstorming. The next six weeks I spent them coding Profitabilly in my spare time. Fortunately, I saved a lot of money on development costs because I built it myself. I used Python with a Flask Framework for backend and Bootstrap for frontend. The hardest part when building Profitabilly was the frontend part. My frontend skills are not that good. I spent a lot of time tweaking the CSS and JavaScript which sometimes made me get a real headache. My pricing was simple: I was only charging $29/month for unlimited projects and users. The main reason why I only had one pricing model was that I wanted to keep it simple and I didn’t want to spend more time building a complicated billing system.",0,0
166," I built the first version of Pull Reminders in a couple of weeks using Ruby on Rails. I don’t think there’s anything better than Rails for shipping and iterating on a new product. The goal of Rails is to be the “framework for small teams to do big things”, so it’s a great fit when you’re a one-person team. When I took Pull Reminders live at the end of January I had no expectations of making money. I actually planned on letting people use Pull Reminders for free as a marketing strategy for something else I wanted to build. I didn’t have a pricing page or payment form. After launching I started getting a small trickle of signups through the Slack App Directory. I emailed every user that signed up to find out who they were and what they were hoping to get out of Pull Reminders. A couple of those early users were from larger companies and I could tell they were taking my product seriously because they asked for lots of changes. I kept making changes based on their feedback until they seemed satisfied. Finally, I asked if they would be willing to pay. I thought I had about a 30% chance but it worked. Landing those first couple paying customers really blew my mind. It dawned on me that Pull Reminders could be an actual business. To give you a better sense of the timeline, my first payment didn’t come through until March 1. After that, I started converting more and more signups into paying customers and eventually added a pricing page and payment form so I didn’t have to personally ask everyone to pay. I charge companies about $2 per month per developer through preset pricing plans of $10/mo, $49/mo, and $99/mo. Pricing is still a work in progress for me, but I like to justify the $2 per month per developer because it's less than a cup of coffee for each developer and I think Pull Reminders gives you more productivity than coffee. ‍",1,0
167," I started by getting one roll (50 yards) of white nylon fleece from our fabric distributor, Larry. And, when I say Larry, he is the only guy on the planet who has access to the fleece mill. Up until this point, to obtain the fabric, you had to know about Larry (he only has a phone number, no website), or shop at another online store that only carried it in white, or a few select colors. (That shop also got their fleece from Larry.) Larry used to run a mill and he fell into this world of puppets as well. Jim Henson approached him about a textile he was making for the interior of shoes. So the two of them created this unique “skin” for puppets. Larry has since sold the mill and now is just a fabric distributor. He is like this mythical elusive fleece unicorn. The dyes we started off using were essentially, craft dyes. They were really unstable and hard to reproduce colors time and time again. So, there was a lot of frustration there. After about two years of fighting these dyes, we switched over to acid dyes which allow us a lot more control. ‍",1,1
168," I understood the basic idea of making a chair that would be just unstable enough to encourage, indeed require, continuous muscular effort while sitting. But the actual invention of a reliable, and inexpensive, rocking mechanism required dozens of design failures, some of them hilarious in retrospect. When I finally hit on the idea of using a new geometric solid (an “eccentric bicylinder) as the rocking “mechanism” I instantly knew that this was the solution to the problem because it was a physically beautiful object. This rocker’s shape was the key to our project, but it wasn’t clear how to make them. At first, we were cutting them out of solid wood using a bandsaw with 8” of blade exposed, but this seemed too dangerous we didn’t want anyone to lose a finger as a part of our project. Pretty quickly we found that we would have to injection-mold this component, and although the mold was expensive ($20K), the individual rockers were inexpensive to make once we had the mold. And, the molded rockers were perfect to 1/10,000 of an inch and didn’t require sanding or finishing. We didn’t have a launch for our chairs. We started giving them to friends to evaluate and then selling them to people at local trade shows, and finally, we set up a website to sell them online. The whole process was unplanned. Rather, it emerged organically as we took opportunities that presented themselves. ‍ Our pricing strategy has been simply to sell our chairs as inexpensively as possible. We’re not trying to make money at this point we’re trying to introduce active sitting to as many people as possible. As we continue to scale up I anticipate that our production costs will come down and at that point, we may start to show a profit. With luck, as time goes on we’ll be able to reduce the cost of our chairs and still show a profit.",1,0
169," The site was built on Titan Classifieds script. For the design, I hired a freelancer on UpWork. The old design of Freelancer was relevant to what I was thinking for QuickHaggle, so I told the designer to use it as an idea and make it unique. The TitanClassified script was modified by the coder to add several features and functionalities to make the idea work. He included, for example, a rating system, so that both parties could give ratings when they were done with the exchange. With this, I also forced both parties to play by the rules and not cheat in the process.",0,0
170," Market research and creating user stories helped us get an idea of what businesses were looking for. We did not find any issues or difficulty in designing and creating this software as we had been in the software industry since 2011. At first, we launched the beta version by installing the software in a few locations in Paragon Mall Singapore. We did testing with a few customers. We had a ticket system hthat allowed customers send their requests and our expert technical professionals then analyzed them and implemented them accordingly if they were feasible and valuable for everyone.  ",1,0
171," Over the years, I had already compiled a list of websites where to build backlinks from but it was hard to remember how to build the links on each site since each site is different.  Since I launch new websites every now and then, I have to build new backlinks on a regular basis. Each time I struggle to remember how to build the link on a specific website.  So when the idea of the backlink database was born, I started documenting the process. First of all, I did it for myself in order to build backlinks faster for my future sites.  Even on the day of the public launch of the database, I had no idea whether people would seem to like the idea and would they pay for it.  I priced the service $34.99 a month, $59.99 for three months or $99.99 a year, all of which is subscription-based recurring revenue model. On the first day of launch, I already received a lot of questions about the database and I even had my first orders.  Here are the results after exactly one month after launching the service:  ‍ I’ve earned $2,364 in the first month.  And here are the results after 37 days since launch (at the moment of this interview): ‍ Now, the largest question I have is how many % of the subscribers will use the service for more than a month (recurring revenue). If I’ll be able to keep the customers to use my service for more than a month, then this service has a great future ahead.  That’s why I’m adding new guides on a regular basis to keep the interest high from new and current customers.",1,0
172," Going live took over a year. I would obsess about details and get hung up for weeks. The biggest obstacle when building software is getting hung up on irrelevant details. You need to move fast and come up with a system to break out of circular thinking. Also, set aside time for planning, but don’t try to plan everything at once. Plan one thing, then execute, then repeat. If you try to plan everything, you’ll run into problems. You won’t know everything at the start of your project, so stop trying to plan the whole thing out. The only time people should be trying to plan everything is when you’re hiring an external team, and they need a spec. The lack of external accountability led to poor time management. And quite honestly, I didn’t want to work with anyone. I always thought it would be bad to partner up because a) you gave up 50% of control and b) you’d need to make so much more money for both of you to earn a good income. This viewpoint was one of my stupidest, most dangerous business opinions, and that held me back for a long time. ‍",0,0
173," We kicked off our entrepreneurial journey from a small travel outlet in Dubai’s Flora Grand Hotel. In those days, people traveling to Dubai used to book hotels in advance and often ignored the importance of tour reservations. And this is where we saw the opportunity our target was to organize quality tours at low cost to the hotel guests. This proved to be highly innovative (at that time) and we began to get an amazing response which enticed us to open seven more outlets in two years. And by 2009, we had established ourselves as a full-service Destination Management Company with our main office in Old Labour Building, Abu Hail Dubai. Ten years later, it’s gratifying to see everything in place. We’re now active in both B2C and B2B verticals, besides our successful presence in close to 10 countries.",1,0
174," Readership was built purely on the free, public Twitter API endpoints available to virtually any developer. It was one of the more fun products I’ve ever built. It carried some unique challenges as I scaled. For example, it only took me a few minutes to store 20,000 or 25,000 links some company’s audience had interacted with. But those were shortened links so I couldn’t see the domain. Building a really fast link expander and then cranking all those links through took me a surprisingly long time to dial. The reporting interface itself was built with a UI kit I made for myself a few years back, so it actually came together pretty quickly. I’m not sure why, but it’s still one of my favorite visual reports. The pricing model was fairly straightforward. Each report cost $99, but the results contained no branding so they could be resold or white labeled. Again, that speaks to our theory that PR pros would be reselling this to their clients. Based on conversations and experience with PR teams, we expected they could be resold for anywhere from $250 - $500 on the low end.",0,0
175," I started working on the product while I was taking a UX design class part-time and I used it as my final project for the class and conducted my initial user interviews. From there it was a slow iterative process of trying different things and finding people to talk to. For a while, I was working on an iPhone app with Swift but the first functional MVP was a coda doc, then I upgraded to a WordPress site with some plugins and then made a Bubble app. ‍",0,1
176," The form builder space was already validated, but I knew it was highly competitive. So what I needed to figure out was if: People wanted the kind of form builder we wanted to makeWe were able to find the distribution we needed in such a crowded space (still to be determined) The first thing we did was talk to many people who were already using a competing product. I read the Mom Test by Rob Fitzpatrick a few times and tried to follow his advice as much as possible. After my conversations, I still felt like there was something for us to explore in this space. The next thing we did was build a landing page for our yet-to-be-built form builder, now called Reform. We put in an entire month’s work because we knew the page had to be good to stand out truly. We also designed some mockups in Figma of how we wanted the forms to look. We used the mockups on the landing page and also made a hard-coded version of one of them and used that as our early access signup. This worked great because it also served as a simple demo of what we planned to build. The landing page was designed in Figma, so it was really easy to invite people to give us feedback and comment directly on the page. We probably asked 20-30 people for feedback, and in the end, the copy and design were really solid. When I felt confident enough to share the landing page with everyone, I tweeted it out and asked everyone I knew to help amplify it. It worked, and the tweet got more than 100,000 impressions, and we got 500 signups on the first day. When we finally launched, we had 1,300. Because the tweet did so well, we decided to invest a couple of months to build the product. In a few weeks, we were able to replace our early access signup with an actual Reform form, and after about a month, we brought on the first early access customer. We kept onboarding people for a couple of months until we had about 40 paying customers. We then officially launched on Twitter and opened up access to everyone. ",1,0
177," After scrutinizing industry reports on the market size and the tools used by freelancers and other professionals for payments. We launched a raw product in a closed group. With the feedback received, we started improvising on the product.  While there were a host of invoicing platforms, most of them had a limited free period. That was not all, payment collection was a major challenge since it required a lot of follow-ups and reminders. This was the major trigger to create a system around it and hence Refrens.com was born. Our initial product wasn’t well-received by the audience. It called for an excessive change in user habits. After incorporating the responses received by some freelancers in the product's second iteration, our offering was quick in getting accepted by the freelancing community. People found the tool simple and slick. Freelancers or small agencies can sign up on our platform by providing the necessary details. They can create unlimited free invoices, quotations, and proforma invoices with a very easy-to-use design. Most of the details are auto-filled and the user just has to modify them at their convenience. There are no watermarks and users can use their branding. They can embed our payment gateway in the invoice itself which makes making payments (by the client) super easy. As we progressed, we came across other challenges freelancers and small agencies were facing like no easy access to loans or credits which made us create unique features like Early Pay Discounts to shorten cash cycles. The company's core segment revolves around B2B freelancers. The vision is to create an ecosystem for freelancers which helps them to solve their day-to-day issues, generate more work and build a network around it. ‍ The Refrens team strongly believes in freelancing as the future of work. As a result, this domain needs significant enhancements and advancements to be successful. ‍",1,0
178," I do not have any technical knowledge and nor did my partner at the time, so we decided to join an accelerator.  We got into one called Digital Catalyst Tech Accelerator based in Bucharest, Romania, so we moved for 4 months to that city. The accelerator had an in-house technical team that essentially built our product this was one of the reasons why we chose them. The whole process of building the product took 5.5 months and I’d describe as quite frustrating. It was the first time I had ever been to Europe and first time really going outside of the country, which made it even harder. Working with people from Eastern Europe was very much of a different experience from a cultural standpoint. One of the things I learned the most from that experience is how important is project management we didn't have any knowledge at all on it, so I had to learn some basic stuff. The cultural communication and the lack of technical knowledge made it challenging but I learned quite a lot. It was also my first time managing so many people and such a long project. At the moment of launching, we had about 250 people who were interested in trying the app, which we mainly got through guerilla marketing and certain networks. We didn't really have a good strategy at that time, which is one of the reasons why the startup would shut down later on.",0,0
179," I started with the model of creating a quick & basic prototype to test the market. As with most entrepreneurs, there’s always the element of doubt if the business will take off. I first decided the business would be a subscription model, based on trends I was seeing across different industries. I then analyzed a few sites that I liked for design inspiration. Finally, I hired an offshore development team that I’ve worked with previously. The prototype took 2 months to build after many long days & iterations, my many changes to how I thought it should work didn’t help the timeline. In parallel, I also drew up a marketing plan to sell the idea to letting agents. This was heavily based on cold calls and emails, asking (begging) agents to take a look at the platform. As I was funding the business myself, I was conscious of getting the business demand tested before investing significantly. So everything up until this point was done at a low cost. I was slowly seeing an increasing demand on the platform which was building my confidence in the idea. That was up until I got featured on a major property platform, which blew up my site traffic. I was inundated with agents signing up to the platform and a high volume of requests. It was difficult to keep up with the growth and interest, but at the same time exciting. The only way I could approach this was head-on. A lot of sacrifices were made and many all-nighters were spent in this period. On the tech side, the development is done by a team in India. I chose them as they’ve done excellent jobs for me and some of my acquaintances in the past. I try to restrict my involvement on the coding site. I have a background in Computer Science, but as the old saying goes ‘too many cooks spoil the broth’ I restrict myself to logging onto the system to make wording, reviewing user activity, and uploading blog content. I’m far more hands-on with wider internet tools. I have a dedicated screen to manage my AdWord campaigns which I’m constantly tinkering with. In addition, I’m constantly logging onto portals such as What’s my SERP & Ubersuggest, to stay on top of SEO improvements.  ‍",1,0
180," When we started out, I had no idea where the journey would lead, but I was as excited as I am today to go down that path. I remember the routine that we had back in the early days - always on call, staying up late at night to fix issues, scraping together whatever we could to improve in the next update. What started off with a team of 5 people (myself included) quickly began to scale and grow, and that motivated me to keep pressing on. I’m really happy that some of our first hires are still with us today. The initial prototyping phase was about 4-5 months, as I remember. Every day, we'd be reviewing over what we'd done, perform audits, and have discussions on what worked and what needed fixing. Once we were confident enough in what we had, we went into a beta launch with some of the prospects that we were talking to. It was an immense joy to learn that in the first month, we had 6 people sign on for our software. That had to have been the happiest moment of my career! It was an incredible feeling. We built RepairDesk on the LAMP stack because of its ability to rapidly develop and deploy applications. Our developers use PHP as our server language, and the frameworks used are Laravel and Yii. For front-end, we're working on a SPA with Vue.js and Bootstrap. Initially, we used SVN for our versioning, but once we were made aware of Git and AWS cloud deployment, our team made the transition to it. As an addition, we've been using Atlassian for their management services in both Jira and BitBucket.",1,0
181," Using my newly acquired JavaScript, React, and SQL skills, I hacked together a (laughably insecure) prototype over 6 weeks. After the prototype was complete, I set up a meeting through a family member with the owner of several real estate brokerages. I showed him the prototype, and showed him the presentations it could generate. He loved it, and he gave me the go-ahead to do a pilot project with 4 real estate agents in one of his brokerages. If the 4 agents testing it liked it, we agreed that I would give all the agents in the brokerage (about 100) access for $1500 / month. REPitchbook was also publicly accessible online (individual agents could sign up), but it received minimal traffic. I didn’t spend any time on ads or SEO.",0,0
182," Because volatile in the digital industry can be volatile when you’re first starting, Reroute Lifestyle makes income in 3 ways: Affiliate MarketingProduct SalesServices   To make money blogging, you need a source of income (like affiliate marketing), content that advertises those affiliates, and a targeted audience to consume the content. Reroute Lifestyle’s primary revenue-generator is through affiliate marketing. Our income started on a small scale: before we built our website, we put together a mini-ebook with some affiliate links. We offered that ebook as a freebie to grow our mailing list at the same time. As we built the website, we circulated that mini-ebook via Pinterest. With this in mind, I plan to at least double Reroute Lifestyle’s affiliate income in 2018. Keep writing content, some with affiliate links.Continue growing our audience acquisition with Pinterest.Turn readers into lifelong followers by offering email freebies and free information with our newsletter.",1,1
183," Working on a personal side project was an amazing and liberating experience. However, with no clients that needed the work to be done by a certain date, I was tempted to add unnecessary cool features for no reason but to feed my ego. As the product´s main strength was supposed to be its simplicity of use, I had to be strict and ask myself: which of all possible features are going to add real value for the user? Luckily I had a two-month-long backpacking trip around Europe planned for later that year, as part of the plan of avoiding burnout, and I took full advantage of it. Since I stayed in multiple hostels, I was able to interview potential users daily, identify friction points and understand their needs way better. For example, at an early stage of development ResumeMaker.Online had several resume templates to choose from. People with some kind of knowledge or appreciation for design would quickly pick the one that suited them better. But it came to my surprise that, for most users, the freedom to fully customize the template was leading to decision paralysis and frustration. After I got back home, I removed all the features that did not fully support the core concept (including the ability to choose different templates), polished the UI, and I was confident the product was ready for launch. On launch day in August 2018, I posted ResumeMaker.Online on Product Hunt without any real expectations. This was my first product ever and, even if I was happy with the result, it came as a total surprise when it was selected as the number one product of the day and the number one product of the week. During the first month, more than *20,000* resumes were downloaded from more than 100 countries and it snowballed into countless websites and people sharing and tweeting about it, so I got it quite easy to attract the first users. Beginner´s luck maybe? At first, ResumeMaker.Online was never meant to be something other than a fun side project. However, the launch was far more successful than I could’ve ever anticipated, and it opened the doors for considering ways to monetize it. The validation that being featured by Product Hunt provided was a big first step, although I still needed to find out if users would be willing to pay for it. In this initial stage, I was skeptical of adding a paid version, as I felt it could get in the way of the growth. Instead, I added a donation form with fixed values. To my surprise, users were donating up to $20 per resume! This was the ultimate way of validating the product and, on top of that, a useful way to find out what could be the price most users will be willing to pay. During the first two years of ResumeMaker.Online, I kept this strategy to focus on growth, offered a 100% free download, and monetized the product sporadically via sponsored links to other sites that wanted to connect with my audience. When the pandemic arrived last year, the deals with my sponsors took a hit and I thought it was then time to offer a “PRO” download instead. The free version is still available for all users (especially during these times) but now they can also gain access to a higher resolution and watermark-free paid version. ‍",1,0
184," RingDaddy was built using Webflow, MemberStack, Zapier, Airtable, and Twilio, all no-code tools. MemberStack was used to manage memberships and segregate data. Zapier was used to transfer data back and forth, and Airtable acted as the backend. Twilio was used to manage text messages. The fact that these are all no-code tools allowed me to build RingDaddy in just three days. ",0,0
185," Our idea was mainly to create a productivity tracker that represented time in a way where users could derive actionable insights to improve their productivity—a trait that most time management tools lacked. Based on our interviews and feedback from our waitlist, we needed something to help people know how they spend their time, improve their ability to focus, and build better habits for taking breaks. With those three value propositions in mind, we got to work and kept iterating on our product with users from our waitlist. It was a relatively simple process of interviewing users, analyzing feedback, tweaking the product, and repeating. Because we knew who our target market was, we knew which feature requests to prioritize and which to discard. We didn't have that guidance when we were building Humble Dot. In terms of resources, we didn't need any outside help, so our iterations were quick. I think this is a requirement for startups—the need to execute quickly allows startups to compete with incumbents. Without speed, a startup has no competitive edge, in my opinion. ",1,0
186," We researched the market and then we created the user stories. We use Jira for the user stories and then our scrum masters created the tasks accordingly for the developers. We have not faced any obstacles as we are in the software industry since 2011 so we know how we can make the system successful. First, we launched the beta version and then installed it in some locations in Paragon Mall Singapore. They provided their inputs and then we enhanced the system more according to their requirements. The best thing is we do have a ticket system where customers can send their requests. Our technical team analyzes them and we implement them into the system if it's useful for everyone.",1,0
187," We started off by offering services in the kiosk technology and understanding what the market lacked in terms of the MDM industry. The growth of mobile devices in business is exponential and after having worked with multiple projects around the same lines, we saw a pattern. Although there were big players catering to the MDM market, we realized they were complex and pricey and had no focus on SMBs and their needs. We realized that we could scale our kiosk technology solution and that was our aha! moment.  The journey of Scalefusion (previously known as MobiLock) began from being a kiosk solution to a full-blown mobile device management platform. We published our MobiLock standalone Android App for free in the Play Store to test the market. Within the first 2 months, we hit more than 1000 downloads from 20+ countries, in the next 2 months, the number reached to 5000+ downloads and 35+ countries. We took the hint, the market was ready for us! The prime motivation was to build a world-class product, which the world will love to use, from India. Along with my team at ProMobi Technologies, we built a simple-to-use product that focussed on the features the customers needed. We began working on the admin dashboard and the integration between the dashboard and the app. After our initial dry-runs, we realized that our product worked just fine but the UI/UX was complex. Since our primary goal was to create an easy-to-use and clutter-free,  my Co-founder and CTO Arnab took a stance that the product was not really what we envisioned. Our team geared up and re-designed the entire product, launching the Beta Version of MobiLock Pro in January 2015, with a 30-day free trial.  After our three initial months from January to March, we invited our free app customers to try out our platform. By the end of March, we had 10 paying customers and in April, we got out of the Beta version. Then, our customer base started building up. We partnered with Samsung and LG for their enterprise SDK support, onboarded 4 resellers for Europe, APAC and the USA and by the end of November 2015, we had 120+ paying customers in 50+ countries, managing 50K+ devices. Our team grew from 1-2 part-timers to 8 in Jan 2015 and is now 70+ in 2020.  It was an exciting journey, especially since we focussed on offering free customer support. We focussed on positioning the product ideal for SMBs and that really worked for us. For pricing, we went with the folks who knew the best- our customers. One of our customers suggested 1 dollar per device per month, we tested it with our other clients and went ahead with it.  Since then, we have extended our offering to multiple OSs- Android, iOS, Windows 10 and macOS. We also started building a large feature-set to match the competition, and this created a little focus-shift- from customer-oriented to feature-oriented. But we quickly realized that this might be the wrong move, and reversed our product building strategy soon after.  One of the major hiccups, that we didn’t quite expect was when we rebranded in March 2019. We were aware that the rebranding activity would cause a temporary blip, but the estimated 3 months low-period was extended until the end of the 6th month. Although, in the end, I feel it was worth it!  ‍",1,0
188," On January 23rd, 2016, we began working on Scout Studio V1, which was an improved version of our internal tool.  Over the years, the product moved from a self-serve drag and drop tool to a fully fledged postcard editor with tracking per card, image and text personalization, unique maps, and tons more. For example, we’re working with solar companies to show pictures of people’s homes from space, including analysis on their roof done via machine learning. Here’s what they look like. While we built software for end users, I’m the main customer as the business has become more of an agency, which runs 100% of the campaigns for our clients. We’re opening up the tool now too, for folks who already know the channel and just need a way to simple send the cards. In terms of the company structure, it has also changed over time. Zach left the business for his baby and works on contract how, so I’m currently the only owner. I have an army of part-time people working with me. Among them, there’s a designer taking care of postcards and website stuff, a marketing person who manages the Scout community, a VP of accounts that manage existing clients, a guy who is an expert in the print field, and some engineers doing widget and data automation. Pricing has never been a big concern. I do it based on the value we provide to the customers. I have a whole sales process where I assess that value and once the customer pays, then I have to deliver that value. ‍",1,0
189," Dan Ni founded our business in 2018 but we acquired it last August. When he became a freelance developer after leaving Wall Street, he kept stumbling upon the same roadblocks in his web scraping jobs (such as setting up proxy servers and redistributing IP addresses). To overcome them, he created an API (application programming interface) that could write web scrapers with practically no setup. We decided to invest in Scraper API because we could see how promising it is as a web scraper that offers what similar products in our competitive market do not. It also fits into our “low-touch” SaaS category of businesses, as it’s built for most customers to purchase it without sustained one-on-one interaction with someone else, and has a customer success component that provides educational resources.",1,0
190," When building the initial version of ScrapingBee we had to keep 2 important things in mind. First, the solution should be scalable and cost-efficient from day one. We are a 100% bootstrapped company and we could not afford to lose money. Secondly, we had to build ScrapingBee quickly, very quickly, our previous project PricingBot was not a success and we could not afford to spend another 9 months with 0 cash coming in. With that in mind, we used our knowledge and past experiences to make the most cost-efficient and time-efficient choice. We reused PricingBot web app code for the (light) front-end and billing management part of the app. We deployed the whole thing on Heroku, web application and database, the only thing we externalized was Redis as we needed lots of concurrent connexions and those were really really expensive on Heroku. Doing this allowed us to have a usable version in a few days.  But we had one big problem, we could not handle more than 10 concurrent connexions at that time without spending tons of money. The reason was that our API requests a URL through a real Chrome browser in order to be able to scrape web application with a lot of JavaScript. And those computations are really really CPU intensive. This led us to serverless, we basically deployed a Chrome headless on steroid on AWS lambda. We could now scale almost at will as AWS lambda authorize up to 1000 concurrent connections. The problem with AWS lambda is that it is crazy-expensive. To mitigate that aspect we paid the $750 Pro annual plan of ProductHunt's ship product to get $5000 of AWS credits. Of course, that solution would only work for some time but it left us enough time to build our custom scalable system. Regarding proxies, we mixed our own private pool of IP with several proxy providers from all around the world. The problem with proxy providers is that they are not all equal and knowing which one to trust is a challenge. That was it for our main product. For the landing page, thanks to Landen, a really nice landing page builder, it only took us 1 hour. Internally we used heavily Slack for all synchronous communication between Kevin and I and Notion as a Knowledge Base + CRM + Project management tool + Finance. Those two tools are really incredible by both their versatility and quality. ",1,0
191," Scream Pretty was a side project for me, so I took my time building the look and feel on the Shopify store, and creating the right jewellery designs and imagery. There was no rush or agenda, as it was self-funded, and we had no investors wanting returns - a luxurious start really! It took about 2 years from initial idea to Scream Pretty going live. My sister and I worked on the designs, and finding the right ‘look and feel’, then had to find a manufacturer that suited the style and could also deliver the quality (and be ethical in their employment record), we used a talented cousin to design the Logo, and another to model for us, I worked on the website in my free time - and Shopify was an amazing platform for me to play on, with no tech knowledge, but lots of creativity! I love starting new projects, and starting Scream Pretty was a real buzz. The jewellery looked fantastic from the outset - although there were a few quality issues to be ironed out. Jewellery can be expensive, so we wanted to find a way of creating an affordable luxe brand, so you can treat yourself on payday, rather than having to save all year! Pricing is key to our success for both retail and trade customers. It means our margins aren't large on trade orders, but volume sales and repeat sales from these customers makes us see that we were right to keep trade margins low, so that retail customers get a good affordable price - and keep coming back for more. We launched the website using social media and sending one email to our Lily Charmed mailing list (they are very different customer groups). Our first promotion was to reward our first 100 customers with a 10% discount on the site, for life! On anything, even sale lines. We were disheartened at how slow traffic was to the site initially, as we are always looking for more traffic! We were using Facebook adverts, Instagram (daily) and Twitter. We were so proud of the site we expected a flood of visitors - but got a trickle. The conversion rate on the site is high 33.5% in the last month (May 2018) - so when a customer is finding us, they already have the incentive to buy, having generally come to our site from @screamprettystyle Instagram 81%. So, we are still working on ways to push more traffic towards Scream Pretty. ‍",1,1
192," Using our team and the sources we already had from our previous projects, Eugene and I started with a description of all the parameters that had to be checked for any website’s SEO improvement and recommendations we might give based on that. When we were looking for right tech stack, we decide to go with good old PHP, since we have developers and previous experience. Also worth to mention that PHP developers are pretty common at freelance sites so you won’t have a shortage on a workforce.   Beta Seomator was launched in May 2014 and has Full Audit Report combined with Embedded Tool and Domain Comparison as options. For two or three months we offered the tool just a trial and started to sell it during Fall 2014. We began to engage mentors and influencers who gave us useful bits of advice and helped Seomator to come into SEO world. Our turning point was probably when we got the right product-market fit and were featured in world-famous Brian Dean’s SEO Tools List: ‍",1,0
193," The early team began hacking with hardware engineers and industrial designers on a new flip phone version. It included must-have features like cloud-synced notes and WiFi tethering that would make it easier for folks to ditch their smartphone (similar to The Light Phone and Mudita). They ran into the hurdles of building hardware from scratch. They eventually pivoted to white-labeling a current Android device and focused on designing a more conscious user experience on the software side. Mayank Saxena (part-time CTO) and I (operations and marketing) joined the team in the summer of 2016 with similar visions around disconnecting from technology. We progressed on the manufacturing and software design paths while gearing up for a crowdfunding campaign to launch our brand and pre-sell devices. We launched the Kickstarter in March 2017, raised $50k in device sales, and received countless press mentions but did not feel empowered enough to move forward with our manufacturing partner. The feedback was clear that the switching costs for a new device were high, and each user had a different idea of essential features. However, our audience indicated a strong willingness to try and pay for a software version of Siempo on their current device, which the Android operating system supports (this type of product is called a launcher, home screen, or lightweight OS). While Andreas and Jorge decided to move on to different projects, Mayank and I felt energized to explore the software path. With the support of backers, we were able to spin up operations again and bring on a product designer to help us design a more intentional smartphone interface. ",0,0
194," In the beginning, I was obsessed with the idea of creating a single sign-on button (think “Login with Facebook” but does respect your privacy) that created a different email every time you used it. I worked day and night on this idea and was finally able to create an identity provider that fully supported OAuth2/OpenID Connect, the standard for single sign-on providers. Then in June 2019, Apple released the “Sign in with Apple” in WWDC 2019 which was basically the same product. When I saw the announcement, I didn’t know what I should feel. Competing with Apple is hard, especially when Apple has the power to force every app to implement its login button. At the same time, this is market validation: a login button that protects our email address is much needed and that’s why Apple takes a direct fight against Facebook, Google, Twitter.  As time moves on, it becomes obvious that becoming an identity provider is a chicken-and-egg problem: without a lot of apps adding our button, people wouldn’t know about SimpleLogin and without a lot of users, no app would want to add our button. I decided to do a pivot: focusing on the email part and putting the single sign-on on hold.  Since the beginning, SimpleLogin has been fully open-source. It seems scary at first as anyone can just “steal” your code but it turns out to be one of the best decisions I made. Without being transparent, I wouldn’t have received valuable feedback from early-adopters, those who believe in the product and were willing to spend a lot of their time helping out! Later on, 3 more people joined the project on a part-time basis. We made iOS/Android apps, Chrome/Firefox extensions, created the landing page, etc. The server part was also greatly improved so it can be self-hosted along with advanced features like PGP, WebAuthn, etc. And because the code is open-source, some features are actually created by our users. I launched via different websites (HackerNews, BetaPage, etc) but these were never a real success. I guess the product wasn’t explained well enough or the timing was bad. Our growth is until now organic and mostly via word-of-mouth. As we offer the premium plan to students for free, it’s possible that they have helped spread the word. But I’ve never verified this hypothesis :). The pricing is kept extremely simple: the free plan should be enough for basic use and the premium plan is for advanced use. Both plans have no limit in terms of bandwidth or number of forwarded emails: everyone should be able to protect their email address for free. ‍",1,0
195," After leaving my job I set out building our product full time. And I mean FULL time I spent every waking moment building. This was good and bad. It was good because I was making progress but also bad because I was doing it in a vacuum and I didn’t engage customers until it was too late. Overall, I spent about 10 months in development on a product that I never used. I used Ruby on Rails and React to build a fully real-time interface interconnected with web socket connections. From a technical perspective, it was pretty advanced. I should have started much simpler and found my customer niche before building out so much scaffolding.",0,0
196," I first talked with a lot of colleagues that worked online to see if they had the same problem.  It seemed they had. So I started talking about the project on my mailing list (around 800 subscribers at that time).  Meanwhile, I created the website on WordPress with several plugins to accept payments and manage registers. It took a few weeks. I also decided to use Slack as the virtual environment to interact —although a few months ago we migrated to Discord. I then invited my list to a webinar where I explained how the community and the live events would work. I made an offer that lasted a week so I would reward the pioneers and the ones that were confident about the project.  Around 30 people joined. And we grew from there to +500 paying members now.",1,0
197," It took six years to get from idea to launch. We were industry outsiders having never been in education, but we were comfortable learning and building partnerships. Starting a non profit is not for the faint of heart, especially bootstrapping one. We started Next Ed Research first, which is our education research and development entity, before launching Sisu. My husband and I were the primary ones involved, then we successfully attracted a highly regarded teacher in the San Diego area to be our first hire. We used all the startup tools we could (Slack, Asana, Google Suite) and then we ventured into Salesforce for Non profit as our CRM. It was very difficult to get the employees to adopt technology used in start ups so that was tough on me because I had my tech stack that I was used to. We ran into a lot of obstacle when building the product. One example from a tech side is Salesforce for Non profit because it is a beast. Once I got the hang of it I started small think tanks with other non profits who were using Salesforce for their social good projects. Salesforce recognized our work and featured us as a social good program who was doing some great things with the tech in our non profit. That was an honor.  We were successful in getting a lot of press both nationally and local including TV stations and news outlets to cover our endeavor. I was the behind the scenes person focusing more on operations, while my husband was the one who was going to networking event after networking event to get us to visibility we needed to get the dollars coming in. Our project was exciting and new with a huge mission to save kids lives. This is the sort of thing that attracts a lot of attention. ",0,1
198," For SnapShooter, I didn’t follow the typical business validation and customer need steps of product development. Since the development happened so quickly, I thought it was best to get it out there and start collecting feedback and hear from people about what they needed in a backup service.  Once launched, we did some outreach. I was pretty transparent with sharing about the business, its growth, and more for several years. I’ve participated in sites like Indie Hackers and learned so much from sharing with the community there. We also launched SnapShooter on Product Hunt and had a great experience. As the business grew, I eventually stopped being so transparent, but the experience of sharing in those early years was beneficial for me (and the product!) At first, we offered a 7-day free trial with a credit card. As time has gone on, we’ve shifted from that model to offer a free plan. Our free plan allows developers to use it to do one backup (one server or database, for example.) That model has allowed people to try the service, see its value, and then bring SnapShooter into their company or workplace to use at an enterprise level. We’re always experimenting with different plans and trials to see what connects with potential (and existing) customers. ‍",1,0
199," The idea was developed at the end of July, and by September I was quitting my full-time job to dedicate full time to making this happen.  My sister and I began working straight away. We pulled some funds together and hired our first engineer - Anna Grigoryan - who is now my best friend and current co-founder in our new startup, Recoon.  She was the person who was going to take our ideas and make them into reality. My now-husband, then-boyfriend, was in the startup scene in Armenia and was able to connect and find the brilliant Anna. Our obstacles were technical, design, but most importantly, legal. We wanted to test this product in Armenia - consumers spent 60% of their income on beauty services and it was a small enough market to easily test. However, Armenia didn’t have a payment processing system like Stripe or Paypal, and as a result, it created difficulties in the legality of transferring funds. Specifically, on who would pay the taxes on each transaction. As there weren’t any P2P payment systems, the funds needed to go through Sofetech’s bank account, which meant the tax burden fell on us. Moreover, Armenian’s relies on cash, and not bank cards, which made our efforts a lot harder. We found a way around these issues, working with lawyers and even Government officials. Before launch, we participated in a startup competition called Neruzh, and we won first place for Innovation, with a $25k grant prize. The Prime Minister of Armenia, Nikol Pashinyan, met with all the winners and this was publicized.",0,1
200," After CoderNotes.io, I was experimenting with ways of de-risking my idea validation. I had been burned by getting an email list with ~200 subscribers, over 400 votes on Product Hunt, but still getting close to 0 sales. I was determined to make my business either succeed or fail faster this time - and I did it using pre-sales. I think pre-sales are an underrated tool. If you come in with the mindset of, “Pay me now and you’ll get in on the ground floor, I’ll build the product to be exactly what you want, at a fraction of the cost it would take for you to hire a contractor”, I think pre-sales are a powerful tool. It also tells you as quickly as possible whether you’re on the right track or not. So I set myself a goal that out of 100 qualified leads, I would convert at least 10 for a month of newsletters at $19. And after 33 qualified leads, I already had my 10, so I went ahead and launched the product. I’ve released those email conversations, for free, for people wanting to see exactly how I had those pre-sell conversations. They’re all available in this Notion template (with names hidden, of course).",1,0
201," We just kind of kicked it off and got started really. I designed some wireframes, we used 99designs to get our initial site done and my co-founder just cracked on with coding it all. We started applying for our licenses after speaking to lawyers (which actually wasn’t as helpful as expected). The initial advice was ‘you probably need this license, you might need that one,’ but nothing too concrete, so obviously we rejected their proposal of £10-15k per license application and just did it ourselves. It meant writing our Know-Your-Customer policies, ISO policies, proving funds were available etc, but my co-founder came from finance so had been through all this before and writing it for ourselves wasn’t an issue. I think we got the first version live at the end of August, having missed maybe the first game of the new season, and we agreed to go ahead with the business in February so the whole process took maybe 6-7 months to get live.  It was good fun, my co-founder was based in the States so he’d normally send me some things to look at when he finished for the day, I’d pick them up first thing and have feedback by the time he was awake, so we developed quite a good way of working like that. The best bit was obviously getting the site live though, getting our first users in and seeing people actually playing the games, and everything working as expected. You could sit there with the site open on your phone, watching the games, and you’d see everyone's scores going up and down as players scored or lost points. We built up a bit of an email database before launch, and so pushed it out to that list, along with our friends and networks. We very quickly got to the stage where the main games each week were filled within about 15 minutes of us putting them up on site, which was normally as the current games closed due to the actual fixtures kicking off. It meant we had engaged users keeping an eye on their scores, but also getting setup for the following fixtures. ",0,0
202," The idea originally came about in early 2017 when I was looking for new workout gear, but was dissatisfied with everything the high-end companies in the market had to offer. They are obviously great for working out, but I couldn’t justify paying a premium price for something I can only wear a few hours of the day. I also thought that all of the media pockets sucked, and having recently bought an iPhone Plus model phone, I had no where to put it besides on the floor! These two issues are what sparked my interest in finding a single solution of one piece of clothing that could be worn for working out, going out, and everywhere in between, all while including technologies that made the life more simple and design features like our Hip-Locked Media pocket that actually solved some real-world issues. From there, it was a matter of doing the research for a good contractor (made in California), asking the right questions to find a professional pattern maker, fabric manufacturer, and trimmings (zippers and drawcords). We went through a ton of different fabrics, parts, and prototypes until we were finally at a point that we were ready to start our Kickstarter funding process. ‍",1,0
203," We met in Amy's kitchen once again and we started brainstorming the topics the 30x500 course would include. We then turned that outline into the first version of the course, which was all written. We pre-sold that one for $300-$500, mainly to people who had participated in Amy’s conference call or who were on Amy’s newsletter. The advantage we had at the moment of starting 30x500 was that we already had an audience, even though it was very small! Amy had been writing about software design and development for years and building trust within the community of designers and developers. It took us more time than expected to create the course, but when people got access to it, most of them loved it. People told us it was because we explained a different way of thinking about businesses. The first few versions of the course stayed written, which had the advantage that it was easy to edit. We actually did four complete re-writes of the course, doing incremental improvements on each case. These versions of the course were really lengthy - it took students around 6 months to complete it. Despite people really enjoying the lessons, we soon found that few were putting into practice what we taught. We realized the information wasn't enough, and that people needed to treat business skills like a real practice instead of just ideas and information.  At that time, Amy had recently participated in a workshop taught by Kathy Sierra, where she explained her unique approach towards teaching and learning programming. Amy took tons of notes about the learning design patterns ideas from Kathy’s workshop, and  we implemented on 30x500. The main thing we did when re-structuring the course was to focus on specific practice-able skills . We also made the course much shorter, focusing on only the most essential skills for a successful launch day: how to find and reach your audience, how to understand their problems in great detail, how to come up with product ideas based on that research, and how to write great sales copy.  Instead of a long 6 month course where people would drop off, the new “Bootcamp” version was just 2 full days of intensive live online instruction, followed by an optional 4 week exercise program.   The Bootcamp took place in a chat room, through which we sent the people short video lessons and demonstrations  they had to watch. After watching each video,  we assigned a specific exercise to practice what they had just learned. Once they finished an exercise, we reviewed their work together providing live feedback and guidance on how they did, what they missed, and how they could improve. This format allowed us to put the emphasis on the practice. The Bootcamp course took place in groups of 30. We taught it 4-5 times a year.  We were making less money initially, but our students were much more successful!  However, after 2.5 years we decided to do a change, partly because this format of the course was absolutely draining for us but mainly because the live format was inaccessible for a lot of our audience who wanted to take the class. People with families and other commitments couldn’t dedicate a full weekend to participate, and people who lived in other time zones didn’t want to stay up overnight for 2 days.  That’s when we stopped selling and teaching the workshop and spent almost an entire year converting the two-day live bootcamp into a much more complete and  entirely standalone self-guided course, now with more than 40 hours of instruction, exercises, guided practice, and tools for implementation That version of 30x500 launched in 2015 and has had thousands of students   enroll since. It’s a hybrid of pre-recorded video lessons similar to our original Bootcamp, interactive exercises to help with practice and self-assessment, and an online community to support and motivate students to keep going. ‍",1,0
204," I and Artem took our savings and started the work. We had a hell of a lot of motivation like there was no second chance. Our team was building MVP and experimenting with the Slack bot API for 9 months in 2016. We changed the concept three times, and at some point, we were almost ready to give up. Later, we were lucky to find focus with the help of the Startup Sauna acceleration program. Some people didn’t like the concept of a Scrum Master bot. Half of them didn’t follow Scrum. However, many liked that a bot can ask questions and gather answers, e.g., for standup meetings. To embrace that, we decided to provide a user ability to change questions allowing a broader set of use-cases. We redesigned our webpage and changed the product’s name (not a good move). It became ReportChef (like a chef that serves reports based on various recipes). After we made our positioning wider, it became unclear to visitors what we were doing. Ouch. At that time about 50 teams were using ReportChef, and it didn’t feel like a strong demand.  We talked with many coaches in Startup Sauna and narrowed our value proposition to stand-up meetings on Slack. That's how Standuply, as a concept and brand, was born. We launched it on a demo day at Slush.",1,0
205," We relied on 3 core principles: Iterate fast: we shipped the first version in less than 1 month.Learn quickly from your users: we’ve built an online community where we interact daily with our users.Be where users already work: we’ve built it as a browser extension. Early 2020 (right before Covid hit), our team met in Sevilla, Spain for a retreat where we worked hard to ship a first MVP. The new adventure started! ‍ By the summer, we had our first 100 beta testers and 10.000+ users on the waiting list. We limited access to the product so we could reduce the signal-to-noise ratio in the very early days. There is only so much you can iterate in the beginning. It’s key to start with a small number of users.  We have implemented surveys, sent to users at key moments of their lifecycle, that prove vital to prioritize our short/medium term roadmap. We use Superhuman’s HXC methodology to qualify our persona’s product preferences, Profitwell’s methodology for monetization insights and we gather feedback in case of churn. By mid-September, we felt ready and decided to officially announce the launch of our private beta. We received so many reactions it was hard to keep track! Some were disappointed, but overall most understood our decision. Currently, we are working on our team features. We are still in closed beta, focusing on a few selected teams, but we are still following the same principles.",1,0
206," Stone began as a bit of fun. My background is very mixed, from documentary and food photography to UX and marketing strategy. Stone was a meeting of all these worlds and gave me a chance to put into practice everything I’ve learned.  Having always worked for myself I never really had someone explain to me what to do and what not to do. You start at a big agency and from day one you’re learning from people far more experienced than you, which of course is hugely beneficial. But I can safely say that there is no better way of learning then failing. As long as your analytical about it all. It’s a somewhat cliche term these days but failures are the pillars of success.  From an early stage, we decided that Kickstarter was the right platform to launch the product from. Rather than having to work on operations and logistics from day one I was instead able to focus on my strongest areas. One which is a marketing strategy.  Chefs are natural influencers, in that if they like something they will tend to talk about it, and their endorsements will matter. We had created something that was considered a genuinely useful tool and we, unlike a Moleskin, were from the industry so the chefs we were reaching out to were very happy to talk about what we were doing. This was a wave we had to ride.  For two or three months we gifted hundreds of influential chefs. We asked for nothing in return but just let the marketing run itself, bubbling away in the background as we built up our design assets. With very little information out there and chefs popping up on social all the time with our new product, singing its praises, this mystery grew around what we were doing. The only thing people could find was a form to put their email address. By the time we launched our Kickstarter, we had 3,000 emails. This meant that within 24hrs we hit our $30,000 target. ‍",1,0
207," Strength Running offers a collection of coaching services and training programs for purchase. The main driver of these programs is our community they’re created to address specific, real problems and needs from runners. The process from idea to product includes a lengthy research phase where I’ll read as many books on the topic as I can, interview potential customers, study other programs, and test early versions with small beta groups. Usually, after 9-18 months, a product is ready for launch to our audience. The pricing strategy depends on the complexity of the program, the cost to create it, the length of time needed to build it, market comparables, and some good old-fashioned testing. ",1,0
208," At first, I didn't have a website or anything. I was just talking on Facebook about nutrition when someone came and told me: “Hey, I want to hire you”. I thought of a price that was fair to ask as I had no proof of concept yet and evidence that what I was going to say was going to work. So I just threw a number out and it was enough for them to be incentivized to follow. After that, I gained some traction from a lot of the first customers’ networks. A lot of the people they knew, wanted help as well. I built a crappy website on Wix that helped me display what I offered. People that were working with me would just send their friends to the website and then these people could contact me through email it wasn’t a sales tool. Soon, many people began to ask about my service, but I didn’t have enough time to coach them all. It would have risked the customer service which is essential for business like this. That’s why I started looking for people who could do a great nutrition coaching job and invited them to come on board with me.",1,0
209," Started very bootstrap, given I wasn’t technical and didn’t have many technical friends nor funds to hire someone. Used a combo of Wix and Typeform to create an intuitive experience that wouldn’t cost much to get running. Connected that to Trello via Typeform to create seamless workflows to help operate on the backside. Got a few simple Google Ads up early which led to some early traction on validation. Did this for at least 18 months before starting to bring on a CTO and invest in reinventing our systems. I’m a big fan of just getting something out there quick, get feedback, and see where it goes. See what works and then build it and that’s what we did.  This all worked for a pretty long time, but over time our two main systems, our pack builder/swag picker on Typeform didn’t give us enough flexibility to build the UX the way we wanted to and then Trello as a back end project management tool started to fail from the massive amounts of data and files on it. We had no source of truth of data anywhere and we needed to get that figured out. I still don’t think we’ve truly “launched” up until this day. We started quiet, the first 3 years we didn’t say much, just tried to find customers and help them have the best experience possible. Google Ads helped us test the market and virality helped us scale. I’m a big fan of providing as much upfront value as possible, eliminate friction, don’t charge for things you don’t need, optimize for customer experience, trust, and long term potential. ‍",1,0
210," So the three of us sat down and got into businesses. Initially, we started working on a fun dating app. The hard part came from the fact that none of us knew much about dating. Anyway, it was a great start that made us realize working together came along naturally. One evening, Kasper and I were talking about task lists of the app’s development when one discussion led to another and before we knew it, Kasper and I were working on a “side project” that would later become Swipes. We realized that dating was not of our interested and that what we really wanted was to build the best task list app in the market. Kasper made the prototype in a week, while I was fiercely refining the visual design and Yana digging out information about the market and users. At that moment, our skills clicked. In less than 6 weeks we had our product on the App Store and we saw the first couple of hundred people downloading the app. We were thrilled. We kept improving, shipping and having loads of fun. ‍ Our numbers were growing and online media outlets started to notice our product and praise it for it’s simple and delightful design. The first big media review for Swipes was The Next Web and that’s when we hit our first 10,000 users. We didn’t have a business model at that time. The app was free and we were actively looking for funding. In 2014, we met our first angel investor Kristian Ottosen who put the first check for $35k. We felt like winners. Kasper and Yana, who had just relocated to Bulgaria, started to assemble and build a team. The app was steadily growing and people LOVED IT. That same year we did an integration with Evernote, which was the productivity giant at that moment. Our product aimed to deliver untapped value to Evernote users, helping them sort trough tasks. It was a success. We were invited to take part in the Evernote Conference, winning first prize for Best New Startup. Not bad for a team of nobodies. ‍",0,0
211," Funny thing is, Swoop actually started out as an on-demand service. My parents would lend us the vehicles that weren't being utilized and we would have a few Sprinter vans on the road throughout the weekend. The team downloaded Slack to feel more professional, subscribed to rudimentary on-demand software, and launched what was recognized as “Uber for groups.”  Through this we gained a ton of knowledge while getting a realistic gauge of what the industry was missing. It boiled down to the booking experience. We realized that normal people liked to schedule in advance. Not everyone in the world is a whimsical kid fresh out of a college. Swoop then pivoted to creating a marketplace so mom and pop transportation companies can apply their vehicles to our platform and users can simply book whichever one they preferred. My parents' shop became our first vehicle operator on the Swoop platform. Shortly after we returned the favor by increasing their sales by over 20%. Without my parents and their generosity we would be far behind where we are now. Realistically speaking, we probably would have never started. Moving forward, Swoop is still developing and changing our goals after all these years. We are now focused on creating a community for vehicle operators to engage with each other to make profits from the rides they aren’t able to service. Commonly known as farming-out, this process is a popular theme in the group transportation industry and we’re working to enhance this experience for companies of all sizes.",1,0
212," I was uniquely poised to tackle such an ambitious moonshot effort because I was an Arabic-speaking cargo pilot and Middle East specialist with a background in robotics, software, and entrepreneurship. I reached out to my network immediately and built a grassroots volunteer team to explore the idea.  This was not a conventional startup. We were all-volunteer, not profit-driven, trying to address a complex, urgent, real-time problem in any way possible. My strategy was to bootstrap support by setting and achieving small, incremental milestones, each of which could earn us more support and funding. I used my own money at first. I spent months in my garage or at the local park experimenting with emerging drone technology, while also recruiting and building a team. I was en route to Stanford to begin a Ph.D. in Political Science, which gave me access to fantastic engineers. We also recruited law students and people with nonprofit expertise, who helped us incorporate as a nonprofit corporation. These first months were incredibly difficult, involving dozens of crashes, multiple engineering re-designs, and countless meetings pitching to people who thought I was crazy. The idea was crazy. But we also started flying drones reliably, airdropping packages, and finding volunteers and supporters who saw potential in what we were doing.",0,0
213," Our validation was simple: let the market talk. We followed the tried-and-tested lean startup method. First, we built an MVP ourselves (my co-founder coded it) with no external resources. Then we launched it to the Google Chrome store and began soft promoting it through free digital channels - Twitter, Reddit, Quora, Youtube comments. Within a few months, we had 10,000 users, and that was our validation to say, “Ok, there is a market need, and we have something valuable that people want”. My co-founder Ksenia is a superhuman - she built the entire process. She designed, prototyped, and made our MVP in just a few weeks. It was incredible. I’m lucky to have such a talented co-founder. The biggest challenges were not trying to polish the product too much, finding the courage to put it out there, and getting public market feedback as fast as possible. It was a huge mental barrier because we wanted the product to look good. We had to overcome this internal desire to spend months on the UI and design. In the end, it came down to us deciding to be courageous and click publish.",1,0
214," I built Tailor in PHP because that was the only language I knew at the time. Specifically, I used Laravel. It took me about 2 months, working almost full-time on the project. I learned PHP in middle school and then bought some online courses and books to keep improving and to learn Laravel. The initial product looked like crap, and no one understood the landing page but I kept refining it until I had a better design. I also requested for some design help. There was a major problem though: my maths was completely broken and my product did very little more than choose a random option. As for obstacles when developing the product, I wanted to build a visual editor, but that was super difficult and it was only me. I spent a lot of time trying to build it but, in the end, it didn’t work. ‍",0,0
215," Taleship’s development story was… interesting. In general, building it was very, very fun. I’d spend all day coding Django, and writing a reactive editor using React. Quite the unusual combination, but I made it work! Using much feedback from friends and family, I also refined the user experience and removed most bugs. However, I also ran into a few obstacles while building it. ‍ The first obstacle was picking a stack. When starting out a new project, one of my weaknesses is the stack selection process. I’m always on the lookout for new technologies (they intrigue me!), and this affects my decision-making process when starting out. However, this obstacle quickly became a lesson learned after a week suffering through the ordeal. I just decided “screw it, I’m going with Django”. And it worked very, very well. The new technology I sprinkled to make it magical was WebSockets (using Django Channels). I had never dealt with it before, and using it was a very pleasant experience. Seeing things update was magical! I also got the chance to up my open source contribution game, by helping out with Channels’ documentation. That was also fun. ‍ The second obstacle I came across was time. As a high school student, I was in a situation where the time to make would be minimal and I had to make the most of it. In hindsight, I did some things I shouldn’t have done, like skipping certain class periods for feature sprints (don’t do this!), but my stroke of luck with getting selected for World Finals made it worth it. ‍ The third was marketing. I was completely new to. This one I was not able to overcome, but I learned very much from it. I launched my product on Product Hunt, where it had moderate success. That’s about it, really. I had not learned very much about marketing back then, and that’s something I wish I had done right. All in all, making Taleship consumed about 5 months factoring in the full-time work to prepare for the competition. It was worth it, though. Incredible learning experience.",0,0
216," While the idea for Tali may have been sparked in my dining room, it didn’t get it's true start until one random afternoon a few weeks later. At the time, I was working in Strategic Finance at HealthSparq, a healthcare technology company in Portland, Oregon. It was here that I met two other guys named Matt — Matt Anthes-Washburn, or “AW”, was a product manager and Matt Hoiland, or “Hoi”, was a full-stack dev. During a hackathon at HealthSparq, Hoi and AW had created a chatbot named Charli that would answer all of your health insurance questions based on your specific member benefits (I know, pretty awesome, right?). The ease of the conversational user interface attracted me to this project, and it was our joint passion for conversational UI that initially brought us together. As a non-technical person, I had no idea how any of this stuff worked. To be honest, I was pretty ignorant when it came to technology and just took for granted that stuff like my iPhone did what I needed it to do. But I wanted to learn more about how Charli worked, and also how something like this Alexa time tracking solution would work. So I asked them to meet up after work one day, and I quote, “teach me how AI works” — such a simple request, right? After we got together, Hoi and AW ran through some basics associated with AI in a way that a non-technical person like me could grasp. Then I told them about the problem my wife was having, and the proposed solution I had recommended. Before I even finished my sentence, Hoi was penciling stuff out on paper on how that could work, meanwhile AW was doing what AW ultimately does best — teaching me what Hoi was penciling out, how it would all work, and what it would mean for a potential user like my wife. Within 30 minutes we had a proof of concept sketched out, and I was convinced that we had something special — not necessarily in the form of a product (although I certainly hoped that would be the case), but in the form of a team. You had me, the business Matt. You had AW, the product Matt. And you had Hoi, the technical Matt. So the next weekend, over donuts and blueberry pancakes at AW’s house, we decided to make it official — we were going to start a company together. Idea? ✔️ Team? ✔️ Product concept? ✔️ Funding? Nope. One of the benefits (and pitfalls) I had as a first-time founder was naivety. Once you have an idea and a team, all you need is a pitch deck and you can go out and raise some money, right? That’s what I thought, and so that’s what I did. Hoi (the technical Matt) is not only an all-around coding ninja, but he’s also a top-notch designer and creator. He shot a high level product demo and some other footage, which he edited into a professional-looking 60 second video that I could share with investors (click here to see this original video). In addition, I prepared a 15 slide pitch deck outlining what we were trying to build at Tali. With these two things, I started sending every early-stage VC a cold email asking for a meeting. The response rate was, in one word… *sigh* underwhelming. This isn’t surprising — I was a first-time founder, we were pre-revenue and had nothing more than a product idea and a team that I *thought* could build it. But then we experienced our first bit of good luck…I got a response from an early-stage VC out of Los Angeles and we scheduled a phone call. I spoke to one partner for an hour, and he then referred me to his other partner, who I spoke with a few days later. Two phone calls with two people a few days apart. I got a term sheet the next week. They wired me $150k the following week. All of this without ever meeting in person, just two phone calls…this fundraising thing isn’t so bad, eh? Wrong. Wrong wrong wrong wrong. Turns out fundraising was a giant pain in the a$$, and I heard “no” more often than I heard “yes”. I’m not going to get into fundraising here, but we ultimately went on to raise ~$750k in total to fund the business (round was rolling, so we collected one check at a time from a variety of investors over the ~2.5yrs we were in business), but this first check and investor is what made all of that possible. We started the company in February 2017, received our first investment in June 2017, and launched our paid beta product in September 2017, six months after we initially got started. In terms of actually building the product, my two co-founders (e.g. Product Matt and Technical Matt) did nearly all of the work (we did use some contractors as well, who were close friends, so we knew their work was quality). We considered outsourcing some development work but ultimately determined that managing an offshore development team would be more time consuming and actually give us less control over the product and codebase then we wanted. Our strategy at Tali was to get a paid product into market as quickly as we possibly could. We wanted to do this for two reasons: Technology risk — we wanted to prove that our solution could work end to end, meaning you could log your billable time with Amazon Alexa and get that time entry into your billing or invoicing system, all without manually filling out a time entry form andMarket risk — we wanted to prove that people would be willing to pay for this type of solution On the front-end or input side, we started with a focus solely on Amazon Alexa (we later added Google Assistant). In addition, we built a simple web application that a user could access online to see all of the time entries they captured with Tali (we called this the Tali dashboard). Last but not least, on the invoicing side we started with an integration approach — rather than build our own invoicing and billing system (which would require a lot of engineering effort and take time), we chose to integrate with Clio, a legal practice management solutions (we later added PracticePantherand Rocket Matteras integration partners as well). We went to the market at a price point of $90 for a three month subscription (or $30 per month). This price point was higher than our competitors, but we didn’t focus on this — instead, we looked at the value we were delivering to our user. If a lawyer bills out at $300/hr then each six-minute increment of their day is worth $30…surely Tali could save you more than six minutes over the course of a month! We included a free Echo Dot to sweeten the deal for our customers, but also to avoid the objection of “I don’t have a smart speaker for my office so I can’t use this software.” This product — the Amazon Alexa skill, the Tali dashboard, and the Clio integration — priced at $90 for a three-month subscription (with a free Echo Dot) is what we launched in September 2017 at the Clio Cloud Conference in New Orleans…and people loved it! 💜 By December 2017, our paid user base had risen to 101 people from all across the globe. At $30/month, that’s $3,030 of monthly recurring revenue (MRR)…not bad for a product built mostly on nights and weekends by a team of three! We launched, and then we realized we had a problem. When a user created an account and submitted their credit card information for a $90 purchase, which got them three months of Tali, they were making a unique, one-time purchase. We never built in the functionality for the subscription to automatically renew. 🤦‍♂️ This meant that everyone who had signed up would need to submit their credit card information AGAIN, or a second time to keep their Tali subscription going. You’re probably cringing right now, which is the appropriate response. This meant I had to reach out to every person, all 101 people, to ask them to submit their credit card information again. I e-mailed 📧 I called ☎️ I e-mailed again 📧 I called again ☎️ After all was said and done, I managed to get 22 people to submit their credit card information again. Let me do the math for you — that’s a 78% churn rate…ouch. 😟",0,0
217," We shared our MVP for the first time with friends and family in August 2020. Our MVP was a very basic version of the form builder, you could insert questions and that was it. You couldn't even publish a form. We didn't have an extensive network of our own, so we started sharing our first version of our form builder with the people closest to us. After processing their feedback, we started with cold outreach to creators, Indie Hackers, and startup founders who might be interested in our product. We scanned Product Hunt and Twitter, made lists of hundreds of prospects, and started doing cold outreach, asking for their feedback. Often without success, but those who did take the time to reply became part of our community of early users and ambassadors. We kept our pricing simple and didn’t want to bombard our users with countless limits and paywalls. Tally is a freemium product, 99% of all features are free and you can create an unlimited number of forms and collect unlimited responses for free. Why so free, you might ask? We were entering a competitive market, and offering free forms without limit is one of our main differentiators. We launched Tally Pro (at $29/month) a couple of months later with a set of advanced features aimed at teams and startups.  We launched publicly in March 2021 on Product Hunt and shared a checklist of how we went from MVP to Product Hunt launch. Our launch was a rollercoaster and we ended as product #4 of the day. We doubled our user base (from 1,500 to 3,000 users) after the launch and Product Hunt has been an instrumental step in gaining exposure. ",1,1
218," We wanted to first test our thesis: that tailored interventions would actually help people take their medications more regularly, and that people would be interested in that help. We recruited 120 American adults on Mechanical Turk, all of whom took medication regularly for a chronic disease and had access to a cell phone, and ran an SMS-based pilot for six weeks. We segmented the group into six categories: Control: SMS medication reminders onlyLogistics: reminders + help refilling medication, pill organizerSocial: reminders + support group or help from a companion (e.g. spouse, family member, friend) via SMSFinancial: reminders + lottery incentives based on adherenceKnowledge: reminders + content about their medications and chronic illnessesTailored: all interventions We built a custom admin tool to help us manage sending and receiving SMS through Twilio, wrote custom SMS content, and constructed an automated system to send out reminders, replies, and scheduled content. We also asked participants to complete pre- and post-study surveys, which were compensated. User satisfaction was high throughout, the dropout rate was surprisingly low, and we observed that intervention groups - particularly the ""tailored"" group - had improved adherence (adherence improvement was almost 2x the improvement observed in the control group). Many of our participants appreciated the various interventions we delivered: It was a really good thing to have my daughter involved. It was a bonding experience I felt that she learned more about my illness (diabetes) and she helped encouraged me to learn more, too. And when she sent me those little notes of congratulations about doing well taking my meds, well...that was priceless!My wife was able to get plugged into the medication discipline without feeling that she was nagging me, so it was positive.I will be very sad to see the daily reminders go. I will have to re-install one of my alarm apps, and they just don't have the same effect.After reading the lesson, I think twice now about eating a sugary product. The damage that sugar can do is a real eye-opener.I kinda missed getting the text the last few days, it made me think about why that was. I think this texting service would be perfect for an older person, living alone. Not only as a reminder to take their medications, but to make them feel less alone while dealing with their health issues. I'd even consider volunteering to work as such a service if there was one nearby. Based on these results, we felt we were moving in the right direction, so we decided to build an initial MVP of an app that would begin to deliver these same interventions. We picked social support as our first feature. We offered the app for free and planned to grow a base of free users. As we built out the product, our monetization plan was to partner with pharmaceutical companies and payers (e.g. insurance companies) who would be interested in solutions that would be adopted and can genuinely improve adherence. We designed and developed Tandem, an iOS app that offered medication reminders and also allowed you to specify a companion who would be notified by SMS if you didn't take your medication. ‍",0,0
219," I built the original website in WordPress. Right at the very start, it was a WordPress website and a Gravity form. A big Google Sheet was running the whole operation, and Zapier automated the process of matching up teachers, getting updates from them, and sorting out payments. After some time, I migrated away from that Google Sheet and built a custom backend using Bubble.  We were constantly battling in some cities. There were loads of teachers, but not too many people looking for teachers, or at least not looking online for them. The reverse happened in some cities. In Germany, we always had plenty of German teachers and English teachers, but we had a surprising amount of demand for Spanish teachers. We didn't have many teachers. In Hamburg or Munich, we came to find there were only two or three really good, full time working private teachers. But they had more students than they could handle. We had a lot of students contacting us we simply couldn't help. It was very hard to scale. In some cities, we will try to bring in more demand, and in some cities trying to manage more supply. Keeping that seesaw balance was difficult. ",0,0
220," Influenced by the Lean Startup book, I tried to first validate the idea. So I created the video mentioned above, put it in a simple landing page and invested a few bucks in Google Ads. The landing page offered a free trial call to action, but when the user clicked, the user was redirected to a Google Forms explaining that it was not ready, but they could leave their email to know when it was.  The ad had a very good conversion rate (maybe 20%? I don’t remember). Any sensible product manager (as I am now) would then get in contact with those people to understand their pains. That was my first crucial mistake: instead of talking to those interested people, I judged the idea validated and went searching for ways to build it. Big blunder. I reached out to a very entrepreneurial friend of mine. He then presented me to 2 other guys from his network. They were brothers and had a web development shop. We 4 decided to co-found the company literally over a cup of coffee. This was my crucial mistake #2: choosing a co-founder should be something as careful as choosing a life partner to spend your life with and have children - because if things work out, you will. But here is the deal: of us 4, I was the only one full time in the business. Also only one of us was technical. Worst still: he was an engineer, but he didn’t join to develop software, he was used to managing, not to coding. So what happened then was that we had to hire a web developer and start paying him, while the four of us didn’t add much value. Do I have to mention this was a recipe for disaster? But there is more: then we spent ONE YEAR building the app without any customer feedback. So this is what happened after this one year of development: we launched, had around 100+ free trials and ZERO sales. Oh boy...",0,0
221," I got the idea for The Agent Nest in late October of 2019, and we launched on January 1st, 2020. I worked with my cofounder to let him know my vision for what I wanted everything to look like. We drew out each website page on sheets of paper, and we started as a no-code SaaS. After we started to grow a little bit, we decided to implement coding, and we now use Vue and C#. Since I have had previous experience with running a similar company, I found that the money to get started didn’t amount to any kind of exorbitant fee. It cost around $500 to get the business up and running. We ran into a few obstacles. For example, when someone signed up we wanted to make sure they knew how to use The Agent Nest, and the first few people who signed up were a little lost. It is pretty easy to use, but at the same time, we wanted to make sure that everyone understood all of the features we had to offer. To alleviate this situation, we created a landing page that everyone was redirected to as soon as they signed up. On this landing page, we inputted a video that I created that was a walk-through of the platform. We didn’t take much time as far as launching goes. In the past, I have attended real estate conventions, and I also had all of the information from my past clients. I had an email list of around 1,000 people, so right when we launched I sent out a mass email to them to let them know about my new product. What’s great is I knew each person individually and have met them before, so we had some signups from that group of people due to the trust I had built with them. After that initial email, it slowed down a bit, but in March it blew up due to an ad I created for Facebook. ‍",1,1
222," The advantage of starting a service company is we didn’t have to invest a lot upfront or raise money from investors in order to develop a software or hardware product. Our product is our human capital.  Our pricing strategy is simple: we want to provide the best value. All of our competitors charge as much as we do. That’s because the Australian government sets the pricing of the healthcare program we provide, which are called home care packages. In other words, each home care package level includes a set amount of government funding. However, the services that are included by each home care provider can vary greatly. We offer more hours of service for the same care. So while the cost is technically the same on paper, the value we provide is much greater.  ",1,0
223," I initially started by finding some business partners. I knew that I wouldn’t be able to get the loans out I needed by myself. After we gathered and all worked out our individual loans, we pooled our money and began building.  We did everything on an EXTREMELY tight budget. This meant fine tooth combing almost every aspect and finding the most affordable means of achieving every goal (this became known as doing it “Cave style” between us). That’s not to say the equipment we purchased was bad, but it was always on a budget. We were worried about stepping really deep into it without being able to 100% ensure our methods would work. We built each of the 10 PC’s by hand, ordering parts from the cheapest locations we could find. Those PC’s lasted the full 4 years of operation.  Through our time being open, our focus was always smaller upgrades as we felt comfortable. When we had more people using our board game tables than we used to be able to seat, we upgraded our tables and seating to be more functional and space efficient. When certain games weren’t playing or selling as well, we moved them on as quickly as possible to maximize retail space for only current best-selling items (where possible).  When we found the first location to be overly full and capped out with customers, we moved to a new location. We only made changes once it was past the tipping point. This kept our setup constantly changing and flowing with what worked. Initially, the business plan was a gym membership style model, but this quickly changed as we heard from our original (and small) community that they would only be willing to pay for use of the electronic items, rather than the “analogue” stuff like board games.",0,0
224," Once we have decided that we were getting on this new project, I carried out a market research and found that it was completely fragmented between a few big organized players.  Anyway, we went ahead with the idea and created an online menu and got into contact with a few professionals from the F&B sector. One thing that was tricky to carry out was the design of a good packaging. It took me a lot of time to sort with multiple vendors. We also designed some assets to promote our business, such as flyers, posters, banners and stands. With the positive feedback on the sample tasting and menu, we were clearly ready to go. You can check our website here, and our marketing efforts on this Zomato article and this Facebook Page. This whole process took us 3 months of intense preparation. This included the following steps: Incorporation of the company.Hiring a creative freelancer for branding.IT outsourcing for the website.Photo-shooting of food.Menu finalization.Building marketing assets (packaging, brochures, carry bags, posters, banner standees).Outsourcing delivery and cook. We hired one for each.Preparing a dress code for the delivery boy.Negotiation with food platforms such as Zomato and Swiggy. Both websites are discovery platforms which help the customer find and order food from thousands of food shops.Shortlisting influencer marketing partners for social media. ‍ The whole process listed above lead us to the launch stage, which was clearly the fun part. The real challenges surfaced only afterward. The pricing of our food was the biggest puzzle to solve. We were clearly not close to the market benchmark, the current price consumers were paying to get a meal, which was around 1$ (70 RS). Our competitors were selling the meals much lower than we. The only 2 ways we could solve this big problem was by achieving economies of scale, which meant to have thousands of customers so that our costs of producing a meal reduced, or to re-use the packaging of the delivered food. Both of them were not possible options. After working out a basic profit margin, we decided to price our product at $2.5 (150 RS) the vegetarian meals and $3.5 (200 RS) the non-vegetarian meals.",0,0
225," Initially, Thepresence description called Project Orca was written in 2018 and featured much more than just the website builder – there was the blog module, the e-shop functionality, and even the opt-out hub where all the published content of all Orca-powered websites should’ve been displayed. I saw that YCombinator was accepting ideas and I decided to submit mine. Either because I had no previous experience with how to make your submission attractive or the initial idea wasn’t good enough, my submission was canceled. I wasn’t worried about that because I was submitting it as an experiment, just to see what happened. I decided to build it myself then. I read The Lean Startup and decide that it was better to strip the idea down but actually ship it than eventually face the fact that I alone couldn’t build such a complex product. So I reduce the functionalities to just the static website builder with blocks that allowed publishing the website with a custom domain name. Later on, I decided to reduce it even further to just the HTML exporting. All the products I’ve launched were built by just me, so I decided to design everything myself. I took the design courses by Calarts and got some practice designing sample mockups. Later, as I was browsing Awwwards for design ideas for the blocks, I realized that I only had the experience to copy them at best, but not to fuse the ideas I was seeing into universal blocks that could be put together in arbitrary order and still work as a website. Maybe this time I should hire someone. I have a friend who is a great graphic designer and he also prefers modernist design language. I saw a fit and hired him. I had the experience of working as a team leader, so I knew how to manage the process to make the whole experience not frustrating for the designer. At this time both my depression and a so-called treatment with neuroleptics made the further work process impossible. I abandoned this project and quit my actual job.",0,0
226," First of all, I planned to build the tool as quickly as possible. I gave myself two weeks for research and one month for development. Also, I started to think about finding a co-founder. Remembered a good friend, Alex, who probably would be interested in the idea. I pitched him my vision and we became a team of two. We started talking with few known marketers who work regularly with influencers and got insights about their pains and the daily time wasted trying to measure the success of their campaigns. Then I started to code the product. Alex created an awesome landing page and we did calls every couple of days about new features, priorities, and pivoting options. In the beginning, the hardest part was the UI. Another issue was getting data from TikTok. They don’t have an official API and almost all tools and libraries found on Github were unstable. But we found a way to automatically get the data from what was displayed in the app. Two months later, we went live.",0,0
227," We had the Filmamora codebase and I had a lot of experience in the concepts as I’d been running Filmamora for a few years by this point. We had a small warehouse in the Los Angeles area that we ran all the logistics from. We had a very spiffy toy cleaning device. Toy cleaning was the #1 concern of our customers. (top tip: listen to your customers! it’s not about you, it’s about them.)  ",0,0
228," I will always remember the first days working on Trackin. Looking for the right name, right domain, right design. I spent about 3 days working of the first version on the logo, and my computer crashed...my work on Photoshop was all gone before I got a chance to save it...Worst day of my life at that time, and first lesson learned...Save your work ALL THE TIME. I pitched the idea to a few people and a friend decided to join the journey as a backend engineer/DevOps while I’d take care of the rest. After a few months building the MVP, I’ve traveled to meet with restaurants, collect data and improve our tech and features. The first time I tried to show the product to restaurants, I was petrified. I felt like my baby, ideas and product were about to be judged for the first time. Fortunately, people liked it. Then, in order to scale, I needed to find money to hire some people. We won some French national contests, got money from the government, loans, banks, and other European awards that gave us enough to hire people. Unfortunately, my friend decided to leave the startup to focus on his full-time job instead of Trackin. ‍ With all the excitement around us and my knowledge of the food space, I decided to take over his role as well and kept working on Trackin as a solo founder. After six months of improvements, and a couple of press release, I closed our first paying customer (which wasn’t even a restaurant but an alcohol delivery company at night) and things became real. I officially incorporated the company and hired interns to get things going. Dealing with inquiries, marketing, and sales. The first version looked okay, but pretty bad for my current standard, and the new generation of employees was able to use it pretty easily. I’ve always enjoyed showing the product to someone and just stare at how the person would interact with it, where he would struggle, what kind of questions he would have...at that time there weren’t yet online tools to record the online experience and stream it back at you ) ‍ I will always remember how I was answering to calls from my first customers at 2 am. I would be pushing code and new Android apps based on their problems the minute we’d hang up to keep them happy (like connectivity issues, UX, etc.).  Our first pricing model was to charge per driver tracked on the platform, kind of salesforce charges for number of seats, but it didn’t make sense for restaurants. Then we decided to charge per deliveries. We felt like it was easier to convert restaurants this way because if they were just launching or were small, we were helping them grow faster, at a lower cost. If they were already established, they would pay more because they use us more and would improve their service, brand, and efficiency. When I’ve started, I knew nothing about sales processes, but I’ve learned by talking to people with more experience than me. Then I started to execute. We grew 10x in 4 months and I got lucky enough to sit down with Michael Seibel in my city (Lyon, France). After having dinner with him and sharing my story, he invited me to apply to YC. I didn’t think twice to jump on the opportunity, rented a house in San Jose, left my life in France, sold my furniture, gave up on my lease, prepared my employees, and moved back to California...Then I went through the program, learned a ton, fundraised enough to survive and then started to work on MobyDish.",1,0
229," We’re still building Tuff! We have five full-time employees and aim to double our team size by next year.  It’s been an iterative process and one that we’re building on each day as more people join the team. I think, as your business grows, so does the complexity of hiring the right people. And finding the right growth marketing talent can be a huge obstacle. That’s why we’ve really put time and resources into the way we hire and grow the team at Tuff. The more diverse our team is, the more inclusive we can be in helping startups drive meaningful results.",1,1
230," About a week went by between the idea and the launch. On the tech side, there was Tibo and another dev who ended up not wanting to get more invested in the project. And on the product and marketing side, I did my best. It took a few days to build something very basic but usable: a searchable tweet library and a sign-up flow with the ability to pay. We set out for a price of $9/mo, thinking we were being super ambitious (spoiler: we weren’t). And we launched. On Twitter and Reddit, basically. Immediately we started getting sign-ups and a few paid customers. Tibo and I believed we were on to something and decided to spend all our time on it.",1,0
231," We knew it’s important to validate our idea before jumping into coding. We followed the “The Lean Product Playbook”, we create personas with their struggles and needs. We work to refine the feature list that we will build to our MVP, we also created a landing page and sent cold emails to professional streamers. We got few responses from streamers who recognize the problem from their daily routine, and a lot of silence from others. Taking all we learn from that week, we jumped right into coding, using Computer Vision algorithms and OCR to detect objects and text on the video, setting up our environment on Amazon servers and Lambda functions. We worked on it for three months, writing code and nothing else. We loved it! We had no knowledge in Computer Vision so we needed to learn it from scratch. We use Node.js and found a great open source library for Computer Vision, Opencv4nodejs, the owner of the library was very helpful and kind, thanks Vincent Mühler. He helped us get started and after a few weeks, we were able to analyze a video stream from different perspectives. First, we tried to figure out what is currently happening in the game so we started to look for text messages that were displayed in the game such as “Victory Royale” in Fortnite, this way we knew that we have detected an interesting message, the streamer won the game. Another perspective was looking at the messages frequency at Twitch.tv chat, we figured out that when there is an anomaly in the average messages per second, something interesting might have happened and the viewers are going crazy. So by combining those and some other “secret” indicators, we have figured out pretty well what are the interesting moments and extract them. We still had a long way ahead of us, but we minimize editing time of a stream from ~12 hours to ~4 hours! Three months in, we wanted to get some beta testers, but we failed to make connections in the streamers world. The streamers who were willing to talk to us before didn’t answer our emails now, and it was hard to find professional streamers to try our product in other social networks. It was our first obvious failure. ‍",0,0
232," The MVP of Unicorn Platform was built in just 160 hours. I have explained the whole journey in this popular article. The biggest question in developing an MVP was to decide when to stop.  We imagine our future product so huge and grandiose and scalable and powerful and and…  But in reality the simpler your MVP is the better. It is hard to shut up your inner Steve Jobs, but it is required if you want to deliver real things, not words. I had a solid experience in the market. And I knew exactly the amount of features which would be required to start sales. Thus, building the very first version of Unicorn Platform was a breeze (~˘▾˘)~ The next step was to launch the newborn project. I published Unicorn Platform on Product Hunt. Yet I was sure about the product quality and its market need, I did not know how good the sales would be. In case of zero or low cash flow I would need to get back to a desk job. So I crossed my fingers and clicked “publish”. The crowd was awed by the quality of the MVP version of Unicorn Platform. That launch brought me $5,892 of subscription sales and $9,271 in lifetime deal licenses sales. As I said, living costs in my city are low. This is why the sum was enough to build a more powerful version of the website builder which is now available to the world and used by thousands of users.  Let’s talk more about it 😄",1,0
233," I first invested in a really expensive course (around $2k) which taught me how to start a consulting agency. It was a large sum of money to me at the time, and I wanted to get back my return on investment. The initial idea was generating leads for RE agents through Facebook. I then also began sending cold emails to try to land deals. It was through a lot of trial and error, that I kind of struck cold.  My cold email copy and strategy could land a 10% call rate.  It was a unique experience as I was pitching to New Zealand real estate agents from Singapore. I realized I was no longer restricted by my geolocation as I could land cross border deals. However, I soon started to get demotivated as I couldn’t hold a sales call for more than 5 minutes before prospects hang up. I didn’t have the skills or system to close deals. So one thing led to another and I met an M&A advisor on a FB group who became my accountability partner while snooping around in Facebook groups. He introduced me to the Sandler sales system and taught me a thing or two about closing deals. Soon, he decided to hire me to help him out with his firm. Things took off from there, I knew a lot more about this niche itself and I knew the main problem these M&A advisors faced. I went 100% into it because I realized I could solve their problems.",0,0
234," We launched a landing page with an explainer video and a signup form, and we asked people to sign up if they were interested in such a product like Upvoty. That product validation was straightforward and something I’ve learned from the Dropbox story.  Within 2 months, we had over 300 sign-ups and, mainly because we also wanted to build the product for our own, we decided to work on it. Most of those signups came from communities such as Indie Hackers, Product Hunt, Makerlog, and platforms such as BetaList. Besides that, we launched a couple of eBooks, went all-in on content marketing (blog), and did a lot of interviews (which not only boosted our brand, but also our SEO rankings). I also shared it within my network (back then I had a pretty big following base on both Instagram and YouTube), and I participated in FB groups a lot, just to attract some first beta users. Within 3 months, we built a first version, which was a very slim and basic version of what the product is today, but it had everything we needed to go to the next validation stage: How will our customers use it. The actual validation came soon after our first public launch: Paying customers! From that moment on, we kept listening to our customers (of course by using our software) and started building features based on their needs and pain points.",1,0
235," We already decided we wanted to do a pre-order launch to get our first students. And that the masterclass should cover songwriting, recording, and mixing. The masterclass is called (from) Zero to Radio Ready and enrolment starts at $249. Robin initially only created a fraction of all the course content. And I used a WordPress page builder to quickly design a pre-order landing page. When validating a product, you have to be careful with your time in case your hypothesis doesn't work out. For the course platform we used Teachable and for the email, we used Robin's existing ActiveCampaign account. Around October 2017, it was time to start the pre-order phase. Together, we wrote seven emails that were spread over one week. Included in the email automation, was a 30% pre-order discount that would disappear after the pre-order window was over. Nothing fancy. The pre-order did roughly $2000 in sales and we ended up with 12 students. That was enough validation for us! In the weeks after that, Robin focused on finishing the course, while keeping our early students engaged in the process. Here's what the first version of the course looked like in Teachable. I shifted my attention to designing our homepage, and a new sales page. Also, setting up different tools like BigPicture for tracking our marketing efforts. Remember that we were limited in our time because Robin had to work on his main business, and I was mostly occupied by freelance clients. Luckily, the early pre-orders gave us a bit of runway to pay for the tools and our time. ‍",1,0
236," Once we had the initial idea, we started an extensive SEO planning session to figure out the best way to lay out the structure of the website for maximum footprint. This wasn’t very hard and we quickly moved on to designing the first version of the website with all the proper URL structuring. ‍ Our plan to overcome the marketplace chicken and egg problem We were facing a classic chicken and egg marketplace problem: you need listings to show to visitors, and you need visitors to book listings.  Luckily, finding listings wasn’t hard on Craigslist. We simply emailed the owners and asked them if it would be alright to list them on our website. Most agreed, but this was not a quick process. In hindsight, I would have asked someone to scrape all the listings and bulk emailed them to see which ones permit us to enable them live. But, since we were both non-technical, we decided to just manually add listings one by one for quality control.  ‍ To get the back-end set up, we hired out a developer that we knew from previous engagements. He had no trouble setting up a great functional backend. This, of course, cost significantly more than having to do it by ourselves if we had the chops.  The process of hiring out a developer, however great the outcome was not without issues. For one, I was not a great project manager at the time and did very little in terms of properly overseeing development time frames and getting a basic version shipped fast. Looking back, making a custom back end was a terrible mistake. We should have simply looked at existing options like WordPress. This would have saved a lot of time and money and allow us to start testing our ideas quickly. The other challenge of building this out was a problem brewing under the radar. Having decided to go into business with my friend was a great mistake, but one I did not realize early on despite everyone saying “never go into business with friends”.  I had no idea what was happening with my friend at the time but noticed a lack of enthusiasm as the work dragged out over months. Despite onboarding some rental property owners, we had a hard time staying enthusiastic. Our monetizing strategy was to first seed the platform with listings, wait for SEO to pick them up, and then use other websites to acquire traffic (while SEO started heating up slowly).  The plan was for most of the money to come from property listers who would eventually see that the website had a lot of activity and the price could be justified by the number of visitors to the site.  This too was a terrible idea. Property owners do not care about your website traffic, they care about bookings. We could have just as easily charged per booking and hustle to drive traffic to their listings. We didn’t even need a website!  For some reason, the obvious solution just didn’t click. All we had to do was make deals with the property owners to get a cut from a booking if it came from us. Then use our affiliate marketing chops to drive traffic to their listings (via our landing pages). Instead, we took the long route that eventually went nowhere.  Building in public was not a thing at the time and we did little in terms of promoting the project. My daily routine was pretty dumb - scour Craigslist and email listers to get their properties on our site. It was a time-consuming process that eventually drained me of all my savings. ‍",0,0
237," The website went through 5-6 major iterations in the first year and a half. We originally went vertical agonistic, but this was a huge error.  It would have been so much easier if we went all-in on startups from the beginning. Probably would have been two years ahead of when we are now.  Learning: Specialise, and then broaden out only once you have obtained some kind of product-market fit. Classic YC lessons like validate with a small group of users first appear true, and Peter Thiel’s idea of starting with a small concentrated market and then seeing bigger markets as larger concentric circles over time was also very correct for us. I think we had only two clients in the first year, which is not something everyone is prepared to go through. It’s an extremely tough life for the first 1-2 years, and that was with us working 12-14 hours a day on the regular. We ran ads with almost no success. The best way of getting new customers was honestly knowing what they looked like, and reaching out to them with a highly personalized note on why our collaboration would be beneficial whenever we came across them.",1,0
238," I read Robby Martin’s The Hockey Stick Principles just before we started brainstorming Viewst. It helped me to figure out how to work on the idea and prioritize market research. Initially, I just invited two members of the team to brainstorm and to describe the prototype in words – the product designer who had experience in banner making, and the CTO, who helped us to understand the tech limitations. The second step was to create the product interface in Figma and to describe the logic and the workflow. I also interviewed a lot of our existing clients in different countries about their production pains and wishes, and the major risks stemming from these constraints. As soon as we finished our Viewst Figma mock-up, we again approached our clients, this time with a stress test. Fundamentally, we needed to ensure that our concept was consistent with the solution they imagined and desired. We got more feedback and improved our mock-up, and at that point involved additional people to create a prototype. It took us three months to develop this very first version. It was so simple and imperfect that I felt physically uncomfortable showing it to investors and our first potential users! But I did it as I knew that if it sought to address a real market pain point, early adopters wouldn’t punish us for the user interface but would tell us whether they liked the overall vision. Another book that encouraged me to go out with the prototype as soon as possible was The Lean Startup by Eric Ries. As you can see, with Viewst we have engaged with our users and prospective users from the very first day. This has helped us to navigate our development, be agile, and as a result, build a solution people use and like.",1,1
239," We spent 6 months building the first version of Vimcal before introducing it to the world. Designing and prototyping the product was one of the most fun and creative periods of this entire journey, mainly because we were building a product for ourselves for the first time. Decisions were simple - do we like it, and would we use it? We launched Vimcal in the internal YC forum, and new users found out about us through word-of-mouth. We borrowed a useful tactic from Superhuman: we required a 30-minute onboarding call for every new user. No exceptions.  From January 2020 to October 2021, we onboarded thousands of users. This means we could watch everyone use the product for the first time, tell us in person what they liked and didn’t like, and forge a personal connection with our users. A side effect of this decision is that talking to customers is now a part of our company DNA. Every employee at Vimcal has personally onboarded at least 100 users and has a dedicated on-call time every week to respond to support tickets. As a result, our team is especially good at listening to the user and knowing when to ship something better than what a user asks for. Vimcal works on desktop for GSuite users. We hope to expand to iOS, Outlook, and Android in the future. ",1,0
240," The best products come from solving your pain-points.  As a +20 year product designer, I wanted to solve my own problem. Every time I had a new web project, I kept having to manually create a visual sitemap for myself and my clients just to get an idea of the scope and page flow. I also had to manually take screenshots of key pages to later use for reference and in my proposals. I looked for a modern solution that would provide the same professional output I was used to making, and there was just nothing out there. So we built it. It took almost 2 years.There are some markets in which consumers demand a lot but are willing to give little in return (by not being constructive, providing feedback, etc). That was, fortunately, not our case. This product is catering to web professionals who are creating other incredible products, so they truly understand and are willing to provide very detailed product feedback when we reach them. And that’s how we were able to quickly validate our ideas and assumptions. The next major break was to confirm the technical feasibility of the automation I had in mind to build the product, so after some deep due-diligence on the state of browser-cloud-crawling technology...it was clear the time was ripe..but there was a key missing piece.  For this startup, I wanted a complimentary talented co-founder & CTO. In previous businesses, I was the solo-founder and I hired developers as I had enough development knowledge to hire and manage them. However, at the time of starting VisualSitemaps, I understand that being a solo-founder would limit me. I was now a dad and I had to better think about my time and energy needs. I was very lucky when I started looking out for a CTO to find that a friend of mine (Luciano Panaro), who I had always kept track of what he was doing, was available. He was one of the few Argentine developers at that time that had got into a forward-thinking technology early on and had stuck with it. Because of that, he got himself into four startups in San Francisco. That made him work at a totally different level than most of the developers that I was working with locally in Argentina. VisualSitemaps was one of these things that required a very experienced and creative CTO, who was not afraid to look at newer technologies and try them, but at the same time, who was mature enough to avoid getting us into technical debt, which would hurt the business as we started to grow. Luciano was a perfect fit. He, fortunately, joined me and has since done an amazing job. One of the challenges we had from the beginning, for example, was that all websites are built with different technologies and so it was difficult to make the tool work on all of the cases. We managed to build a product, anyway, that worked in at least 95% of the cases. As for the business model, we decided to go with a monthly subscription as we thought that businesses that had monthly recurring revenue were the best ones to have. In the beginning, it was very difficult for us to sell a monthly subscription model because when we launched the MVP, it didn't offer enough MoM value at the time. A lot of first adopters saw it as a pay-per-unit 1x sale. So we had to look way past just the sitemap generation feature to validate the long-term recurring model we were aspiring to. ‍",1,0
241," In the beginning, I tried to code the e-Commerce site using the OScommerce platform but it was a heck. Too much code to learn and write.  Suddenly, someone hacked my website, so I gave it up and looked for an easier solution. That’s when I found Shopify and decided to give it a try. I completely loved it!  With Shopify, I could get my hands off the code and spend more time designing the shop appearance, editing product images and doing web marketing. However, I still wanted to manage the design and template of the e-Commerce. It ended up being a pure loss of time with really bad results.",0,0
242," So from initially deciding, I’d start the brand to actually finding a factory who could produce the kit I wanted to the standard I expected it took about 12 months.  It’s not easy getting clothing samples organized from all over the world when the only bit of purchasing I’d ever really done was speaking to Telecom networks and manufacturers who were all over the sales process.  In the early stages, there was just me looking for garments that fit the quality I wanted in the product.  Then I partnered up with the design company behind our branding for Comms Consult. The lead designer was very much into the brand and how it could grow, ending up being a shareholder another year down the line.  The beauty of having a graphic designer and not a traditional clothing designer was that he saw the garments as a blank canvas and wasn’t constrained by any previous mindsets of what could and couldn't be done on clothing.  The only resources we used, in the beginning, were photoshop/illustrator and a very basic Wix website that Phil (graphic designer) knocked up.  A close friend of mine who ran a small but rapidly growing digital marketing firm said he would help generate sales leads via Google ads before we got the organic traffic increased.  This was great as it proved the concept to us.  Later on, we used Shopify to power the store for a while before moving 100% to Wordpress and Woocommerce. Wordpress gave us the platform to really push the content growth forward.  We ended up at the top of Google for pretty much any search terms surrounding custom triathlon clothing and near the top for custom cycling kit. Which proved to be the perfect place to find people looking for a new kit for their rapidly expanding clubs or even for wealthy individuals who had deeper pockets than most.  Some of the initial hurdles we encountered were around sizing. One obvious area was the ladies’ kit. It became very clear, very quickly that a size 8 UK standard was completely different from the majority of places people bought their clothing from. So, I later found out that some brands would purposely downsize their women's clothing range so they would come back to that shop rather than be a size 10 in another shop. How bizarre!  We had to look at how we could get people to try the kit on before they placed their order with us. As the clothing was manufactured to a bespoke design and printed into the fabric, there was no way to reuse/resell these if they didn’t fit.   We ended up putting together a “sizing sample” pack which would be sold at a heavy discount. Phil also came up with the idea of marketing some of the other products on the design of the samples. Genius! It meant no-one would nick the kit from the clubs but also helped us to increase sales in other clothing as they were trying the kit on.  Pricing we kept this really straight forward. We had a price list from our supplier for all the kit we sold. We just doubled the price on the majority of kit so we would have a 100% mark-up. Some items of kit we would actually triple the price due to the competition charging a premium for that particular item.  We were making good money on the kit, it was the other areas of the business we didn’t manage that great! All of our sales, in the end, came through the website, we would get referrals from other clubs but no matter where you mapped the sales back to it would stem from initial engagement through the website.  We did a massive amount of promotion for the brand, alongside the search marketing we would sponsor GB triathletes and also became the sponsor to a number of great organizations.  We provided kit to the Help for Heroes Rehabilitation triathlon team called Team True Spirit. I still take part in events with these guys as they’re such a massive inspiration.  As well as providing all the kit to the North West Triathlon junior performance group. This was great for the brand as we were helping youth GB triathletes and were very proud to see some of these go through and make the senior GB teams.   We also sponsored Amy Kilpin she was a GB Age group triathlete who was in marketing so would provide us with a great outlet. She would write for some of the biggest publications within the Triathlon world. Again great to be represented with Amy.  One area I was heavily involved with was the North West Textile association. They had government funding to try and help re-shore a lot of manufacturing that has moved overseas over the last number of decades.  Via this, I was interviewed on BBC News and Channel 4 news around the time the Brexit vote had been announced. They were looking for my views on foreign workers and also how we might be able to bring manufacturing back to the UK. ",0,0
243," It came from getting our first client. They needed a new website and some local SEO work. We didn’t know exactly what we were doing, to be honest, but we knew we could learn as we went. Some Google searches (thanks Moz) and we were able to really drive a lot of business for them. That started to shape our product offering at the start, but it took a long time to really get it right... We knew early on that we needed to “find a niche.” But knowing this doesn’t make it any easier to actually gain traction in a specific area. Originally we thought we’d do small ad campaigns for local small businesses. Turns out they are really tough to deal with and have small budgets… We originally called the company “Splash - Online Presence Management.” Or SplashOPM for short… But OPM means to many people “Other People’s Money” and that wasn’t really a good name for us. At one point we had this grand vision of opening a brick and mortar “store” where people could walk in, order digital marketing services, and walk out… That never happened and would have been a huge mistake, luckily some early feedback shot that down. From there, we pivoted and rebranding to Vulpine Interactive. We called ourselves a growth marketing agency and we wanted to work with early-stage startups. The problem there is that they often don’t have great product-market fit and everything you are doing for them is a test. And that’s a lot of risk… Finally we honed in on the channels we felt we were best at - social and social ads - and the market we thought we could benefit the most - largely Ecommerce although we never officially niched down all the way into Ecommerce. We stripped away our product offering - we removed Google ads, SEO, and website design/development. In fact, we removed all creative services from being in-house and would rely on additional partners for video and image creatives, only doing the lightest amount of adjusting the content for our dimensions/platforms. One thing we always knew we had to do was provide and prove immense value with all of our clients. We never wanted to be priced overly aggressively, simultaneously, we didn’t always know how much our services were going to cost us internally - ad campaigns are very scalable, but social media customer service is not. It took a while to realize that it wasn’t that we were priced too low, but that we were working with clients that were too small, so we started to increase our minimum monthly rate to $3,000 and then $5,000. Each client has a lot of naturally occurring cost - reporting, meetings, overhead - and you need a healthy minimum retainer to really scale an agency.",0,0
244," I’ve built many web projects working for various companies and it was and still is something I do really well. So, there was no big issue to pull it all together from hosting/domain/emails to NodeJS/MySQL running on an AWS cloud with proper logging, monitoring, etc. The only thing I wasn’t good at was the visuals, but that was covered as an outsourced task thanks to Fiverr. All in all, I think it took me 3 month of full time (I was supposed to take a break from the last job) and somewhere mid-2017 it was all ready and shiny to let it out into the big world. In terms of obstacles in the process, I think it was more or less all good, without considering 1 thing that took me almost 3 weeks to deal with. It were those email templates and correct triggers...takes ages to think through, find the right service and configure it without risking to get into SPAM folders on day 1 of running the service. Pricing model was an educated wild guess, based on inner gut feeling and position of the sun relative to earth on a given day. To be true, there was no great thinking behind pricing, simply an excel sheet with P&L projections for 6/12/24 months (I knew how to do it from my previous job). Almost forgot, all the expenses were based on my own savings and there was no plan to get into debt to finish this project, so in that sense, I think I was lucky.",0,0
245," There was no business plan in the true meaning of the word. Everything I’ve started and tried back then somehow emerged from experimenting and doing things I’ve liked and when something gained traction and opportunity to earn some money, I’ve got more motivated and put more focus into that. This kind of approach always worked for me because I started micro businesses because I was interested in something and not because I wanted to get rich. I started blogging about waterproof cameras because I was interested into this and I did my research already anyway (to buy one for myself), so there was just this extra step where I needed to organize my thoughts on the stuff I’ve learned and publish them online. If you’re putting something valuable out there and you’re starting getting the traffic, you can always think about the monetization later on. Consistently getting enough traffic on your site is always one of the hardest things that startups are struggling with. There were two plans how to monetize the site: with the ads (think AdSense) and Amazon affiliate program. But first I had to grow the traffic.",0,0
246," For the first 9 months or so, it was just my business partner and me. I started the project using Ruby on Rails. The project didn’t have anything particularly complex but it was big with lots of, let’s call them, modules. I developed the concept of wide and narrow products when working at Watu. Some products are narrow, like Twitter, while some products are wide, like LinkedIn. In a narrow product, you can polish more while in a wider product you need to tick boxes and move on to the next thing. I don’t think neither is intrinsically better, but knowing what you are doing is important. One problem I ran into was the reliability of server uploads to AWS S3 when hosting the app in Heroku. My solution was to move to our own servers, hosting all the files in a GlusterFS cluster I set up. This was a mistake as it was a maintenance nightmare over the years. The day I turned off I was so relieved. I wish that I tried more workarounds to stay within Heroku and S3. I remember we had the first customer up and running sometimes on month 6 or 7 but it took until the middle of the second year and our first hire for us to have the all-important job module that would allow companies to build jobs, shifts, teams, assign staff, track attendance and feedback. At that point, our value jumped and we started onboarding customers very consistently.",0,0
247," We actually built Wavve as an internal marketing tool just before we sold the codebase and IP of the previous company (even with the sale, we were still way in the hole).  We wanted to share audio from our social network on social media but realized very quickly that it isn’t possible to do that. Nick built the initial version of a weekend but it was only used internally. I had to commit images & design specs to Github to update the hard coded templates that were in place. It was a pretty manual process but I was able to navigate it fairly well and use it for social media marketing.  Once we realized the original company wasn’t going to work out, we started creating ‘audiograms’ for podcasters and showing them how it works. We got interested on social media pretty quickly and realized there was a market for this product.  The original web app was built using angular.js, node.js, and mongoDB. We used a few open source libraries including FFMEG to create the animations. The original infrastructure wasn’t extremely efficient as it relied on large EC2 instances behind a load balancer. However, our usage was fairly predictable so we were able to scale it up and down manually as needed.  Getting those first 10/100+ customers was really hard. We relied primarily on direct outreach via cold email and social media messaging to obtain those first customers. Taking the time to reach out directly to customers for a $7/month plan was painful but the insights we gained from those conversations was invaluable. We learned why customers purchased the product and that helped inform our content marketing strategy which started working after about 6 months.  We never did an official launch of any kind. We just pushed the app live and used direct emailing, social media outreach, and constant product development based on feedback. We also learned pretty quickly that podcasters don’t have large budgets (if any), and needed a price point around the $10-20 per month range for this type of product. That meant that we needed to go for a large number of customers to make this a full time gig for us.",1,0
248," We built our first prototype in a month and launched it right away. Initially, we intended to list all the wedding locations and vendors on the map (hence the name WedMap), using the Google Maps API and a custom front-end. It was built from scratch by our CTO Pawel and designed by my co-founder Gian. It was simple and beautiful. But then, we got lost in the perpetual product development, wrongly thinking that MORE is what we need. We quickly realized that the Google Maps API was a limiting factor and after adding more than 100 map pins with infoboxes, the site was loading extremely slow. Thus for the next 6 months, we rebuilt WedMap to look similar to Airbnb. We had a full-featured backend for both, engaged couples and wedding vendors. But everything was buggy, not fully mobile responsive and slow. Pawel was our only engineer. He had only 2 hands and 12h in a day. On top of that, we made a mistake of thinking about having a ‘scalable’ platform right away instead of using more off-the-shelf tools like Wordpress + Themes + Plugins. Our business model changed a couple of times too - from a listing model, to lead generation, to revenue sharing. It’s a whole different story, that perhaps needs another full blog post.  But what was great is that we really enjoyed the whole process. We were optimistic, happy to work hard and really wanted WedMap to succeed. And we were happy to talk about WedMap everywhere we went - we basically flooded the Swiss startup scene with our pitches in every single event we could go to, which in the hindsight, perhaps was also a sign of not having a focus in the right place... ",0,0
249," During my trips to various Tier II and Tier III towns while working with Quess, I discovered that the youth living there were hard-working and ambitious and wanted to consume lifestyle products too. This made me realize this segment's consumption behavior, which ultimately laid the foundation of Woovly. I quit Quess in 2017, and Venkat joined me in 2019. We started Woovly as an adventure experience platform but pivoted to social commerce for fashion, beauty, and lifestyle products during the pandemic.  Our biggest challenge came in early 2020. When the pandemic struck, we had just started getting heavy traction and had over a million users. But travel came to a standstill, and we had to think on our feet to transform ourselves. Our experience with making the perfect blend of content, community, and commerce came in handy and we decided to serve it as a unified experience on our app this time with fashion, beauty, and lifestyle products.",1,1
250," One of our long-term clients approached us with a problem that almost every business struggles with. Their limited customer support staff was inundated with daily calls, which led to extended wait times and increased business expenses. Poor customer experience led to a below-par brand image and a significant loss to the business. As a result, we created a chatbot to address this troubling problem. We planned to build an easy-to-use chatbot and live chat platform based on their excellent achievements to reproduce favorable results for other companies across industries. As a result, WotNot was born. WotNot has been assisting businesses in reducing costs and improving the customer experience since then.  We take pride in our simplistic chatbot platform, which stands out in the crowd of complicated and technical chatbot services.",1,0
251," Again, when I first started, it was more of a side project because of my current situation at the time. I had to work a fulltime consulting job. But while I could, I initially set up a WordPress website and I remember using the WordPress theme ‘detube’. I made a list of features I wanted to add to the site to make it more usable and easier for users to find titles or build their own playlist. I played around with it by myself for a few months, and then towards the end of the year (2013), I was able to find a buyer to liquidate what was left of my gaming business. I got about $49,000 from that sale, and with the additional income from my day job, I felt I had enough to get serious about WURA. So, I did, and the first person I hired was a PHP programmer/coder, and we started adding that list of features to the site. Then I began reaching out to Nollywood producers and movie makers to acquire titles for a licensing fee Some of the major obstacles I faced were dealing with the West African business ecosystem, also having to transact with people thousands of miles away came with its own challenges. Sometimes hard drives would get lost in shipment or sometimes I get the hard drives and it has the wrong content in it. And this wasn’t something you can just drive to the store and return. It would cost $100-$150 to ship hard drives back and forth. And internet connection there, is not strong enough to send very large files through the cloud. So, to reduce risks, I had producers send me hard drives first that contained several movies. Then from there, we chose 3-5 titles that we really wanted. Over time, that saved a lot of money and headache At the time I was building WURA, I also had a successful entertainment blog that brought in enough revenue for me to continue funding the project. I went on to hire a team of 9 people, designers, writers, editor etc. and my programmer was also brought in full time. Hired a mobile developer as well. So, I had a legitimate business. Had the people, invested thousands in acquiring new titles. All was left was launching and executing with the right marketing plan. Or so I thought.",0,0
252," We started as a marketing consulting company for small businesses. During our work with SMBs, we realized a huge gap in the market for e-commerce management systems for small companies - that there were none available. This gave us the idea to build a tool ourselves to help our clients sell more on Amazon through smart data analytics and intelligence ad campaign strategies. Some of the initial obstacles were to convince enough small business owners to trust us to manage their Amazon accounts though we had no prior experience at that point. We were lucky enough to get the first few clients, which led to us testing our hypothesis and making the full-fledged tool. ",1,0
253," The original technology that my co-founder brought to the table was a couple of client-server Java applications that worked only using a static webcam on a desktop computer and standard definition video. It’s original iteration severely limited creative options, and the core tech it was built on was based on video standards no longer in production use.  When we met, he was trying to figure out if there was a market for the original product but had been unable to make any inroads with broadcasters for a couple of years. He had built the core platform and used it in a few broadcast programs in Italy in the early 2000s when the product was abandoned. I dug into the core of the platform to understand if it could be remade for a high-definition, mobile-first world and if so, would that be something we could sell to the market? Our delivery timeline for delivering the mobile product and high-definition video playout were dependent upon our customer having completed their control room build-out and on their completion of their mobile app. This meant we could actually use our initial licensing fee from the customer to pay our developers (and ourselves). With one Java developer, and one mobile developer and about five months of work, we refactored the original product into more modern working beta that was good enough and was still ready before our customer was ready to go live with it.  Because our process included hardware integrations we were literally re-writing the native video card drivers in C++ to get the speed and quality we needed to get low-latency video streams off cellular networks and into HD video mixing consoles within broadcast tolerances while dynamically creating the appropriate audio stream patches for participants and stage crews.  Since several of the hardware pieces would be installed in operating broadcast control booths, we also had to spec out and build a number of high-performance rack-mount PC’s to run the product. Building, installing and integrating the hardware was a task that I did myself for our customer, and included all the follow on support and personnel training on using the product in broadcast programs.  We later added an infrastructure engineer to properly secure out backend services and create some automation around provisioning resources using Ansible.  Building and supporting the platform was incredibly challenging, and most of the time I was the sole full-time employee. Our development team was primarily remote and worked as our funds allowed which was rarely full-time after the initial MVP build. After closing our initial customer, we went on the road to raise additional capital for continuing to build out the product.",0,0
254," In November 2018, I started talking to dozens of young founders who were in different stages to identify their needs. The key problems of these entrepreneurs were the lack of guidance and the lack of peers.  Therefore we developed a 1-year program consisting of the following: Peer-to-peer learning in accountability groups, one-to-one mentorship with a successful founder, and dedicated workshops on experiences of founders and hands-on topics every startup needs to know. We started communicating this offer 4 months after starting to research and in the next 2.5 months, we got 28 committed participants from the DACH region. All of them committed to pay 1,800€ per year.",0,0
255," The onLoop resources were pivoted to Zapstream and technical team got to work quickly. The CEO raised another ~$250k from angels in his network and the whole team moved to work on Zapstream. There was no UI designer at the time, so the technical team was forced to design it too, but they designed and built a fully functioning app in ~2 months. We got the app up and running in what felt like no time, but it wasn’t very nice-looking, likely because it was designed by some older engineers. The technical aspect, which usually is the hardest gap to fill, felt like no obstacle at all.  In a short time we built a live streaming app that worked with custom color filters. The big feature that differentiated us were “Zaps,” which evolved over time. First Zaps started out as a broadcaster-selected 15-second snippet of the live stream that stayed native to the platform. What we quickly found was that live creators didn’t want to spend additional time creating a snippet, it was too burdensome. So, after a few weeks, we pivoted Zaps to be viewer-generated GIFs that stayed native in a gallery after the stream was finished. Viewer-generated GIFs were huge, instantly we saw the number of Zaps created skyrocket.",0,0
256," When we were validating our idea, we started building ZenMaid simultaneously. We had already committed to the idea before doing any customer research. My co-founder was doing all the coding, and I was cold emailing maid services to talk about their scheduling issues. We realized there was a big marketing gap in the industry, which we could fill. Designing, prototyping, and manufacturing the product took us six months, and that’s when we finally got paid for it. We got paid $1000 for lifetime access to the software. We got paid about a month before the product was fully ready to go and could be used. Our significant weakness when we started was that neither of us were designers, and that showed for quite a long time until we did a redesign. Luckily we picked an industry where the design wasn’t too important. We weren't working with designers we weren't working with developers. The standards were decently low as long as the software worked as expected. When the product was ready, we felt no one would care. So, we quietly launched the product and began onboarding people as they found us. We started at $19 a month, quickly went to $29 a month. And then we went up to $49 a month. Over time the pricing strategy has changed. Now we're at usage-based pricing, so we still have the $49 based price, but it's now $9 per month per employee in addition to the owner.",1,0
257," When I started ZenOutreach, I decided to offer list-building and cold email services to everyone. After looking at my most successful clients, I decided to focus only on agencies. This helped us clarify our messaging and gave us a clear strategy as to where to get clients. Crystal clear positioning also helps prospects when considering to work with us vs. the competition. We focus on prospects that: a) Have a minimum budget to spend. b) Have a LTV high enough to focus on outreach. c) Are committed to spending 3 months min. with us. d) Have a strong value proposition. This eliminated a lot of prospects in our discovery calls, but those ready to commit were a much better fit/easier to work with and likely to stick longer with our services because they were patient enough to see a ROI and had a strong value proposition.  Once we identified the right-fit prospects, we made sure to properly onboard them. A few areas to consider: a) Clarify what's your role as an agency (what you do/don't do). b) Explain how much input you need from them + what are the expected timelines. c) Give them best practices to be more successful with your services. The idea is to make clients feel part of your team and your agency an extension of their existing team. ",1,1
258," It all started when the company founder, Paul LeBlanc, was fixing a flat tire on his bike during a long ride. His hands were covered in grease and he had a eureka moment: he needed a wipe to clean his hands and bike. From there, the company started by developing wellness and facility items for gyms.  He spearheaded the initial effort by developing the degreasing wipes and pouring everything into their development, including design, development, and packaging of the degreasing wipes. Funding the development of the wipes was a challenge Paul rented out his home for the summer (and moved in with his parents) to help secure the funds needed. Paul tried several different promotional strategies in the early days. He rented a van and drove across the country from bike shop to bike shop with his wipes, selling directly to shop owners. He also snuck into the largest bike trade show in Las Vegas, giving away free samples of his degreaser wipes as he walked the floor. After a few years of nose-to-the-grindstone, the wipe started to gain traction, and new products were added as the company grew. The first Zogics employee was hired in 2010. ",1,0
